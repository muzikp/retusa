"use strict";var $=require("./locale").call,{filters:filters,validators:validators}=require("./parsers"),schemas=require("./schemas");const{Array:Array,Math:Math}=require("./extensions");var{VectorValueError:VectorValueError,ArgumentError:ArgumentError,Empty:Empty}=require("./errors");const registry=new WeakMap,enums={_numeric:1,_string:2,_boolean:3,_multiple:4,_date:5};function setRegistryProperty(e,t,r){var i=getRegistryProperty(e);i[t]=r,registry.set(e,i)}function getRegistryProperty(e,t=null){return t?registry.get(e)[t]:registry.get(e)}class Vector extends Array{constructor(){super(),[...arguments].length>0&&this.push(...arguments),registry.set(this,{})}type(e){return e?this.constructor.name:enums[`_${this.constructor.name.replace("Vector","").toLocaleLowerCase()}`]}push(){for(let e of[...arguments].flat(1/0))this.parse?super.push(this.parse(e)):super.push(e)}name(e){return e?(setRegistryProperty(this,"name",e),this):registry.get(this).name}weight(e){return e?(setRegistryProperty(this,"weight",e),this):registry.get(this).name}serialize(){return{values:this,name:this.name(),title:this.title()}}clone(){var e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return registry.set(e,getRegistryProperty(this)),e}}const vectorParser={numeric:function(e){if(0===e||"0"===e)return 0;if(e){if(isNaN(e))throw new VectorValueError($("UyOj",{value:e}),{vector:this,value:e});return Number(e)}return null},string:function(e){return e||!1===e||0===e?String(e):null}};class NumericVector extends Vector{constructor(){super(...arguments)}}NumericVector.prototype.parse=vectorParser.numeric;class StringVector extends Vector{constructor(){super(...arguments)}}StringVector.prototype.parse=vectorParser.string;const VectorMethodsModels=[{name:"sum",fn:Array.prototype.sum,filter:filters.number,wiki:{title:"gvdg",desription:"iMbD"},type:[1],returns:schemas.number},{name:"count",fn:Array.prototype.count,wiki:{title:"tdrm",description:"ULJX"},type:[1,2,3],returns:schemas.uint},{name:"avg",fn:Array.prototype.avg,filter:filters.number,wiki:{title:"eFdj",description:"UYJN"},type:[1],returns:schemas.number},{name:"stdev",fn:Array.prototype.stdev,filter:filters.number,wiki:{title:"oUcc",description:"ZgSc"},type:[1],returns:schemas.number,args:{s:{wiki:{title:"eJTq",description:"FfpU"},required:!1,default:!1,type:"boolean",validator:validators.boolean}}},{name:"variance",fn:Array.prototype.variance,filter:filters.number,wiki:{title:"TvQv",description:"sfCh"},type:[1],returns:schemas.number,args:{s:{wiki:{title:"eJTq",description:"FfpU"},required:!1,default:!1,type:"boolean",validator:validators.boolean}}},{name:"histogram",fn:Array.prototype.histogram,filter:filters.number,wiki:{title:"PAwR",description:"AISp"},type:[1],returns:schemas.histogram,args:{maxIntervals:{wiki:{title:"WnZK",description:"FfpU"},required:!1,default:null,type:"number",validator:validators.positiveInteger},fixedInterval:{wiki:{title:"Mnfn",description:"yOuB"},required:!1,default:null,type:"number",validator:validators.positiveDecimal}}},{name:"min",fn:Array.prototype.min,filter:filters.number,wiki:{title:"FkaD",description:"yBlA"},type:[1,2],returns:[schemas.number,schemas.string]},{name:"max",fn:Array.prototype.max,filter:filters.number,wiki:{title:"nKuF",description:"gkep"},type:[1,2],returns:[schemas.number,schemas.string]},{name:"range",fn:Array.prototype.range,filter:filters.number,wiki:{title:"mXxJ",description:"dnzB"},type:[1],returns:schemas.number},{name:"varc",fn:Array.prototype.varc,filter:filters.number,wiki:{title:"uwpU",description:"fUpj"},type:[1],returns:schemas.number,args:{s:{wiki:{title:"eJTq",description:"FfpU"},required:!1,default:!1,type:"boolean",validator:validators.boolean}}},{name:"percentile",fn:Array.prototype.percentile,filter:filters.number,wiki:{title:"fPra",description:"yNbM"},type:[1],returns:schemas.number,args:{k:{wiki:{title:"dBDt",description:"GQpQ"},required:!0,type:"decimal",validator:validators.zeroToOneInc}}},{name:"frequency",fn:Array.prototype.frequency,filter:null,wiki:{title:"dYJK",description:"Tzyp"},type:[1,2,3],returns:schemas.frequencyTable,args:{order:{wiki:{title:"gZCx"},required:!1,default:1,type:"enum",validator:validators.enumValidator(schemas.frequencyOrderEnum)}}},{name:"geomean",fn:Array.prototype.geomean,filter:filters.number,wiki:{title:"louK",description:"PDzr"},type:[1]},{name:"harmean",fn:Array.prototype.harmean,filter:filters.number,wiki:{title:"vpdN",description:"nhJv"},type:[1]},{name:"median",fn:Array.prototype.median,filter:filters.number,wiki:{title:"TzfX",description:"YIir"},type:[1]},{name:"mode",fn:Array.prototype.mode,wiki:{title:"StQx",description:"IBfx"},type:[1,2,3]},{name:"SEM",fn:Array.prototype.SEM,filter:filters.number,wiki:{title:"dLmV",description:"ZBnI"},type:[1]},{name:"skewness",fn:Array.prototype.skewness,filter:filters.number,wiki:{title:"oPPx",description:""},type:[1],args:{s:{wiki:{title:"eJTq",description:"FfpU"},required:!1,default:!1,type:"boolean",validator:validators.boolean}}},{name:"kurtosis",fn:Array.prototype.kurtosis,filter:filters.number,wiki:{title:"oPPx",description:"UOBG"},type:[1]}];class VectorMethod{constructor(e,t){if(t&&(this.parent=t),"string"==typeof e){if(!VectorMethodsModels[e])throw new Error("Model not found: "+e);this.model=Models.vector[e]}else{if("object"!=typeof e)throw new Error("Unknown VectorMethod constructor parameter type.");this.model=e}}get name(){return this.model.name}get fn(){return this.model.fn}get filter(){return this.model.filter?this.model.filter.fn:()=>!0}get wiki(){return this.model.wiki?{name:$(this.model.wiki.title),description:$(this.model.wiki.description),filter:this.model.filter?$(this.model.filter.text):null,applies:[{type:1,title:$("LOYN"),apply:this.model.type.indexOf(1)>-1},{type:2,title:$("zoiB"),apply:this.model.type.indexOf(2)>-1},{type:3,title:$("OkoC"),apply:this.model.type.indexOf(3)>-1}],returns:this.model.returns,arguments:function(e){var t=[];if(!e)return[];for(let r of Object.keys(e))t.push({name:r,title:e[r].wiki?.title?$(e[r].wiki.title):null,validator:e[r].validator?.text?$(e[r].validator?.text):null,description:e[r]?.wiki?.description?$(e[r].wiki.description):null,required:!!e[r]?.required,default:e[r].default||null,multiple:!!e[r].multiple});return t}(this.model.args)}:{}}call(){if(!this.parent)return new Empty($("hKRq"));if(-1===this.model.type.indexOf(this.parent?.type()))return new Empty($("ibNu",{method:$(this.model.wiki.title),type:$(getVectorTypeLabelCode(this.parent))}));var e=this.validate(...arguments),t=this.filter?this.parent.filter(this.filter):this.parent;return this.fn.call(t,...e)}with(e){return this.parent=e,this}validate(){if(!this.parent)return new Empty($("hKRq"));var e=0,t=Array.prototype.slice.call(arguments),r=[];if(0===(this.model.args||[]).length)return t;for(let s of Object.keys(this.model.args)){var i=this.model.args[s]?.validator?.fn||function(e){return e};if(t[e]||0===t[e]||!1===t[e])try{r.push(i(t[e]))}catch(e){throw new ArgumentError(e,this)}else{if(this.model.args[s]?.required)throw new ArgumentError($("dSWt",{name:s,title:$(this.model.args[s].wiki?.title),method:$(this.model.wiki?.title)}),this);r.push(this.model.args[s].default)}e++}return r}}function getVectorTypeLabelCode(e){switch(e.type()){case 1:return"kPSW";break;case 2:return"UQoV";break;case 3:return"WiEE";break;case 4:return"LiPr";break;case 5:return"sbFB";break;default:return null}}VectorMethodsModels.forEach((function(e){Vector.prototype[e.name]=function(){var t=new VectorMethod(e,this);return t.call(...arguments)}}));const Models={};VectorMethodsModels.map((function(e){Models[e.name]=new VectorMethod(e)})),module.exports={$:$,NumericVector:NumericVector,StringVector:StringVector,VectorMethod:VectorMethod,Models:Models};