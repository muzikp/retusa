/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(this, () => {
return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var Vector = __webpack_require__(/*! ./libs/vector */ \"./libs/vector.js\");\r\nvar Locale = __webpack_require__(/*! ./libs/locale */ \"./libs/locale.js\");\r\nvar Matrix = __webpack_require__(/*! ./libs/matrix */ \"./libs/matrix.js\");\r\nvar parsers = __webpack_require__(/*! ./libs/parsers */ \"./libs/parsers.js\");\r\nvar dist = __webpack_require__(/*! ./libs/distribution */ \"./libs/distribution.js\");\r\nvar Schema = __webpack_require__(/*! ./libs/schemas */ \"./libs/schemas.js\");\r\nconst { VectorOverview } = __webpack_require__(/*! ./libs/markdown */ \"./libs/markdown.js\");\r\n\r\nmodule.exports = {\r\n    Matrix: Matrix.Matrix,\r\n    NumericVector: Vector.NumericVector,\r\n    StringVector: Vector.StringVector,\r\n    BooleanVector: Vector.BooleanVector,\r\n    VectorAnalysis: Vector.VectorAnalysis,\r\n    MatrixAnalysis: Matrix.MatrixAnalysis,\r\n    vectorModels: Vector.Models,\r\n    matrixModels: Matrix.Models,\r\n    matrixMethods: Matrix.methods,\r\n    locale: function(locale) {\r\n        Locale.config(locale);\r\n        return module.exports;\r\n    },\r\n    Schema: {\r\n        Vector: {\r\n            result: Schema.vectorResultSchemas\r\n        }\r\n    },\r\n    register: {\r\n        vectorMethod: function(model) {\r\n            Vector.register(model);\r\n            return module.exports\r\n        },\r\n        schema: function(schema) {\r\n            Schema.register(schema);\r\n            return module.exports;\r\n        }\r\n        \r\n    },\r\n    utils: {\r\n        validators: parsers.validators,\r\n        filters: parsers.filters,\r\n        distribution: dist\r\n    },\r\n    docs: {\r\n        /**\r\n         * \r\n         * @param {module} fs FileStream module is required.\r\n         */\r\n        publish: function(fs){\r\n            fs.writeFileSync(\"./docs/cs/vector.md\", Vector.VectorOverview());\r\n            fs.writeFileSync(\"./docs/cs/matrix.md\", Matrix.MatrixOverview());\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack://retusa/./index.js?");

/***/ }),

/***/ "./libs/distribution.js":
/*!******************************!*\
  !*** ./libs/distribution.js ***!
  \******************************/
/***/ ((module) => {

eval("Math.factorial = function (n) {\r\n    if (n === 0) {\r\n      return 1;\r\n    } else {\r\n      return n * Math.factorial(n - 1);\r\n    }\r\n  }\r\n\r\nmodule.exports = {\r\n    betacf: betacf,\r\n    betinc: betinc,\r\n    binomdist: binomdist,\r\n    binominv: binominv,\r\n    chisqdist: chisqdist,\r\n    chisqinv: chisqinv,\r\n    erf: erf,\r\n    fdist: fdist,\r\n    fdistrt: fdistrt,\r\n    finv: finv,\r\n    gammaln: gammaln,\r\n    gammapinv: gammapinv,\r\n    ibeta: ibeta,\r\n    ibetainv: ibetainv,\r\n    lowRegGamma: lowRegGamma,\r\n    normdist: normdist,\r\n    normsdist: normsdist,\r\n    normsinv: normsinv,\r\n    tdist: tdist,\r\n    tinv: tinv,\r\n    wilcoxondist: wilcoxondist\r\n}\r\n\r\nfunction normsdist(x){\r\n    return normdist(x,0,1);\r\n}\r\n\r\nfunction normdist(x, mean, std, cumulative = false) {\r\n    if(!cumulative) {\r\n        return Math.exp(-0.5 * Math.log(2 * Math.PI) - Math.log(std) - Math.pow(x - mean, 2) / (2 * std * std));\r\n    }\r\n    else return 0.5 * (1 + erf((x - mean) / Math.sqrt(2 * std * std)));\r\n}\r\n\r\n/**\r\n * @source https://github.com/jstat/jstat/\r\n * @param {} x \r\n * @returns \r\n */\r\nfunction erf(x) {\r\n    var cof = [-1.3026537197817094, 6.4196979235649026e-1, 1.9476473204185836e-2,\r\n               -9.561514786808631e-3, -9.46595344482036e-4, 3.66839497852761e-4,\r\n               4.2523324806907e-5, -2.0278578112534e-5, -1.624290004647e-6,\r\n               1.303655835580e-6, 1.5626441722e-8, -8.5238095915e-8,\r\n               6.529054439e-9, 5.059343495e-9, -9.91364156e-10,\r\n               -2.27365122e-10, 9.6467911e-11, 2.394038e-12,\r\n               -6.886027e-12, 8.94487e-13, 3.13092e-13,\r\n               -1.12708e-13, 3.81e-16, 7.106e-15,\r\n               -1.523e-15, -9.4e-17, 1.21e-16,\r\n               -2.8e-17];\r\n    var j = cof.length - 1;\r\n    var isneg = false;\r\n    var d = 0;\r\n    var dd = 0;\r\n    var t, ty, tmp, res;\r\n  \r\n    if (x < 0) {\r\n      x = -x;\r\n      isneg = true;\r\n    }\r\n  \r\n    t = 2 / (2 + x);\r\n    ty = 4 * t - 2;\r\n  \r\n    for(; j > 0; j--) {\r\n      tmp = d;\r\n      d = ty * d - dd + cof[j];\r\n      dd = tmp;\r\n    }\r\n  \r\n    res = t * Math.exp(-x * x + 0.5 * (cof[0] + ty * d) - dd);\r\n    return isneg ? res - 1 : 1 - res;\r\n  };\r\n\r\n/**\r\n * @source https://gist.github.com/u840903/08877a0703764c7ed2ba7b9662fcdecb\r\n * @param {Number} value Probability value. \r\n * @param {Integer} type Type of probability value. Default 0 (0.95 = 1.96).\r\n * @returns {Number} Normal standardized inverse distribution value.\r\n * @example \r\n *  normsinv(0.95, 0) => returns 1.96\r\n *  normsinv(0.975, 1) => returns 1.96\r\n *  normsinv(0.05, 2) => returns 1.96\r\n *  normsinv(0.025, 3) => returns 1.96\r\n */\r\nfunction normsinv(value, type = 0) {\r\n    switch (type) {\r\n        // 0.95 = 1.96\r\n        case 0:\r\n            value = 1 - (1 - value) / 2;\r\n            break;\r\n            // 0.975 = 1.96\r\n            // 0.05 = 1.96\r\n        case 1: \r\n            value = value;\r\n            break;\r\n        case 2:\r\n            value = value / 2;\r\n            break;\r\n            // 0.025 = 1.96\r\n        case 3:\r\n            value = (1 - value) / 2;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    var a1 = -39.6968302866538,\r\n        a2 = 220.946098424521,\r\n        a3 = -275.928510446969;\r\n    var a4 = 138.357751867269,\r\n        a5 = -30.6647980661472,\r\n        a6 = 2.50662827745924;\r\n    var b1 = -54.4760987982241,\r\n        b2 = 161.585836858041,\r\n        b3 = -155.698979859887;\r\n    var b4 = 66.8013118877197,\r\n        b5 = -13.2806815528857,\r\n        c1 = -7.78489400243029E-03;\r\n    var c2 = -0.322396458041136,\r\n        c3 = -2.40075827716184,\r\n        c4 = -2.54973253934373;\r\n    var c5 = 4.37466414146497,\r\n        c6 = 2.93816398269878,\r\n        d1 = 7.78469570904146E-03;\r\n    var d2 = 0.32246712907004,\r\n        d3 = 2.445134137143,\r\n        d4 = 3.75440866190742;\r\n    var p_low = 0.02425,\r\n        p_high = 1 - p_low;\r\n    var q, r;\r\n    var retVal;\r\n    if (value < p_low) {\r\n        q = Math.sqrt(-2 * Math.log(value));\r\n        retVal = (((((c1 * q + c2) * q + c3) * q + c4) * q + c5) * q + c6) / ((((d1 * q + d2) * q + d3) * q + d4) * q + 1);\r\n    } else if (value <= p_high) {\r\n        q = value - 0.5;\r\n        r = q * q;\r\n        retVal = (((((a1 * r + a2) * r + a3) * r + a4) * r + a5) * r + a6) * q / (((((b1 * r + b2) * r + b3) * r + b4) * r + b5) * r + 1);\r\n    } else {\r\n        q = Math.sqrt(-2 * Math.log(1 - value));\r\n        retVal = -(((((c1 * q + c2) * q + c3) * q + c4) * q + c5) * q + c6) / ((((d1 * q + d2) * q + d3) * q + d4) * q + 1);\r\n    }\r\n\r\n    return retVal;\r\n}\r\n\r\n/**\r\n * @source https://github.com/jstat/jstat/\r\n * @param {Number} x Quantile of the F distribution (right-tailed). \r\n * @param {Integer} df1 Between-group degrees of freedom.\r\n * @param {Integer} df2 Within-groups degrees of freedom.\r\n * @returns Value of the inversed F distribution.\r\n */\r\nfunction finv(x, df1, df2) {\r\n    return df2 / (df1 * (1 / ibetainv(x, df1 / 2, df2 / 2) - 1));\r\n}\r\n\r\n/**\r\n * @source https://github.com/jstat/jstat/\r\n * @param {*} x \r\n * @param {*} a \r\n * @param {*} b \r\n * @returns \r\n */\r\nfunction ibeta(x, a, b) {\r\n    var bt = (x === 0 || x === 1) ? 0 :\r\n        Math.exp(gammaln(a + b) - gammaln(a) -\r\n            gammaln(b) + a * Math.log(x) + b *\r\n            Math.log(1 - x));\r\n    if (x < 0 || x > 1)\r\n        return false;\r\n    if (x < (a + 1) / (a + b + 2)) return bt * betacf(x, a, b) / a;\r\n    return 1 - bt * betacf(1 - x, b, a) / b;\r\n};\r\n\r\n/**\r\n * @source https://github.com/jstat/jstat/\r\n * @param {*} p \r\n * @param {*} a \r\n * @param {*} b \r\n * @returns \r\n */\r\nfunction ibetainv(p, a, b) {\r\n    var EPS = 1e-8;\r\n    var a1 = a - 1;\r\n    var b1 = b - 1;\r\n    var j = 0;\r\n    var lna, lnb, pp, t, u, err, x, al, h, w, afac;\r\n    if (p <= 0)\r\n        return 0;\r\n    if (p >= 1)\r\n        return 1;\r\n    if (a >= 1 && b >= 1) {\r\n        pp = (p < 0.5) ? p : 1 - p;\r\n        t = Math.sqrt(-2 * Math.log(pp));\r\n        x = (2.30753 + t * 0.27061) / (1 + t * (0.99229 + t * 0.04481)) - t;\r\n        if (p < 0.5)\r\n            x = -x;\r\n        al = (x * x - 3) / 6;\r\n        h = 2 / (1 / (2 * a - 1) + 1 / (2 * b - 1));\r\n        w = (x * Math.sqrt(al + h) / h) - (1 / (2 * b - 1) - 1 / (2 * a - 1)) *\r\n            (al + 5 / 6 - 2 / (3 * h));\r\n        x = a / (a + b * Math.exp(2 * w));\r\n    } else {\r\n        lna = Math.log(a / (a + b));\r\n        lnb = Math.log(b / (a + b));\r\n        t = Math.exp(a * lna) / a;\r\n        u = Math.exp(b * lnb) / b;\r\n        w = t + u;\r\n        if (p < t / w)\r\n            x = Math.pow(a * w * p, 1 / a);\r\n        else\r\n            x = 1 - Math.pow(b * w * (1 - p), 1 / b);\r\n    }\r\n    afac = -gammaln(a) - gammaln(b) + gammaln(a + b);\r\n    for (; j < 10; j++) {\r\n        if (x === 0 || x === 1)\r\n            return x;\r\n        err = ibeta(x, a, b) - p;\r\n        t = Math.exp(a1 * Math.log(x) + b1 * Math.log(1 - x) + afac);\r\n        u = err / t;\r\n        x -= (t = u / (1 - 0.5 * Math.min(1, u * (a1 / x - b1 / (1 - x)))));\r\n        if (x <= 0)\r\n            x = 0.5 * (x + t);\r\n        if (x >= 1)\r\n            x = 0.5 * (x + t + 1);\r\n        if (Math.abs(t) < EPS * x && j > 0)\r\n            break;\r\n    }\r\n    return x;\r\n};\r\n\r\n\r\nfunction fdist(x, df1, df2) {\r\n    return ibeta((df1 * x) / (df1 * x + df2), df1 / 2, df2 / 2);\r\n}\r\n\r\nfunction fdistrt(x, df1, df2) {\r\n    return 1-fdist(x,df1,df2);\r\n}\r\n\r\n/**\r\n * @source https://github.com/jstat/jstat/\r\n * @param {*} n \r\n * @param {*} m \r\n * @returns \r\n */\r\nfunction randn(n, m) {\r\n    var u, v, x, y, q;\r\n    if (!m) m = n;\r\n    if (n)\r\n        return _jstat_create(n, m, function() {\r\n            return randn(null, null);\r\n        });\r\n    do {\r\n        u = _random_fn();\r\n        v = 1.7156 * (_random_fn() - 0.5);\r\n        x = u - 0.449871;\r\n        y = Math.abs(v) + 0.386595;\r\n        q = x * x + y * (0.19600 * y - 0.25472 * x);\r\n    } while (q > 0.27597 && (q > 0.27846 || v * v > -4 * Math.log(u) * u * u));\r\n    return v / u;\r\n};\r\n\r\nfunction _jstat_create(rows, cols, func) {\r\n    var res = new Array(rows);\r\n    var i, j;\r\n  \r\n    if (typeof cols == \"function\") {\r\n      func = cols;\r\n      cols = rows;\r\n    }\r\n  \r\n    for (i = 0; i < rows; i++) {\r\n      res[i] = new Array(cols);\r\n      for (j = 0; j < cols; j++)\r\n        res[i][j] = func(i, j);\r\n    }\r\n  \r\n    return res;\r\n  }\r\n\r\nvar _random_fn = Math.random\r\n\r\n/**\r\n * @source https://github.com/jstat/jstat/\r\n * @param {*} x \r\n * @returns \r\n */\r\nfunction gammaln(x) {\r\n    var j = 0;\r\n    var cof = [\r\n        76.18009172947146, -86.50532032941677, 24.01409824083091,\r\n        -1.231739572450155, 0.1208650973866179e-2, -0.5395239384953e-5\r\n    ];\r\n    var ser = 1.000000000190015;\r\n    var xx, y, tmp;\r\n    tmp = (y = xx = x) + 5.5;\r\n    tmp -= (xx + 0.5) * Math.log(tmp);\r\n    for (; j < 6; j++)\r\n        ser += cof[j] / ++y;\r\n    return Math.log(2.5066282746310005 * ser / xx) - tmp;\r\n};\r\n\r\n/**\r\n * @source https://github.com/jstat/jstat/\r\n * @param {*} p \r\n * @param {*} a \r\n * @returns \r\n */\r\nfunction gammapinv(p, a) {\r\n    var j = 0;\r\n    var a1 = a - 1;\r\n    var EPS = 1e-8;\r\n    var gln = gammaln(a);\r\n    var x, err, t, u, pp, lna1, afac;\r\n    if (p >= 1)\r\n      return Math.max(100, a + 100 * Math.sqrt(a));\r\n    if (p <= 0)\r\n      return 0;\r\n    if (a > 1) {\r\n      lna1 = Math.log(a1);\r\n      afac = Math.exp(a1 * (lna1 - 1) - gln);\r\n      pp = (p < 0.5) ? p : 1 - p;\r\n      t = Math.sqrt(-2 * Math.log(pp));\r\n      x = (2.30753 + t * 0.27061) / (1 + t * (0.99229 + t * 0.04481)) - t;\r\n      if (p < 0.5)\r\n        x = -x;\r\n      x = Math.max(1e-3,\r\n                   a * Math.pow(1 - 1 / (9 * a) - x / (3 * Math.sqrt(a)), 3));\r\n    } else {\r\n      t = 1 - a * (0.253 + a * 0.12);\r\n      if (p < t)\r\n        x = Math.pow(p / t, 1 / a);\r\n      else\r\n        x = 1 - Math.log(1 - (p - t) / (1 - t));\r\n    }\r\n  \r\n    for(; j < 12; j++) {\r\n      if (x <= 0)\r\n        return 0;\r\n      err = lowRegGamma(a, x) - p;\r\n      if (a > 1)\r\n        t = afac * Math.exp(-(x - a1) + a1 * (Math.log(x) - lna1));\r\n      else\r\n        t = Math.exp(-x + a1 * Math.log(x) - gln);\r\n      u = err / t;\r\n      x -= (t = u / (1 - 0.5 * Math.min(1, u * ((a - 1) / x - 1))));\r\n      if (x <= 0)\r\n        x = 0.5 * (x + t);\r\n      if (Math.abs(t) < EPS * x)\r\n        break;\r\n    }\r\n  \r\n    return x;\r\n  };\r\n\r\n  /**\r\n * @source https://github.com/jstat/jstat/\r\n * @param {*} p \r\n * @param {*} a \r\n * @returns \r\n */\r\n  function lowRegGamma(a, x) {\r\n    var aln = gammaln(a);\r\n    var ap = a;\r\n    var sum = 1 / a;\r\n    var del = sum;\r\n    var b = x + 1 - a;\r\n    var c = 1 / 1.0e-30;\r\n    var d = 1 / b;\r\n    var h = d;\r\n    var i = 1;\r\n    // calculate maximum number of itterations required for a\r\n    var ITMAX = -~(Math.log((a >= 1) ? a : 1 / a) * 8.5 + a * 0.4 + 17);\r\n    var an;\r\n  \r\n    if (x < 0 || a <= 0) {\r\n      return NaN;\r\n    } else if (x < a + 1) {\r\n      for (; i <= ITMAX; i++) {\r\n        sum += del *= x / ++ap;\r\n      }\r\n      return (sum * Math.exp(-x + a * Math.log(x) - (aln)));\r\n    }\r\n  \r\n    for (; i <= ITMAX; i++) {\r\n      an = -i * (i - a);\r\n      b += 2;\r\n      d = an * d + b;\r\n      c = b + an / c;\r\n      d = 1 / d;\r\n      h *= d * c;\r\n    }\r\n  \r\n    return (1 - h * Math.exp(-x + a * Math.log(x) - (aln)));\r\n  };\r\n\r\n/**\r\n * @source https://github.com/jstat/jstat/\r\n * @param {*} x \r\n * @param {*} a \r\n * @param {*} b \r\n * @returns \r\n */\r\nfunction betacf(x, a, b) {\r\n    var fpmin = 1e-30;\r\n    var m = 1;\r\n    var qab = a + b;\r\n    var qap = a + 1;\r\n    var qam = a - 1;\r\n    var c = 1;\r\n    var d = 1 - qab * x / qap;\r\n    var m2, aa, del, h;\r\n    if (Math.abs(d) < fpmin)\r\n        d = fpmin;\r\n    d = 1 / d;\r\n    h = d;\r\n    for (; m <= 100; m++) {\r\n        m2 = 2 * m;\r\n        aa = m * (b - m) * x / ((qam + m2) * (a + m2));\r\n        d = 1 + aa * d;\r\n        if (Math.abs(d) < fpmin)\r\n            d = fpmin;\r\n        c = 1 + aa / c;\r\n        if (Math.abs(c) < fpmin)\r\n            c = fpmin;\r\n        d = 1 / d;\r\n        h *= d * c;\r\n        aa = -(a + m) * (qab + m) * x / ((a + m2) * (qap + m2));\r\n        d = 1 + aa * d;\r\n        if (Math.abs(d) < fpmin)\r\n            d = fpmin;\r\n        c = 1 + aa / c;\r\n        if (Math.abs(c) < fpmin)\r\n            c = fpmin;\r\n        d = 1 / d;\r\n        del = d * c;\r\n        h *= del;\r\n        if (Math.abs(del - 1.0) < 3e-7)\r\n            break;\r\n    }\r\n    return h;\r\n}\r\n\r\nfunction betinc(X,A,B) {\r\n    var A0=0;\r\n\tvar B0=1;\r\n\tvar A1=1;\r\n\tvar B1=1;\r\n\tvar M9=0;\r\n\tvar A2=0;\r\n\tvar C9;\r\n\twhile (Math.abs((A1-A2)/A1)>.00001) {\r\n\t\tA2=A1;\r\n\t\tC9=-(A+M9)*(A+B+M9)*X/(A+2*M9)/(A+2*M9+1);\r\n\t\tA0=A1+C9*A0;\r\n\t\tB0=B1+C9*B0;\r\n\t\tM9=M9+1;\r\n\t\tC9=M9*(B-M9)*X/(A+2*M9-1)/(A+2*M9);\r\n\t\tA1=A0+C9*A1;\r\n\t\tB1=B0+C9*B1;\r\n\t\tA0=A0/B1;\r\n\t\tB0=B0/B1;\r\n\t\tA1=A1/B1;\r\n\t\tB1=1;\r\n\t}\r\n\treturn A1/A\r\n}\r\n\r\n/**\r\n * Returns Student T distribution value.\r\n * @param {number} x Value\r\n * @param {integer} df Degrees of freedom\r\n * @param {boolean} cumulative Is cumulative function:\r\n * @returns T distribution.\r\n */\r\nfunction tdist(x,df,cumulative) {\r\n    if(!cumulative) {\r\n        df = df > 1e100 ? 1e100 : df;\r\n        return (1/(Math.sqrt(df) * betafn(0.5, df/2))) * Math.pow(1 + ((x * x) / df), -((df + 1) / 2));\r\n    } else {\r\n        var df2 = df / 2;\r\n        return ibeta((x + Math.sqrt(x * x + df)) / (2 * Math.sqrt(x * x + df)), df2, df2);\r\n    }\r\n}\r\n\r\nfunction betafn(x,y) {\r\n    if (x <= 0 || y <= 0)\r\n    return undefined;\r\n  // make sure x + y doesn't exceed the upper limit of usable values\r\n    return (x + y > 170) ? Math.exp(betaln(x, y)) : gammafn(x) * gammafn(y) / gammafn(x + y);\r\n}\r\n\r\nfunction gammafn(x) {\r\n    var p = [-1.716185138865495, 24.76565080557592, -379.80425647094563,\r\n             629.3311553128184, 866.9662027904133, -31451.272968848367,\r\n             -36144.413418691176, 66456.14382024054\r\n    ];\r\n    var q = [-30.8402300119739, 315.35062697960416, -1015.1563674902192,\r\n             -3107.771671572311, 22538.118420980151, 4755.8462775278811,\r\n             -134659.9598649693, -115132.2596755535];\r\n    var fact = false;\r\n    var n = 0;\r\n    var xden = 0;\r\n    var xnum = 0;\r\n    var y = x;\r\n    var i, z, yi, res;\r\n    if (x > 171.6243769536076) {\r\n      return Infinity;\r\n    }\r\n    if (y <= 0) {\r\n      res = y % 1 + 3.6e-16;\r\n      if (res) {\r\n        fact = (!(y & 1) ? 1 : -1) * Math.PI / Math.sin(Math.PI * res);\r\n        y = 1 - y;\r\n      } else {\r\n        return Infinity;\r\n      }\r\n    }\r\n    yi = y;\r\n    if (y < 1) {\r\n      z = y++;\r\n    } else {\r\n      z = (y -= n = (y | 0) - 1) - 1;\r\n    }\r\n    for (i = 0; i < 8; ++i) {\r\n      xnum = (xnum + p[i]) * z;\r\n      xden = xden * z + q[i];\r\n    }\r\n    res = xnum / xden + 1;\r\n    if (yi < y) {\r\n      res /= yi;\r\n    } else if (yi > y) {\r\n      for (i = 0; i < n; ++i) {\r\n        res *= y;\r\n        y++;\r\n      }\r\n    }\r\n    if (fact) {\r\n      res = fact / res;\r\n    }\r\n    return res;\r\n  };\r\n\r\n  function betaln(x, y) {\r\n    return gammaln(x) + gammaln(y) - gammaln(x + y);\r\n  };\r\n\r\nfunction tinv(p,dof) {\r\n    var x = ibetainv(2 * Math.min(p, 1 - p), 0.5 * dof, 0.5);\r\n    x = Math.sqrt(dof * (1 - x) / x);\r\n    return (p > 0.5) ? x : -x;\r\n}\r\n\r\nfunction chisqdist(x, df, cumulative = false) {\r\n    if (x < 0) return 0;\r\n    else if(!cumulative) return (x === 0 && df === 2) ? 0.5 : Math.exp((df / 2 - 1) * Math.log(x) - x / 2 - (df / 2) * Math.log(2) - gammaln(df / 2));\r\n    else return lowRegGamma(df / 2, x / 2);\r\n}\r\n\r\nfunction chisqinv(p, df) {\r\n    return 2 * gammapinv(p, 0.5 * df);\r\n}\r\n\r\n/**\r\n * @source https://www.math.ucla.edu/~tom/distributions/SignedRank.html?\r\n * @param {*} n \r\n * @param {*} w \r\n * @returns \r\n */\r\nfunction wilcoxondist(n,w) {\r\n    var p = new Array(1276);\r\n\tvar Prob,t,k,sum,nsav,t1,t2;\t\r\n\tif (w<0) {\r\n\t\tProb=0\r\n\t} else if (w>=n*(n+1)/2) {\r\n\t\tProb=1\r\n\t} else {\r\n\t\tif (n!=nsav) {\r\n\t\t\tp[0]=.5;\r\n\t\t\tp[1]=.5;\r\n\t\t\tfor(t=2;t<=n*(n+1)/2;t++)\r\n\t\t\t    p[t]=0;\r\n\t\t\tfor(k=2;k<=n;k++) {\r\n\t\t\t\tt2=k*(k+1)/2;\r\n\t\t\t\tt1=(k-1)*k/2;\r\n\t\t\t\tfor(t=t2;t>t1;t--)\r\n\t\t\t\t    p[t]=p[t-k]/2;\r\n\t\t\t\tfor(t=t1;t>=k;t--)\r\n\t\t\t\t    p[t]=(p[t]+p[t-k])/2;\r\n\t\t\t\tfor(t=k-1;t>=0;t--)\r\n\t\t\t\t    p[t]=p[t]/2;\r\n\t\t\t}\r\n\t\t\tnsav=n;\r\n\t\t}\r\n\t\tsum=0;\r\n\t\tfor(k=0;k<=w;k++)\r\n\t\t    sum=sum+p[k];\r\n\t\tProb=sum\r\n\t}\r\n\treturn Prob\r\n}\r\n\r\nfunction binominv(trials, probability, alpha, successes) {\r\n    if (successes === undefined) {\r\n      successes = 0;\r\n    }\r\n    let p = alpha;\r\n    let result = successes;\r\n    while (p > binomdist(result, trials, probability, true)) {\r\n      result++;\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction binomdist(successes, trials, probability, cumulative = false) {\r\n    if (cumulative) {\r\n    let result = 0;\r\n    for (let i = 0; i <= successes; i++) {\r\n        result += binomialCoefficient(trials, i) * Math.pow(probability, i) * Math.pow(1 - probability, trials - i);\r\n    }\r\n    return result;\r\n    } else {\r\n    return binomialCoefficient(trials, successes) * Math.pow(probability, successes) * Math.pow(1 - probability, trials - successes);\r\n    }\r\n}\r\n\r\nfunction binomialCoefficient(n, k) {\r\n    let result = 1;\r\n    for (let i = 1; i <= k; i++) {\r\n    result = result * (n - i + 1) / i;\r\n    }\r\n    return result;\r\n}\r\n  \r\n\n\n//# sourceURL=webpack://retusa/./libs/distribution.js?");

/***/ }),

/***/ "./libs/errors.js":
/*!************************!*\
  !*** ./libs/errors.js ***!
  \************************/
/***/ ((module) => {

eval("class VectorValueError extends Error {\r\n    constructor(msg, data){\r\n        super(...arguments);\r\n        this.name = \"\";\r\n        this.data = data;\r\n    }\r\n}\r\n\r\nclass ArgumentError extends Error {\r\n    constructor(msg, sender) {\r\n        super(msg);\r\n        this.data = sender;\r\n        this.name = \"\";\r\n        this.message = msg;\r\n    }\r\n}\r\n\r\nclass Empty {\r\n    constructor(message) {\r\n        this.default = message || \"\";\r\n    }\r\n}\r\nEmpty.prototype.isEmptyResult = true;\r\n\r\nmodule.exports = {\r\n    VectorValueError: VectorValueError,\r\n    ArgumentError: ArgumentError,\r\n    Empty: Empty\r\n}\n\n//# sourceURL=webpack://retusa/./libs/errors.js?");

/***/ }),

/***/ "./libs/extensions.js":
/*!****************************!*\
  !*** ./libs/extensions.js ***!
  \****************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const dist = __webpack_require__(/*! ./distribution */ \"./libs/distribution.js\");\r\nconst {Empty} = __webpack_require__(/*! ./errors */ \"./libs/errors.js\");\r\nconst $ = (__webpack_require__(/*! ./locale */ \"./libs/locale.js\").call);\r\n\r\nArray.prototype.hasOnlyVectorChildren = function() {\r\n    return this.filter(e => !e?.isVector).length == 0;\r\n}\r\n\r\nArray.prototype.sum = function() {\r\n    if(this.length === 0) return 0;\r\n    return this.reduce((a,b) => a+b);\r\n}\r\n\r\nArray.prototype.count = function() {\r\n    return this.length;\r\n}\r\n\r\nArray.prototype.avg = function() {\r\n    return this.sum()/this.count()\r\n}\r\n\r\nArray.prototype.mci = function(p) {\r\n    return Math.mci(this.avg(),this.stdev(true),this.length, p)\r\n    p = 1-(1-p)/2;\r\n    var m = this.avg();\r\n    var q = this.length > 30 ? dist.normsinv(p, this.length -1 ) : dist.tinv(p, this.length -1);\r\n    var delta = q * this.stdev(true)/Math.sqrt(this.length);\r\n    return {m: m, delta: delta, lb: m-delta, ub: m+delta};\r\n}\r\n\r\nArray.prototype.pci = function(value, alfa) {\r\n    var proportion = this.filter(_ => _ === value).length / this.length;\r\n    return Math.pci(proportion, this.length, alfa);\r\n}\r\n\r\nArray.prototype.distinct = function() {\r\n    return this.filter((obj, index, self) => {\r\n        return self.findIndex(t => JSON.stringify(t) === JSON.stringify(obj)) === index;\r\n      });\r\n    //return [...new Set(this)];\r\n}\r\n\r\nArray.prototype.asc = function(self) {\r\n    if(self) return this.sort((a,b) => a < b ? -1 : 1);\r\n    else return new Array(...this).sort((a,b) => a < b ? -1 : 1);\r\n}\r\n\r\nArray.prototype.desc = function(self) {\r\n    if(self) {\r\n        return this.asc().reverse();\r\n    } else return new Array(...this).asc().reverse();\r\n}\r\n\r\nArray.prototype.min = function(){\r\n    if(this.length == 0) return null;\r\n    else if(this.length == 1) return this[0];\r\n    else return new Array(...this).sort((a,b) => a < b ? -1 : 1)[0];\r\n}\r\n\r\nArray.prototype.max = function(){\r\n    if(this.length == 0) return null;\r\n    else if(this.length == 1) return this[0];\r\n    else return new Array(...this).sort((a,b) => a > b ? -1 : 1)[0];\r\n        \r\n}\r\n\r\nArray.prototype.range = function(){\r\n    return this.max() - this.min();\r\n}\r\n\r\nArray.prototype.stdev = function(sample){\r\n    const m = this.avg();\r\n    const n = this.length - (sample ? 1 : 0);\r\n    return Math.pow(this.map(x => Math.pow(x - m, 2)).reduce((a, b) => a + b) / n, 0.5);\r\n}\r\n\r\nArray.prototype.variance = function(sample) {\r\n    var m = this.avg();\r\n    return this.map(_ => Math.pow(_ - m,2)).sum()/(this.length - (sample ? 1 : 0));\r\n}\r\n\r\nArray.prototype.histogram = function(maxIntervals = null, fixedInterval = null){\r\n    var l = this.count();\r\n    var mn = this.min();\r\n    var mx = this.max();\r\n    var interval = maxIntervals ? (mx-mn)/maxIntervals : fixedInterval > 0 ? fixedInterval : (mx-mn)/Math.pow(l,.5);\r\n    var fixed = mn < 10 ? 2 : mn < 100 ? 1 : 0;\r\n    var h = [];\r\n    var _i = 0;\r\n    for(var i = mn; i <= mx; i += interval)\r\n    {\r\n        var n = (this.filter(f => (_i === 0 ? f >=i : f > i) && (f <= (i + interval)))).length;\r\n        var nc = _i > 0 ? n + h[_i-1].nc : n;\r\n        var p = n/l;\r\n        var pc = _i > 0 ? p + h[_i-1].pc : p;\r\n        h.push({from: i, to: i + interval, n:n, nc: nc, p:p, pc:pc})\r\n        _i++;\r\n    }\r\n    return h;\r\n}\r\n\r\nArray.prototype.varc = function(sample){\r\n    return this.stdev(sample) / this.avg();\r\n}\r\n\r\nArray.prototype.frequency = function(order){\r\n    var f = [];\r\n    for(let k of this.distinct()) {\r\n        f.push({value: k, frequency: this.filter(v => v === k).length});\r\n    };\r\n    if(order == 3) return f.sort((a, b) => a.value - b.value);\r\n    else if(order == 4) return f.sort((a, b) => a.value - b.value).reverse();\r\n    else if(order == 2) return f.sort((a, b) => a.frequency - b.frequency);\r\n    else if(order == 1) return f.sort((a, b) => a.frequency - b.frequency).reverse();\r\n    else return f;\r\n}\r\n\r\nArray.prototype.mode = function() {\r\n    return this.frequency(4)[0].value;\r\n}\r\n\r\nArray.prototype.percentile = function(q){\r\n    let _ = this.asc();\r\n    var pos = ((_.length) - 1) * q;\r\n    var base = Math.floor(pos);\r\n    var rest = pos - base;\r\n    return (_[base+1]!==undefined) ? _[base] + rest * (_[base+1] - _[base]) : _[base];\r\n}\r\n\r\nArray.prototype.median = function() {\r\n    return this.percentile(0.5);\r\n}\r\n\r\nArray.prototype.geomean = function(){\r\n    return Math.pow(this.product(), 1/ this.length)\r\n}\r\n\r\nArray.prototype.product = function(){\r\n    return this.reduce((a, b) => a * b);\r\n}\r\n\r\nArray.prototype.harmean = function(){\r\n    return this.length / Array.prototype.sum.call(this.map(_ => 1/_));\r\n}\r\n\r\nArray.prototype.SEM = function(){\r\n    return this.stdev(true)/Math.sqrt(this.length);\r\n}\r\n\r\nArray.prototype.skewness = function(sample) {\r\n    var n = this.length;\r\n    var m = this.avg();\r\n    var s = this.stdev(sample);\r\n    if(sample) return (n/((n-1)*(n-2)))* this.map(x => Math.pow((x-m)/s,3)).sum();\r\n    else return this.map(x => Math.pow((x-m)/s,3)).sum() / n;\r\n}\r\n\r\nArray.prototype.kurtosis = function(){\r\n    const n = this.count();\r\n    const xm = this.avg();\r\n    const s = this.stdev(true);\r\n    const a = (n*(n+1))/((n-1)*(n-2)*(n-3));\r\n    const b = this.map(x => Math.pow((x-xm),4)).sum() / Math.pow(s,4);\r\n    const c = (3 * Math.pow((n-1),2)) / ((n-2)*(n-3));\r\n    var k = a * b - c;\r\n    return k || new Empty();\r\n}\r\n\r\nArray.prototype.ttest = function(mean){\r\n    var n = this.length;\r\n    var m = this.avg();\r\n    var t = (m - mean)/this.SEM();\r\n    var p = (1 - dist.tdist(t, n-1))*2;\r\n    return {\r\n        t: t,\r\n        p: p,\r\n        n: n,\r\n        //df: n-1,\r\n        //sample_mean: m,\r\n        //population_mean: mean\r\n    }\r\n}\r\n\r\nArray.prototype.getRankIndexes = function(order = 0){\r\n    const sorted = [...new Set(this)].sort((a, b) => order == 1 ? a-b : b-a);\r\n    const rank = new Map(sorted.map((x, i) => [x, i + 1]));\r\n    return this.map((x) => rank.get(x));\r\n}\r\n\r\nArray.prototype.rankAvg = function(value, dir) {\r\n    var array = new Array(...this).sort((a,b) => a - b);\r\n    var fi = Number(array.indexOf(value));\r\n    var li = Number(array.lastIndexOf(value));\r\n    return (fi !== li ? (li+fi)/2 : fi) + 1;\r\n} \r\n\r\nArray.prototype.toAvgRank = function(order = 0) {\r\n    var array = new Array(...this).sort((a, b) => order == 1 ? a-b : b-a);\r\n    var sorted = this.map(function(value){\r\n        var fi = Number(array.indexOf(value));\r\n        var li = Number(array.lastIndexOf(value));\r\n        return (fi !== li ? (li+fi)/2 : fi) + 1;\r\n    });\r\n    return sorted;\r\n} \r\n\r\nArray.prototype.intersection = function(arr) {\r\n    if(arr.length == 0) return this;\r\n    return this.filter(v => arr.indexOf(v) > -1)\r\n}\r\n\r\nArray.prototype.covariance = function(arr, sample = false) {\r\n    var xm = this.avg();\r\n    var ym = arr.avg();\r\n    return this.map((x,i) => (x-xm)*(arr[i]*ym)).sum(arr.length - (sample ? 1 : 0));\r\n}\r\n\r\nArray.prototype.shapirowilk = function() {\r\n\r\n\tfunction poly(cc, nord, x) {\r\n\t\tvar p;\r\n\t\tvar ret_val;\r\n\t\tret_val = cc[0];\r\n\t\tif (nord > 1) {\r\n\t\t\tp = x * cc[nord - 1];\r\n\t\t\tfor (j = nord - 2; j > 0; j--)\r\n\t\t\t\tp = (p + cc[j]) * x;\r\n\t\t\tret_val += p;\r\n\t\t}\r\n\t\treturn ret_val;\r\n\t}\r\n\tvar x = this.sort(function(a, b) {\r\n\t\treturn a - b;\r\n\t});\r\n\tvar n = x.length;\r\n\tif (n < 3)\r\n\t\treturn new Empty($(\"AgIP\"));\r\n\tvar nn2 = Math.floor(n / 2);\r\n\tvar a = new Array(Math.floor(nn2) + 1);\r\n\tvar small = 1e-19;\r\n\tvar g = [-2.273, 0.459];\r\n\tvar c1 = [0, 0.221157, -0.147981, -2.07119, 4.434685, -2.706056];\r\n\tvar c2 = [0, 0.042981, -0.293762, -1.752461, 5.682633, -3.582633];\r\n\tvar c3 = [0.544, -0.39978, 0.025054, -6.714e-4];\r\n\tvar c4 = [1.3822, -0.77857, 0.062767, -0.0020322];\r\n\tvar c5 = [-1.5861, -0.31082, -0.083751, 0.0038915];\r\n\tvar c6 = [-0.4803, -0.082676, 0.0030302];\r\n\tvar i, j, i1;\r\n\tvar ssassx, summ2, ssumm2, gamma, range;\r\n\tvar a1, a2, an, m, s, sa, xi, sx, xx, y, w1;\r\n\tvar fac, asa, an25, ssa, sax, rsn, ssx, xsx;\r\n\tvar pw = 1;\r\n\tan = n;\r\n\tif (n == 3)\r\n\t\ta[1] = 0.7071067811865476;\r\n\telse {\r\n\t\tan25 = an + 0.25;\r\n\t\tsumm2 = 0.0;\r\n\t\tfor (i = 1; i <= nn2; i++) {\r\n\t\t\ta[i] = dist.normsinv((i - 0.375) / an25, 1);\r\n\t\t\tvar r__1 = a[i];\r\n\t\t\tsumm2 += r__1 * r__1;\r\n\t\t}\r\n\t\tsumm2 *= 2;\r\n\t\tssumm2 = Math.sqrt(summ2);\r\n\t\trsn = 1 / Math.sqrt(an);\r\n\t\ta1 = poly(c1, 6, rsn) - a[1] / ssumm2;\r\n\t\tif (n > 5) {\r\n\t\t\ti1 = 3;\r\n\t\t\ta2 = -a[2] / ssumm2 + poly(c2, 6, rsn);\r\n\t\t\tfac = Math.sqrt((summ2 - 2 * (a[1] * a[1]) - 2 * (a[2] * a[2])) / (1 - 2 * (a1 * a1) - 2 * (a2 * a2)));\r\n\t\t\ta[2] = a2;\r\n\t\t} else {\r\n\t\t\ti1 = 2;\r\n\t\t\tfac = Math.sqrt((summ2 - 2 * (a[1] * a[1])) / (1 - 2 * (a1 * a1)));\r\n\t\t}\r\n\t\ta[1] = a1;\r\n\t\tfor (i = i1; i <= nn2; i++)\r\n\t\t\ta[i] /= -fac;\r\n\t}\r\n\trange = x[n - 1] - x[0];\r\n\tif (range < small) {\r\n\t\treturn new Empty($(\"zxmM\", {\r\n\t\t\trange: range\r\n\t\t}));\r\n\t}\r\n\txx = x[0] / range;\r\n\tsx = xx;\r\n\tsa = -a[1];\r\n\tfor (i = 1, j = n - 1; i < n; j--) {\r\n\t\txi = x[i] / range;\r\n\t\tif (xx - xi > small) {\r\n\t\t\treturn new Empty($(\"TSCM\", {\r\n\t\t\t\trange: xx - xi\r\n\t\t\t}));\r\n\t\t}\r\n\t\tsx += xi;\r\n\t\ti++;\r\n\t\tif (i != j)\r\n\t\t\tsa += Math.sign(i - j) * a[Math.min(i, j)];\r\n\t\txx = xi;\r\n\t}\r\n\tif (n > 5000) {\r\n\t\treturn new Empty($(\"yhzq\"));\r\n\t}\r\n\tsa /= n;\r\n\tsx /= n;\r\n\tssa = ssx = sax = 0.;\r\n\tfor (i = 0, j = n - 1; i < n; i++, j--) {\r\n\t\tif (i != j)\r\n\t\t\tasa = Math.sign(i - j) * a[1 + Math.min(i, j)] - sa;\r\n\t\telse\r\n\t\t\tasa = -sa;\r\n\t\txsx = x[i] / range - sx;\r\n\t\tssa += asa * asa;\r\n\t\tssx += xsx * xsx;\r\n\t\tsax += asa * xsx;\r\n\t}\r\n\tssassx = Math.sqrt(ssa * ssx);\r\n\tw1 = (ssassx - sax) * (ssassx + sax) / (ssa * ssx);\r\n\tvar w = 1 - w1;\r\n\tif (n == 3) {\r\n\t\tvar pi6 = 6 / Math.PI;\r\n\t\tvar stqr = Math.asin(Math.sqrt(3 / 4));\r\n\t\tpw = pi6 * (Math.asin(Math.sqrt(w)) - stqr);\r\n\t\tif (pw < 0.)\r\n\t\t\tpw = 0;\r\n\t\treturn w;\r\n\t}\r\n\ty = Math.log(w1);\r\n\txx = Math.log(an);\r\n\tif (n <= 11) {\r\n\t\tgamma = poly(g, 2, an);\r\n\t\tif (y >= gamma) {\r\n\t\t\tpw = 1e-99; /* an \"obvious\" value, was 'small' which was 1e-19f */\r\n\t\t\treturn w;\r\n\t\t}\r\n\t\ty = -Math.log(gamma - y);\r\n\t\tm = poly(c3, 4, an);\r\n\t\ts = Math.exp(poly(c4, 4, an));\r\n        debugger;\r\n\t} else {\r\n\t\tm = poly(c5, 4, xx);\r\n\t\ts = Math.exp(poly(c6, 3, xx));\r\n\t}\r\n\tvar z = (Math.log(1-w)-m)/s;\r\n    var p = 1-dist.normsdist(z);\r\n    return {\r\n        W: w, df: n, p: p\r\n    }   \r\n}\r\n\r\nArray.prototype.kolmogorovSmirnovTest = function() {\r\n    var sample = this.sort((a, b) => a - b);\r\n    const sampleCdf = sample.map((x, i) => (i + 1) / sample.length);\r\n    let maxDistance = 0;\r\n    var mean = sample.avg();\r\n    var s = sample.stdev(true);\r\n    for (let i = 0; i < sample.length; i++) {\r\n        maxDistance = Math.max(maxDistance, Math.abs(sampleCdf[i] - dist.normsdist((sample[i] - mean)/s)));\r\n    }\r\n    return {\r\n        T: maxDistance,\r\n        df: sample.length\r\n    };\r\n  }\r\n\r\nString.prototype.fill = function(what, repetition) {\r\n    var x = \"\";\r\n    for(var i = 0; i < repetition; i++) {\r\n        x =+ what;\r\n    }\r\n    return x;\r\n}\r\n\r\nMath.combinations = function(n, k) {\r\n    if (k > n) {\r\n      return 0;\r\n    }\r\n    if (k === 0 || k === n) {\r\n      return 1;\r\n    }\r\n    let numerator = 1;\r\n    for (let i = 0; i < k; i++) {\r\n      numerator *= (n - i);\r\n    }\r\n    let denominator = 1;\r\n    for (let i = 1; i <= k; i++) {\r\n      denominator *= i;\r\n    }\r\n    return numerator / denominator;\r\n  }\r\n/*\r\nMath.combinations = function(n, r, repeats) {\r\n    if(n< r) return 0;\r\n    if(n=== r) return 1;\r\n    if(repeats){\r\n        return Math.factorial(n+r-1)/((Math.factorial(r)*Math.factorial(n-1)));\r\n    }\r\n    console.log(Math.factorial(n));\r\n    console.log(((Math.factorial(r)*Math.factorial(n-r))))\r\n    var f = Math.factorial(n)/((Math.factorial(r)*Math.factorial(n-r)));\r\n    debugger;\r\n    return f;\r\n}\r\n*/\r\n\r\nMath.factorial = function(n) {\r\n    var i= n;\r\n    while(--i) n*= i;\r\n    return n;\r\n}\r\n\r\nMath.getRandomIndexes = function(total_of_elements, samplesize) {\r\n    var indexes = [];\r\n    if(total_of_elements < samplesize) samplesize = total_of_elements;\r\n    while (indexes.length < samplesize) {\r\n        var v = Math.round(Math.random()*total_of_elements);\r\n        if(indexes.indexOf(v) < 0) indexes.push(v);\r\n    };\r\n    return indexes;\r\n}\r\n\r\nMath.pci = function(p,n,alfa) {\r\n    alfa = 1-(1-alfa)/2;\r\n    var z = dist.normsinv(alfa, 1 );\r\n    var delta = z * Math.sqrt((p * (1 - p)) / n);\r\n    return {p: p, sig: (1-alfa)*2,delta: delta, lb: p-delta < 0 ? 0 : p-delta, ub: p+delta > 1 ? 1 : p+delta};\r\n}\r\n\r\nMath.mci = function(m,stdev,n,alfa) {\r\n    alfa = 1-(1-alfa)/2;\r\n    var q = n > 30 ? dist.normsinv(alfa, n - 1 ) : dist.tinv(alfa, n -1);\r\n    var delta = q * stdev/Math.sqrt(n);\r\n    return {m: m, sig: (1-alfa)*2,delta: delta, lb: m-delta, ub: m+delta};\r\n}\r\n\r\nMath.rndNumber = function(min,max,decimal = 2) {\r\n    let multiplier = Math.pow(10, decimal || 0);\r\n    return Math.floor(Math.random() * (max - min) * multiplier + min * multiplier) / multiplier;\r\n}\r\n\r\nMath.rndSelect = function(array, total = 1, allowDuplicates = false) {\r\n    if(total >= array.length) return array;\r\n    var _sample = [];\r\n    while (_sample.length < total) {\r\n        var index = Math.floor(Math.random() * array.length);\r\n        if(!allowDuplicates) {\r\n            if(_sample.indexOf(array[index] < 0)) _sample.push(array[index]);   \r\n        } else _sample.push(array[index]);\r\n    }\r\n    return _sample;\r\n}\r\n\r\nMath.rndSelectOne = function(array) {\r\n    return array[Math.floor(Math.random() * array.length)];\r\n}\r\n\r\nMath.sign = function(x) {\r\n    if (x == 0)\r\n        return 0;\r\n    return x > 0 ? 1 : -1;\r\n}\r\n\r\nFunction.prototype.stringify = function(indent = \"\\t\") {\r\n    var raw = this.toString().match(/function[^{]+\\{([\\s\\S]*)\\}$/)[1];\r\n    var formatted = \"\";\r\n    raw.split(/\\n/g).forEach(l => formatted += l.trim() + \"\\n\");\r\n    return formatted.trim();\r\n}\r\n\r\nmodule.exports = {Array, Math, String, Function};\n\n//# sourceURL=webpack://retusa/./libs/extensions.js?");

/***/ }),

/***/ "./libs/locale.js":
/*!************************!*\
  !*** ./libs/locale.js ***!
  \************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var built_in_locales = {\r\n    cs: __webpack_require__(/*! ../locales/cs */ \"./locales/cs.js\")\r\n}\r\nlet _ = built_in_locales.cs;\r\nlet _locale;\r\n\r\nmodule.exports = {\r\n    config: function (setup = \"cs\") {        \r\n        if(typeof setup == \"string\") {\r\n            _ = built_in_locales[setup];\r\n            if(!_) throw new Error(\"Locale \" + setup + \" not found.\");\r\n            else _locale = setup;\r\n            \r\n        } else if(typeof setup == \"object\") _ = setup;\r\n        else throw new Error(\"Custom locale must be an object.\")\r\n        return module.exports;\r\n    },\r\n    call: function(code, data = {}) {\r\n        if(!code) return \"\";\r\n        else if(typeof code == \"object\") {\r\n            var _text = _locale ? code[_locale] : Object.entries(code)[0][1];\r\n            return _replace(_text, data)\r\n        }\r\n        var _text = _[code];        \r\n        if(!_text) return _replace(code,{value: code});\r\n        else {\r\n            _text = _replace(_text, data)\r\n            return _text;\r\n        }\r\n    }\r\n    \r\n}\r\n\r\nconst _replace = function(text, data) {\r\n    var keys = (text.match(/\\$\\{(.*?)\\}/g) || []).map(i => i.match(/\\$\\{(.*)\\}/)[1]);\r\n    keys.forEach(function(k){\r\n        text = text.replace(\"\\$\\{\" + k + \"\\}\", () => data[k])\r\n    });\r\n    return text;\r\n}\n\n//# sourceURL=webpack://retusa/./libs/locale.js?");

/***/ }),

/***/ "./libs/markdown.js":
/*!**************************!*\
  !*** ./libs/markdown.js ***!
  \**************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("//https://gist.github.com/rxaviers/7360908\r\nvar $ = (__webpack_require__(/*! ./locale */ \"./libs/locale.js\").call);\r\nvar {Schema, ArgumentSchema} = __webpack_require__(/*! ./schemas */ \"./libs/schemas.js\");\r\n\r\nvar e_yes = \"✔️\" //\":heavy_check_mark:\" //\":white_check_mark:\";\r\nvar e_no = \"-\" // \"❌\" // \":no_entry_sign:\"\r\n\r\nfunction VectorMarkdown(method, level = 1) {\r\n    var wiki = method;\r\n    var _ = `${hash(level)} [${wiki.title.toUpperCase()}](#${wiki.name}): ${$(wiki.name)}${wiki.description ? \"\\n\\n\" + wiki.description + (wiki.url ? \" \" + \"[\" + $(\"WLsu\") + \"](\" + wiki.url + \")\" : \"\") : \"\"}`;\r\n    _ += `\\n\\n${hash(level + 1)} ${$(\"oPEt\")}\\n\\n${createVectorMethodConstructor(wiki)}`\r\n    if(wiki.filter) {\r\n        _ += `\\n\\n${hash(level+1)} ${$(\"VVSN\")}\\n\\n${wiki.filter}`;\r\n    }\r\n    constructor = createVectorMethodConstructor(wiki);\r\n    if(wiki.arguments?.length > 0) {\r\n        var headers = [$(\"QUJS\"), $(\"jBGO\"), $(\"dmmV\"), $(\"tGqA\"), $(\"VPYX\"), $(\"pDgb\")];\r\n        var values = wiki.arguments.map(function(a){\r\n            return [\r\n                `**${a.name}**`,\r\n                a.title,\r\n                new ArgumentSchema(a.schema).markdown(),\r\n                a.validator,\r\n                a.required ? e_yes : e_no,\r\n                a.default || a.default === 0 || a.default === false ? a.default : \"\",\r\n            ]\r\n        });\r\n        _ += `\\n\\n${hash(level+1)} ${$(\"FRpk\")}\\n\\n${objArrayToTable(headers, values, [1,1,0,1,1,1])}`;\r\n    }\r\n    if(wiki.applies?.length > 0) {\r\n        _ += `\\n\\n${hash(level+1)} ${$(\"NizL\")}\\n\\n${objArrayToTable([$(\"AfXp\"), $(\"picU\")], wiki.applies.map(v => [v.title, v.apply ? e_yes : e_no]), [0,1])}`;\r\n    }\r\n    _ += `\\n\\n${hash(level+1)} ${$(\"KxQM\")}\\n` + new Schema(wiki.returns).markdown();\r\n    if(wiki.example) {\r\n        _ += `\\n\\n${hash(level+1)} ${$(\"nzmJ\")}\\n\\n\\`\\`\\`js\\n${wiki.example}\\n\\`\\`\\``;\r\n    }\r\n    return _;\r\n}\r\n\r\nfunction MatrixMarkdown(method, level = 1) {\r\n    var wiki = method.wiki;\r\n    var _ = `${hash(level)} [${method.wiki.title.toUpperCase()}](#${method.name}): ${$(method.name)}${method.wiki.description ? \"\\n\\n\" + method.wiki.description + (method.url ? \" \" + \"[\" + $(\"WLsu\") + \"](\" + method.url + \")\" : \"\") : \"\"}`;\r\n    _ += `\\n\\n${hash(level + 1)} ${$(\"oPEt\")}\\n${createMatrixMethodConstructor(method)}`;\r\n    if(method.wiki?.filter) _ += `\\n\\n${hash(level+1)} ${$(\"VVSN\")}\\n\\n${method.wiki.filter}`;\r\n    if(method.wiki?.arguments?.length > 0) {\r\n        var headers = [$(\"QUJS\"), $(\"jBGO\"), $(\"dmmV\"), $(\"tGqA\"), $(\"VPYX\"), $(\"pDgb\")];\r\n        var values = method.wiki.arguments.map(function(a){            \r\n            return [\r\n                `**${a.name}**`,\r\n                a.title,\r\n                new ArgumentSchema((method.model.args || []).find(s => s.name == a.name)?.schema).markdown(),\r\n                a.validator,\r\n                a.required ? e_yes : e_no,\r\n                a.default || a.default === 0 || a.default === false ? a.default : \"\",\r\n            ]\r\n        });\r\n        _ += `\\n\\n${hash(level+1)} ${$(\"FRpk\")}\\n\\n${objArrayToTable(headers, values, [1,1,0,1,1,1])}`;\r\n    }\r\n    if(method.model.returns) _ += `\\n\\n${hash(level+1)} ${$(\"KxQM\")}\\n` + new Schema(method.model.returns).markdown();\r\n    if(method.model.example) _ += `\\n\\n${hash(level+1)} ${$(\"nzmJ\")}\\n\\n\\`\\`\\`js\\n${method.wiki.example}\\n\\`\\`\\``;\r\n    return _;\r\n}\r\n\r\nfunction VectorOverview(Models) {\r\n    var models = Object.entries(Models).map(x => x[1]);\r\n    var _ = \"# Vektor\\n\\nVektor (řada) je základní entitou statistické analýzy. Třída Vector se v aplikaci využívá výhradně skrze zděděné třídy (NumericVector atd.), které zajišťují validaci jednotlivých hodnot řady (např. do NumericVector instance nelze přidat hodnotu 'nazdar').\";\r\n    _ += \"\\n\\n## Statistické metody\\n\\n\";\r\n    _ += objArrayToTable([$(\"wRbe\"),$(\"rlTY\"),$(\"LOYN\"),$(\"zoiB\"),$(\"OkoC\")],models.map(function(m) { \r\n        var row = [\r\n            `[${m.wiki.name}](#${m.wiki.name})`,\r\n            `${m.wiki.title}`,\r\n            m.wiki.applies[0].apply ? e_yes : e_no,\r\n            m.wiki.applies[1].apply ? e_yes : e_no,\r\n            m.wiki.applies[2].apply ? e_yes : e_no,\r\n        ];\r\n        return row;\r\n    }),[1,1,1,1,1]);\r\n    models.forEach(function(m) {\r\n        _ += \"\\n\\n\\---\\n\\n\" + VectorMarkdown(m.wiki, 3);\r\n    });\r\n    return _;\r\n}\r\n\r\nfunction MatrixOverview(Models) {\r\n    var models = Object.entries(Models).map(x => x[1]);\r\n    var _ = \"# Matice\\n\\nBablablablabla.\";\r\n    _ += \"\\n\\n## Statistické metody\\n\\n\";\r\n    _ += objArrayToTable([$(\"wRbe\"),$(\"rlTY\")],models.map(function(m) { \r\n        var row = [\r\n            `[${m.wiki.name}](#${m.wiki.name})`,\r\n            `${m.wiki.title}`,\r\n            //m.wiki.description,\r\n        ];\r\n        return row;\r\n    }),[1,1,0]);\r\n    models.forEach(function(m) {\r\n        _ += \"\\n\\n\\---\\n\\n\" + MatrixMarkdown(m, 3);\r\n    });\r\n    return _;\r\n}\r\n\r\n\r\n\r\nconst hash = function(level) {\r\n    var h = \"\";\r\n    for(var i = 0; i < level; i++) {\r\n        h += \"#\";\r\n    }\r\n    return h;\r\n}\r\n\r\nfunction objArrayToTable(headers, values, alignment) {\r\n    var t = \"|\";\r\n    headers.forEach(h => t+= ` ${h} |`);\r\n    t += \"\\n|\";\r\n    headers.forEach((h,i) => t += ` ${(alignment || [])[i] == 1 ? \":\" : \"\"}---${(alignment || [])[i] > 0 ? \":\" : \"\"} | `);\r\n    values.forEach(function(v){ \r\n        t += \"\\n|\";\r\n        v.forEach(_ => t += ` ${_} |`)\r\n    });\r\n    return t;\r\n}\r\n\r\nfunction createVectorMethodConstructor(wiki) {\r\n    var _ = \"\";\r\n    for(var t of wiki.applies.filter(a => a.apply)) {\r\n        _ += \"\\n> (\";\r\n        if(t.type == 1) _ += \"NumericVector\";\r\n        else if(t.type == 2) _ += \"StringVector\";\r\n        else if(t.type == 3) _ += \"BooleanVector\";\r\n        _ += `).<mark>**${wiki.name}**(${wiki.arguments.length > 0 ? \"\" : \")\"}`;\r\n        for(var a of wiki.arguments) {\r\n            _ += a.required ? \"***\" + a.title + \"***\" : \"*\" + a.title + \"*\";\r\n            if(wiki.arguments.indexOf(a) < wiki.arguments.length - 1) _ += \", \";\r\n            else _+= \")\";\r\n        }\r\n        _+=\"\\n\";\r\n    }\r\n    return _;\r\n}\r\n\r\nfunction createMatrixMethodConstructor(method) {\r\n    var _ = \"\";    \r\n    _ += \"\\n> [Matrix instance].\" + `**${method.name}**(${method.model.args.length > 0 ? \"\" : \")\"}`;\r\n    for(var i = 0; i < method.wiki.arguments.length; i++) {\r\n        let a = method.wiki.arguments[i];\r\n        _ += a.required ? \"***\" + a.title + \"***\" : \"*\" + a.title + \"*\";\r\n        if(i < method.wiki.arguments.length - 1) _ += \", \";\r\n        else _+= \")\";\r\n    }\r\n    _+=\"\\n\"; \r\n    return _;\r\n}\r\n\r\nmodule.exports = {\r\n    VectorOverview: VectorOverview,\r\n    VectorMarkdown: VectorMarkdown,\r\n    MatrixMarkdown: MatrixMarkdown,\r\n    MatrixOverview: MatrixOverview\r\n}\n\n//# sourceURL=webpack://retusa/./libs/markdown.js?");

/***/ }),

/***/ "./libs/matrix.js":
/*!************************!*\
  !*** ./libs/matrix.js ***!
  \************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\r\n\r\nvar {NumericVector, StringVector, BooleanVector, Vector, $} = __webpack_require__(/*! ./vector */ \"./libs/vector.js\");\r\nvar {filters, validators, enumerators} = __webpack_require__(/*! ./parsers */ \"./libs/parsers.js\");\r\nvar {matrixResultSchemas, argumentSchemas, OutputSchema, FormMatrixSchema} = __webpack_require__(/*! ./schemas */ \"./libs/schemas.js\");\r\nconst {Array, Math, String, Function} = __webpack_require__(/*! ./extensions */ \"./libs/extensions.js\");\r\nconst dist = __webpack_require__(/*! ./distribution */ \"./libs/distribution.js\");\r\nvar {VectorValueError, ArgumentError, Empty} = __webpack_require__(/*! ./errors */ \"./libs/errors.js\");\r\nconst {MatrixMarkdown, MatrixOverview} = __webpack_require__(/*! ./markdown */ \"./libs/markdown.js\");\r\nvar matrixName = null;\r\n\r\n// #region MATRIX\r\n\r\nArray.prototype.matrify = function() {\r\n    var M = new Matrix();\r\n    for(var i = 0; i < this.length; i++) {\r\n        M.push(!this[i]?.isVector ? this[i].vectorify() : this[i])\r\n    }\r\n    return M;\r\n}\r\n\r\nclass Matrix extends Array {\r\n    /**\r\n     * Initializes a new instance of the Matrix class.\r\n     */\r\n    constructor(){\r\n        super();\r\n        this.push(...arguments);\r\n    }\r\n    /**\r\n     * Gets or sets the name of this matrix. If the argument 'value' is empty, it returns the name of this matrix (if set before). Otherwise the name of the matrix is set and the matrix itself is returned.\r\n     * So far, there can be only one name for all possible matrices as WeakMap seems to not support array keys (matrix is an array in fact).\r\n     * @param {string | empty} value Optional: name of the matrix.\r\n     * @returns Either name or the matrix itself.\r\n     */\r\n    name(value){\r\n        if(value) {\r\n            matrixName = value;\r\n            return this;\r\n        } else return matrixName;\r\n    }\r\n    push() {\r\n        for(let a of [...arguments].filter(v => v)) {\r\n            if(a.isVector) {\r\n                super.push(a);\r\n            }\r\n            else if(Array.isArray(a)) super.push(a.vectorify());\r\n            else throw new ArgumentError(\"Argument is not a vector or array.\");\r\n        };\r\n    }\r\n    smap(fn) {\r\n        var _m = [];\r\n        for(let v of this) {\r\n            _m.push(fn(v));\r\n        };\r\n        return _m;\r\n    }\r\n    /**\r\n     * Similar to a pivot table in Excel without aggregation. Converts a matrix of two vectors to a new matrix where the new factors are named after the unique values from the original factor. Nov vectors are filled with values that match the row filter in the original matrix.\r\n     * @param {Vector identifier} target \r\n     * @param {Vector identifier} factor \r\n     * @param {Array} selectedKeys Optional. If you want to pivot only selected values from the factor vector, enlist them in the selectedKeys argument.\r\n     * @returns {Matrix}\r\n     */\r\n    pivot(target, factor, selectedKeys = []) {\r\n        target = this.item(target);\r\n        factor = this.item(factor);\r\n        var selection = this.select(target, factor);\r\n        var pivot = new Matrix();        \r\n        for(let key of factor.distinct().intersection(selectedKeys)) {\r\n            pivot.push(new target.constructor(...selection.filter(factor, (v) => v === key)[0]).name(key));\r\n        }\r\n        return pivot;\r\n    }\r\n    clone(flush = false) {\r\n        return new Matrix(...new Array(...this).map(v => v.clone()));\r\n    }\r\n    /**\r\n     * Returns a vector according to the specified identifier. The identifier argument is extremely flexible, it can be a number (the order of the vector), text (the name of the vector), an instance of the vector, or a filter function with which the vector is searched in the matrix.\r\n     * @param {number | string | Vektor | function} identifier \r\n     * @returns {Vektor} Returns a Vector instance or (if not found) null.\r\n     */\r\n    item(identifier) {\r\n        if(!identifier && identifier !== 0) return null;\r\n        else if(!isNaN(identifier)) return this[Number(identifier)];\r\n        else if(typeof identifier == \"string\") return this.find(v => v.name() == identifier);\r\n        else if(identifier?.isVector) {\r\n            var byObject = this.find(v=> v == identifier);\r\n            if(byObject) return byObject;\r\n            else {\r\n                if(identifier.name()) return this.find(v => v.name() == identifier.name()) || null;\r\n                else return null;\r\n            }\r\n        }\r\n        else if(identifier.constructor?.name == \"Function\") return this.find(identifier);\r\n        else return null;\r\n    }\r\n    select(...identifiers) {\r\n        var clone = new Matrix();\r\n        for(let i of identifiers) {\r\n            var v = this.item(i);\r\n            if(v) clone.push(v);\r\n        }\r\n        return clone;\r\n    }\r\n    /** \r\n     * Attention! This method significantly extends the base method of the Array parent class. The method shows different behavior with respect to the number and type of arguments. If only one argument is given, the method behaves according to the following types:\r\n\r\n       1) function: standard filtering as in Array\r\n       2) Array: is taken as an array of row indices to be returned\r\n\r\n    In the event that multiple filters of different vectors are to be considered at the same time, the arguments are given in a row as 1) vector identifier and 2) vector filter function. In this way, it is possible to sort the required number of identifier/function pairs one after the other, e.g. <Matrix>.filter(2, (v,i,arr) => v > 30, \"B\", (v,i,arr) = > in == 5).\r\n     * @return {this | null} A filtered matrix.\r\n    */\r\n    filter() {\r\n        if([...arguments].length === 0) return this;\r\n        else if([...arguments].length === 1) {\r\n            var arg = [...arguments][0];\r\n            if(typeof arg == \"function\") return new Matrix(...new Array(...this).filter(arg));\r\n            /* filters rows by indexes */\r\n            else if(Array.isArray(arg)) {\r\n                var target = this.clone().flush();\r\n                for(var i = 0; i < arg.length; i++) {\r\n                    target.appendRow(...this.row(arg[i]))\r\n                }\r\n                return target;\r\n            }\r\n            else return null;\r\n        }\r\n        else {\r\n            var groups = [];\r\n            if([...arguments].length % 2 !== 0) throw new Error(\"Odd number of arguments!!\")\r\n            for(var i = 0; i < [...arguments].length; i +=2) {\r\n                groups.push({\r\n                    v: this.item([...arguments][i]),\r\n                    f: [...arguments][i + 1]\r\n                });\r\n            };\r\n            var target = this.clone().flush();\r\n            const interval = Math.round(Math.sqrt(this.maxRows()));\r\n            for(var r = 0; r < this.maxRows(); r++) {   \r\n                if(groups.map(g => g.f(g.v[r], r, g.v)).filter(g => g).length === groups.length) {\r\n                    target.appendRow(...this.row(r))\r\n                }\r\n            }\r\n            return target;\r\n        }\r\n    }\r\n    filterByIndex(...indexes) {\r\n        var _ = new Matrix();\r\n        for(let v of this) {\r\n            _.push(v.filterByIndex(...indexes));\r\n        }\r\n        return _;\r\n    }\r\n    /** Removes rows with any null value across all values in the row. */\r\n    removeEmpty() {\r\n        var fs = new Array(...this).map((v,i) => [i, (v) => v !== null]).flat(Infinity);\r\n        return this.filter(...fs);\r\n    }\r\n    /**\r\n     * Returns an array of values across the indexed row.\r\n     * @param {number} index Row index.\r\n     * @returns {Array} An array of the row values.\r\n     */\r\n    row(index) {\r\n        if(index > this.maxRows() - 1) return null;\r\n        return new Array(...this).map(v => v[index] || null);\r\n    }\r\n    appendRow(...values) {\r\n        for(var i = 0; i < values.length; i++) {\r\n            (this[i] || []).push(values[i])\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Removes the vector values but leave the matrix structure (in terms of vector types etc.) intact.\r\n     * @returns {this}\r\n     */\r\n    flush() {\r\n        for(var v of this) {\r\n            v.flush();\r\n        };\r\n        return this;\r\n    }\r\n    /**\r\n     * Returns the length of the vector with the largest number of elements.\r\n     * @returns {number}\r\n     */\r\n    maxRows() {\r\n        return Math.max(...new Array(...this).map(v => v.length));\r\n    }\r\n    minRows() {\r\n        return Math.min(...new Array(...this).map(v => v.length));\r\n    }\r\n    /**\r\n     * Randomly filters N of cases from the variable values.\r\n     * @param {number} size If the argument is less than 1, it is considered the percentage of cases to be selected from among the values. If greater than or equal to 1, the argument is treated as the absolute number of cases to be selected.\r\n     */\r\n    sample(size) {\r\n        size = validators.positiveDecimal.fn(size);\r\n        var indexes = (size < 1 ? Math.getRandomIndexes(this.maxRows(), Math.round(size * this.maxRows())) : Math.getRandomIndexes(this.maxRows(), size > this.maxRows() ? this.maxRows() : Math.round(size))).sort();\r\n        return this.filter(indexes);\r\n    }\r\n    analyze(method) {\r\n        return new MatrixAnalysis(method, this);\r\n    }\r\n    serialize() {\r\n        var _m = {\r\n            name: this.name(),\r\n            vectors: []\r\n        };\r\n        for(var v of this) {\r\n            _m.vectors.push(v.serialize());\r\n        }\r\n        return _m;\r\n    }\r\n    static deserialize(data) {\r\n        if(typeof data != \"object\") {\r\n            try {\r\n                data = JSON.parse(data);\r\n            } catch(e) {\r\n                console.error(\"Failed to parse the matrix data.\")\r\n                return null;\r\n            }\r\n        }\r\n        matrixName = data.name;\r\n        var M = new Matrix();\r\n        data.vectors.forEach(v => M.push(Vector.deserialize(v)));\r\n        return M;\r\n    }\r\n}\r\n\r\nMatrix.prototype.isMatrix = true;\r\n\r\n/**\r\n * Allows inserting only NumericVector members,.\r\n */\r\nclass NumericMatrix extends Matrix \r\n{\r\n    push() {\r\n        for(let a of [...arguments].filter(v => v)) {\r\n            if(a?.type === 1) super.push(a)\r\n            else if(Array.isArray(a)) super.push(a.numerify());\r\n            else {\r\n                throw new ArgumentError(\"Argument is not a numeric vector or a numeric array.\");\r\n            }\r\n        };\r\n    }\r\n}\r\n\r\n// #endregion\r\n\r\nclass MatrixAnalysis {\r\n    constructor(model, parent = null) {\r\n        if(parent) this.parent = parent?.isMatrix ? parent : null;\r\n        if(typeof model == \"string\") {            \r\n            if(!MatrixMethodsModels.find(m => model == m.name)) throw new Error(\"Matrix model not found: \" + model);\r\n            else this.model = MatrixMethodsModels.find(m => model == m.name);\r\n        } \r\n        else if(typeof model == \"object\") this.model = model;\r\n        else throw new Error(\"Unknown MatrixAnalysis model parameter type.\");\r\n    }\r\n    /**\r\n     * Returns the name of the method.\r\n     */\r\n    get name() {return this.model.name};\r\n    /**\r\n     * Returns the calculation method.\r\n     */\r\n    get fn() {return this.model.fn};\r\n    /**\r\n     * Returns default filter function applied before the method is calculated.\r\n     */\r\n    get filter() {\r\n        return this.model.filter ? this.model.filter.fn : () => this.parent;\r\n    }\r\n    get wiki() {\r\n        if(this.model) {\r\n            return {\r\n                name: this.model.name,\r\n                title: $(this.model.wiki.title),\r\n                description: this.model.wiki?.description ? $(this.model.wiki.description) : null,\r\n                filter: this.model.filter ? $(this.model.filter.text) : null,\r\n                example: this.model.example ? this.model.example.stringify() : null,\r\n                arguments: (function(args){\r\n                    var _ = [];\r\n                    if(!args) return [];\r\n                    else {\r\n                        for(let k of Object.keys(args)) {\r\n                            var a = args[k];\r\n                            _.push({\r\n                                name: a.name,\r\n                                title: $(a.wiki?.title) || null,\r\n                                description: $(a.wiki?.description) || null,\r\n                                required: a.required,\r\n                                default: a.default || null,\r\n                                validator: a.validator ? $(a.validator.text) : null,\r\n                                schema: a.schema\r\n                            })\r\n                        }\r\n                    }\r\n                    return _;\r\n                })(this.model.args)\r\n            }\r\n        } else return {};\r\n    }\r\n    /**\r\n     * Returns an inteface for input and output schemas.\r\n     */\r\n    get schema() {\r\n        return {\r\n            output: new OutputSchema(this.model.returns),\r\n            form: new FormMatrixSchema(this.model.args)\r\n        }\r\n    }\r\n    /**\r\n     * Applies the model filter to the parent, stores the result into the \"matrix\" property and returns self. The matrix is the method's ultimate input.\r\n     * @param {*} config No imployed yet.\r\n     * @returns {self}\r\n     */\r\n    prepare(){\r\n        if(!this.parent) throw new Error(\"The method cannot be called without a parent specified.\");\r\n        if([...arguments].length > 0) this.validate(...arguments);\r\n        if(this.args.find(a => Array.isArray(a) ? a.hasOnlyVectorChildren() : false)) {\r\n            var multiples = (this.args.filter(a => Array.isArray(a) ? !a?.isVector ? a.filter(aa => a?.isVector) : false : false)).flat() || [];\r\n            var selectors = new Array(...multiples, ...this.args.filter(a => a?.isVector));            \r\n            this.matrix = this.filter(this.parent.select(...selectors), this.args);\r\n            for(var i = 0; i < this.args.length; i++) {\r\n                if(this.args[i]?.isVector) {\r\n                    this.args[i] = this.matrix[i];\r\n                }\r\n                else if(!Array.isArray(this.args[i])) {\r\n                    this.args[i] = this.args[i];\r\n                }\r\n                else if(this.args[i].hasOnlyVectorChildren()) {\r\n                    this.args[i] = new Array(...this.matrix).slice(0, this.args[i].length);\r\n                    i += this.args[i].length;\r\n                }\r\n                else this.args[i] = this.args[i];\r\n            }\r\n        } \r\n        else {\r\n            this.matrix = this.filter(this.parent.select(...this.args), this.args);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Returns the minimum of (required) arguments for this method.\r\n     */\r\n    get minArgs() {\r\n        return this.model.minArgs || Object.entries(this.model.args).filter(a => a.required).length;\r\n    }\r\n    /**\r\n     * Validates the method arguments.\r\n     * @returns {Array} Returns an array of validated arguments (or nothing if a validation error is thrown before).\r\n     */\r\n    validate(...args) {\r\n        if(!this.parent) return new Empty($(\"jrQP\"));\r\n        var output = [];\r\n        let ts = this.model.args;\r\n        for(var i = 0; i < ts.length; i++) {            \r\n            let arg = args[i];\r\n            var validatorFn = (ts[i].validator?.fn) || ((value) => value);\r\n            if(ts[i].class === 1 || !ts[i].class) {\r\n                arg = this.parent.item(arg);    //\"Pro argument ${name} (${title}) nelze použít vektor typu ${type}.\"\r\n                var types = (ts[i].type || [1,2,3]);\r\n                if(!arg && ts[i].required) throw new Error(\"Vektor nenalezen\");//ArgumentError($(\"RLob\", {value: arg}), this); \r\n                else if(!arg && !ts[i].required) output.push(null);\r\n                else if(types.indexOf(arg?.type()) < 0){\r\n                    throw new Error(`This type of vector (${arg.type()}) is not allowed. Allowed types: ` + types.toString());\r\n                    //throw new ArgumentError($(\"dSWt\", {name: ts[i].name, title: $(ts[i]?.wiki.title), type: $(arg?.constructor?.name)}), this);   \r\n                } \r\n                else if(ts[i].required && !arg) throw new Error(\"The argument is required!\");\r\n                else output.push(arg);                \r\n            }\r\n            else if (ts[i].class === 2) {\r\n                if(!Array.isArray(arg)) throw new ArgumentError($(\"eJTP\", {name: ts[i].name, title: $(this.model.args[i].wiki.title)}));\r\n                var _varr = [];\r\n                var types = ts[i].type || [1,2,3];\r\n                for(var v = 0; v < arg.length; v++) {\r\n                    var _v;\r\n                    if(arg[v]?.isVector) _v = arg[v];\r\n                    else if(!arg[v]?.isVector) _v = this.parent.item(arg[v]);\r\n                    if(!_v) throw new ArgumentError(`The argument array item of index ${v} is neither a vector nor a valid identifier: ${arg[v]}`);\r\n                    else arg[v] = _v;\r\n                }\r\n                if(Number(ts[i].min) > 0 && arg.length < Number(ts[i].min)) throw new ArgumentError($(\"kdjd\", {name: ts[i].name, title: $(this.model.args[i].wiki.title), value: ts[i].min, param: arg.length}));\r\n                if(Number(ts[i].max) > 0 && arg.length > Number(ts[i].max)) throw new ArgumentError($(\"qkPg\", {name: ts[i].name, title: $(this.model.args[i].wiki.title), value: ts[i].max, param: arg.length}))\r\n                for(let v of arg) {\r\n                    if(types.indexOf(v.type()) < 0) throw new ArgumentError($(\"nQvK\", {type: v?.constructor?.name, allowed: types.toString()}), this);\r\n                    else _varr.push(v);\r\n                }\r\n                output.push(_varr);            \r\n            }\r\n            /* all other types expcept vector and matrix */\r\n            else if (ts[i].class === 3) {\r\n                if(ts[i].type == \"enum\") {\r\n                    output.push(validatorFn(arg));\r\n                }\r\n            }\r\n            /*\r\n            if(!ts[i].required) {\r\n                if((arg === null || arg === undefined)) output.push(ts[i].default || null);\r\n                else output.push(validatorFn(arg));\r\n            }\r\n            */\r\n            else {\r\n                if(!arg && arg !== false && arg !== 0) throw new ArgumentError($(\"dSWt\", {name: ts[i].name, title: $(ts[i]?.title), method: $(this.model.wiki?.title)}), this); \r\n                else output.push(validatorFn(arg))    \r\n            }\r\n        }\r\n        this.args = output;\r\n        return this;\r\n    }    \r\n    /**\r\n     * Call the calculation function and returns either the VectorAnalysis instance with the result property storing the result or the result itself (see params). If either input preparation or validation has not been called before, it is automatically called.\r\n     * @param {boolean} returnSelf If true, the VectorAnalysis is returned, with the result property storing the calculation result. Otherwise the result is returned. Default true.\r\n     * @returns {self | any}\r\n     */\r\n    run() {\r\n        this.runStart = new Date();\r\n        if(!this.parent) return new Empty($(\"jrQP\"));\r\n        //if(!this.matrix) this.prepare();\r\n        if([...arguments].length > 0) this.validate(...arguments);\r\n        if(!this.matrix) this.prepare();\r\n        this.result = this.model.fn(...(this.args || []));\r\n        this.runEnd = new Date();\r\n        return this;\r\n    }\r\n    /**\r\n     * \r\n     * @param {Matrix} parent Specifies the matrix on which the method should be applied.\r\n     * @returns {MatrixAnalysis} Returns the original MatrixAnalysis instance.\r\n     */\r\n    with(parent) {\r\n        this.parent = parent;\r\n        return this;\r\n    }\r\n    /**\r\n     * Releases the matrix resources of this method while changing their values from Matrix to its length (maxRows property).\r\n     * @returns {self}\r\n     */\r\n    free() {\r\n        this.parent = this.parent.maxRows();\r\n        this.matrix = this.matrix.maxRows();\r\n        return this;\r\n    }\r\n    /**\r\n     * Returns duration of the \"run\" method (whatever it includes inside) in milliseconds.\r\n     */\r\n    duration() {\r\n        if(this.runStart && this.runEnd) return this.runEnd.getTime() - this.runStart.getTime();\r\n        else return null;\r\n    }\r\n}\r\n\r\n\r\nclass MatrixMethod {\r\n    constructor(model, parent = null) {\r\n        if(parent) this.parent = parent;\r\n        if(typeof model == \"string\") {            \r\n            if(!Models.table[model]) throw new Error(\"Model not found: \" + model);\r\n            else this.model = MatrixMethodsModels[model];\r\n            \r\n        } else if(typeof model == \"object\") this.model = model;\r\n        else throw new Error(\"Unknown TableMethod constructor parameter type.\")\r\n    }\r\n    /**\r\n     * Returns the name of the method.\r\n     */\r\n    get name() {return this.model.name};\r\n    /**\r\n     * Main function.\r\n     */\r\n    get fn() {return this.model.fn};\r\n    /**\r\n     * Returns default filter function applied before the method is calculated.\r\n     */\r\n    get filter() {return this.model.filter ? this.model.filter.fn : function(v) {return true}}\r\n    /**\r\n     * Returns an object with method documentation.\r\n     */\r\n    get wiki() {\r\n        if(this.model) {\r\n            return {\r\n                name: this.model.name,\r\n                title: $(this.model.wiki.title),\r\n                description: this.model.wiki?.description ? $(this.model.wiki.description) : null,\r\n                filter: this.model.filter ? $(this.model.filter.text) : null,\r\n                example: this.model.example ? this.model.example.stringify() : null,\r\n                arguments: (function(args){\r\n                    var _ = [];\r\n                    if(!args) return [];\r\n                    else {\r\n                        for(let k of Object.keys(args)) {\r\n                            var a = args[k];\r\n                            _.push({\r\n                                name: a.name,\r\n                                title: $(a.wiki?.title) || null,\r\n                                description: $(a.wiki?.description) || null,\r\n                                required: a.required,\r\n                                default: a.default || null,\r\n                                validator: a.validator ? $(a.validator.text) : null,\r\n                                schema: a.schema\r\n                            })\r\n                        }\r\n                    }\r\n                    return _;\r\n                })(this.model.args)\r\n            }\r\n        } else return {};\r\n    }\r\n    /* Generates a markdown documentation for the matrix method */\r\n    markdown(level = 1) {\r\n        return MatrixMarkdown(this, level);\r\n    }\r\n    \r\n    /**\r\n     * \r\n     * @returns {any} Returns the result of the main function.\r\n     */\r\n    call() {\r\n        if(!this.parent) return new Empty($(\"jrQP\"));\r\n        var args = this.validate(...arguments);\r\n        return this.model.fn(...args)\r\n    }\r\n    /**\r\n     * \r\n     * @param {Variable} parent Specifies the matrix on which the method should be applied.\r\n     * @returns {VectorMethod} Returns the original TableMethod instance.\r\n     */\r\n    with(parent) {\r\n        this.parent = parent;\r\n        return this;\r\n    }\r\n    get minArgs() {\r\n        return this.model.minArgs || Object.entries(this.model.args).filter(a => a.required).length;\r\n    }\r\n    /**\r\n     * Validates the method arguments.s\r\n     * @returns {Array} Returns an array of validated arguments (or nothing if a validation error is thrown before).\r\n     */\r\n    validate(...args) {\r\n        if(!this.parent) return new Empty($(\"jrQP\"));\r\n        if(this.model.argsToMatrix) {\r\n            var M = (args.length === 0) ? this.parent : this.parent.select(...args);\r\n            return this.model.args[0].validator.fn(M);\r\n        }\r\n        var output = [];\r\n        let ts = this.model.args;\r\n        for(var i = 0; i < ts.length; i++) {            \r\n            let arg = args[i];\r\n            if(ts[i].class === 1 || !ts[i].class) arg = this.parent.item(arg);\r\n            else if (ts[i].class === 2) {\r\n\r\n            }\r\n            if(!ts[i].required) {\r\n                if((arg === null || arg === undefined)) T.push(ts[i].default || null);\r\n                else output.push(ts[i].validator.fn(arg));\r\n            }\r\n            else {\r\n                if(!arg && arg !== false && arg !== 0) throw new ArgumentError($(\"dSWt\", {name: ts[i].name, title: $(ts[i]?.title), method: $(this.model.wiki?.title)}), this); \r\n                else output.push(ts[i].validator.fn(arg))    \r\n            }\r\n        }\r\n        return output;\r\n    }    \r\n}\r\n\r\n// #region Models\r\n// core functions\r\nconst matrixMethods = {\r\n    correlPearson: function(x,y) {\r\n       var T = new Matrix(x,y).removeEmpty();\r\n       x = T[0];\r\n       y = T[1];\r\n       var arr = x.map(function(_,i){ return [_,y[i]]});\r\n       var n = T.maxRows();\r\n       var nSxy = n * arr.map(v => v[0] * v[1]).sum();\r\n       var SxSy =  x.sum() * y.sum();\r\n       var nSx2_Sx2 = n * (x.map(v => Math.pow(v, 2))).sum() - Math.pow(x.sum(), 2);\r\n       var nSy2_Sy2 = n * (y.map(v => Math.pow(v, 2))).sum() - Math.pow(y.sum(), 2);\r\n       var r = (nSxy - SxSy) / Math.pow(nSx2_Sx2 * nSy2_Sy2, 0.5);\r\n       var df = n -2;\r\n       var t_test = (r * Math.pow(n -2, 0.5)/Math.pow(1-Math.pow(r,2),0.5));\r\n       //var p = (1-dist.tdist(t_test,df))*2;\r\n       var p = dist.tdist(t_test,df);\r\n       return {\r\n           r: r,\r\n           p: p\r\n       };\r\n    },\r\n    correlSpearman: function(x,y) {\r\n        var T = new Matrix(x,y).removeEmpty();\r\n        x = T[0].toAvgRank();\r\n        y = T[1].toAvgRank();\r\n        var n = x.length;\r\n        var d2 = x.map((_x, i) => Math.pow(_x - y[i],2)).sum();\r\n        var rs = 1 - ((6 * d2) / (n * (Math.pow(n, 2) - 1)));\r\n        var df = n - 2;\r\n        var t_test = rs / (Math.pow(1-Math.pow(rs,2),0.5))*Math.pow(n-2,0.5);\r\n        //var p = (1-dist.tdist(t_test,df)) * 2;\r\n        var p = dist.tdist(t_test,df);\r\n        return {\r\n            r: rs,\r\n            df: df,\r\n            p: p\r\n        }\r\n    },\r\n    correlKendall: function(x,y){\r\n        var T = new Matrix(x,y).removeEmpty();\r\n        x = T[0];\r\n        y = T[1];\r\n        const n = x.length;\r\n        const yr = y.toAvgRank(0);\r\n        var _ = x.toAvgRank(0).map(function(v,i){return {x: v, y: yr[i]}}).sort((a,b) => a.x < b.x ? -1 : 1);\r\n        var cor = (_.map((r,i) => (_.slice(i+1, _.length).filter(__ => (__.x > r.x && __.y > r.y))))).flat(2).filter( i => i !== 0).length;\r\n        var dis = (_.map((r,i) => (_.slice(i+1, _.length).filter(__ => (__.x > r.x && __.y < r.y))))).flat(2).filter( i => i !== 0).length;\r\n        var t_cor = (_.map(function(v,i){return (_.slice(i+1, _.length).filter(__ => __.x === v.x)).length})).sum();\r\n        var t_dis = (_.map(function(v,i){return (_.slice(i+1, _.length).filter(__ => __.y === v.y)).length})).sum();\r\n        var c = Math.combinations(_.length, 2);\r\n        var taua = (cor-dis)/c;\r\n        var taub = (cor-dis)/Math.sqrt((c-t_cor)*(c-t_dis));\r\n        var z = (3 * taua * Math.pow(n*(n-1), .5))/Math.pow(2*(2*n+5), .5);\r\n        //var z = (3 * taub * Math.pow(n*(n-1), .5))/Math.pow(2*(2*n+5), .5);\r\n        //var p = 2* (1 - dist.normsdist(Math.abs(z)));\r\n        var p = dist.normsdist(Math.abs(z));\r\n        return {\r\n            r: taub,\r\n            n: n,\r\n            p: p\r\n        }\r\n        /* obsolete */\r\n        return {\r\n            r: taub,\r\n            A: taua,\r\n            B: taub,\r\n            N: n,\r\n            df: n-1,\r\n            z:z,\r\n            p:p,\r\n        }\r\n    },\r\n    correlPartial: function(x,y,z){\r\n        var T = new Matrix(z,y,x).removeEmpty();\r\n        var n = T.maxRows();\r\n        var ryz = T.correlPearson(1,2);\r\n        var ryx = T.correlPearson(1,0);\r\n        var rzx = T.correlPearson(2,0);\r\n        var rp = (ryz.r - ryx.r * rzx.r)/Math.sqrt((1-Math.pow(ryx.r,2))*(1-Math.pow(rzx.r,2)));\r\n        var t = (rp * Math.sqrt((n-3)))/(Math.sqrt(1-Math.pow(rp,2)));\r\n        var p = (1 - dist.tdist(t, n-3)) * 2;\r\n        return {\r\n            r: rp,\r\n            n: n,\r\n            //t: t,\r\n            p: p\r\n        }\r\n    },\r\n    correlBiserial: function(x,y){\r\n        var T = new Matrix(x,y).removeEmpty();\r\n        var zeroOne = new Array(...T[0]).map(v => v ? 1 : 0);\r\n        x = new NumericVector(zeroOne);\r\n        y = T.item(1);\r\n        return matrixMethods.correlPearson(x,y);\r\n    },\r\n    /** https://en.wikipedia.org/wiki/Phi_coefficient */\r\n    correlPhi: function(x,y) {\r\n        var T = new Table(x,y).removeEmpty();\r\n        x = T.item(0).toNumeric().values();\r\n        y = T.item(1).toNumeric().values();\r\n        debugger;\r\n        var x1y1 = x.filter((_x,i) => _x == 1 && y[i] == 1).length;\r\n        var x1y0 = x.filter((_x,i) => _x == 1 && y[i] == 0).length;\r\n        var x0y1 = x.filter((_x,i) => _x == 0 && y[i] == 1).length;\r\n        var x0y0 = x.filter((_x,i) => _x == 0 && y[i] == 0).length;\r\n        var x1 = x.filter(_x => _x == 1).length;\r\n        var x0 = x.filter(_x => _x == 0).length;\r\n        var y1 = y.filter(_y => _y == 1).length;\r\n        var y0 = y.filter(_y => _y == 0).length;\r\n        var phi = (x1y1*x0y0 - x1y0*x0y1)/Math.sqrt(x1*x0*y1*y0);\r\n        debugger;\r\n        return {};\r\n    },\r\n    ttest_independent: function(vectors,factor){\r\n        var arrays = factor ? new Array(...new Matrix(factor, vectors[0]).pivot(1,0)).slice(0,2) : new Array(...vectors).slice(0,2);\r\n        var x = arrays[0];\r\n        var y = arrays[1];\r\n        var nx = x.length;\r\n        var ny = y.length;\r\n        var df = nx + ny-2;\r\n        var sx2 = Math.pow(x.sum(),2);\r\n        var sy2 = Math.pow(y.sum(),2);\r\n        var mx = x.avg();\r\n        var my = y.avg();\r\n        var x_2 = (x.map(_ => Math.pow(_,2))).sum();\r\n        var y_2 = (y.map(_ => Math.pow(_,2))).sum();\r\n        var t = (mx-my) / Math.pow(((x_2-sx2/nx) + (y_2-sy2/ny))/df * (1/nx+1/ny), 0.5);\r\n        var p = dist.tdist(t, df) * 2;\r\n        return {\r\n            t: t,\r\n            p: p,\r\n            df: df\r\n        }\r\n    },\r\n    ttest_paired: function(x,y){\r\n        var xy = x.map((_,i) => [_,y[i]]);\r\n        var n = xy.length;\r\n        var df = n * 2 - 2;\r\n        var x_y = xy.map(_ => _[0] - _[1]);\r\n        var t = (x_y.sum()/n)/Math.pow(((x_y.map(_ => Math.pow(_,2))).sum() - Math.pow(x_y.sum(),2)/n)/(n*(n-1)),0.5);    \r\n        var p = dist.tdist(t, df) * 2;\r\n        return {\r\n            t: t,\r\n            p: p,\r\n            df: df\r\n        }\r\n    },\r\n    anova_oneway: function(vectors, factor) {\r\n        var arrays = (factor ? new Array(...new Matrix(factor, vectors[0]).pivot(1,0)) : new Array(...vectors)).map(v => v.removeEmpty());\r\n        var ns = arrays.map(a => a.length);\r\n        var g_avg = arrays.map(a => a.avg());\r\n        var yi_total = (arrays.map((a, i) => a.sum())).sum();\r\n        var yi_avg = yi_total / ns.sum();\r\n        var pow_yi_min = arrays.map((a, i) => a.map(_ => Math.pow(_ - g_avg[i], 2)));\r\n        var pow_yi_min_total = (pow_yi_min.map(a => a.sum())).sum();\r\n        var yi_yn = g_avg.map((g, i) => Math.pow(g - yi_avg, 2) * ns[i]);\r\n        var yi_yn_total = yi_yn.sum();\r\n        var dfwg = (ns.sum() - ns.length);\r\n        var F = (yi_yn.sum() / (ns.length - 1)) / (pow_yi_min_total / dfwg);\r\n        var P2 = yi_yn_total / (yi_yn_total + pow_yi_min_total);\r\n        var p = dist.fdistrt(F, ns.length - 1, dfwg);\r\n        return {\r\n            F: F,\r\n            P2: P2,\r\n            p: p,\r\n            df: dfwg,\r\n            n: ns.sum(),\r\n            ANOVA: {\r\n                totalOfGroups: arrays.length,\r\n                betweenGroups: {\r\n                    sumOfSquares: yi_yn_total,\r\n                    df: ns.length - 1\r\n                },\r\n                withinGroups: {\r\n                    sumOfsquares: pow_yi_min_total,\r\n                    df: dfwg\r\n                },\r\n                total: {\r\n                    sumOfSquares: yi_yn_total + pow_yi_min_total,\r\n                    df: ns.length - 1 + dfwg\r\n                }\r\n            }\r\n        };\r\n    },\r\n    mannwhitney: function(vectors,factor){\r\n        var arrays = factor ? new Array(...new Matrix(factor, vectors[0]).pivot(1,0)).slice(0,2) : new Array(...vectors).slice(0,2);\r\n        var x = arrays[0];\r\n        var y = arrays[1];\r\n        var all = x.concat(y);\r\n        var ac = all.length;\r\n        var xa = x.map(function(v,i){\r\n            var vd = all.rankAvg(v, 0);\r\n            var va = all.rankAvg(v, 1);\r\n            return vd + (ac + 1 - vd - va)/2;\r\n        });\r\n        var ya = y.map(function(v,i){\r\n            var vd = all.rankAvg(v, 0);\r\n            var va = all.rankAvg(v, 1);\r\n            return vd + (ac + 1 - vd - va)/2;\r\n        });\r\n        var R1 = xa.sum();\r\n        var R2 = ya.sum();\r\n        var N1 = xa.length;\r\n        var N2 = ya.length;\r\n        var U1 = N1*N2+N1*(N1+1)/2 - R1;\r\n        var U2 = N1*N2+N2*(N2+1)/2 - R2;\r\n        var U = Math.min(U1,U2);\r\n        var z = (U-N1*N2/2)/Math.sqrt(N1*N2*(N1+N2+1)/12)\r\n        var p = dist.normsdist(z)*2;\r\n        return {\r\n            U: U,\r\n            Z: z,\r\n            p: p,\r\n            //n1: N1,\r\n            //n2: N2\r\n        }\r\n    },    \r\n    genreg: function(x,y,t = 1){\r\n        var T = new Matrix(x,y)//.removeEmpty();\r\n        var model = $(enumerators.regressionModel.values.find(_ => _.key == t)?.title);\r\n        x = T[0];\r\n        y = T[1];\r\n        switch (t) {\r\n            case 1:\r\n                break;\r\n            case 2: \r\n                x = x.map(e => Math.log(e));\r\n                break;\r\n            case 3:\r\n                x = x.map(e => 1/e);\r\n                break;\r\n            case 4:\r\n                y = y.map(e => Math.log(e));\r\n                break;\r\n            case 5:\r\n                x = x.map(e => Math.log(e));\r\n                y = y.map(e => Math.log(e));\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        var n = x.length;\r\n        var x2 = x.map(_ => Math.pow(_,2)); // x2i\r\n        var xy = x.map((_,i) => _ * y[i]); // xiyi\r\n        var mx = x.avg();\r\n        var my = y.avg();\r\n        var mx2 = x2.avg();\r\n        var mxy = xy.avg();\r\n        var beta1 = (mxy-mx*my)/(mx2-Math.pow(mx,2));\r\n        var beta0 = my - beta1 * mx;\r\n        var yexp = x.map(_ => beta0 + beta1*_);\r\n        var sr = y.map((_,i) => Math.pow(yexp[i] - _, 2)).sum();\r\n        var st = y.map(_ => Math.pow(_ - my,2)).sum();\r\n        var r2 = (st-sr)/st;\r\n        var r = matrixMethods.correlPearson(x,y).r; //Math.sqrt(r2);\r\n        var F = (st-sr)/(sr/(n-2));\r\n        var p = dist.fdistrt(F,1,n-2);\r\n        return {\r\n            model: model,\r\n            r2: r2,\r\n            r: r,\r\n            F: F,\r\n            p: p,\r\n            beta0: beta0,\r\n            beta1: beta1,\r\n            fn: function(x){ return beta0 + x * beta1},\r\n            //n: x.length\r\n        };\r\n    },\r\n    contingency: function(x,y,n) {\r\n        var xd = x.distinct();\r\n        var yd = y.distinct();\r\n        var xy = new Array(...x.map(function(_x,i){return {x: _x, y: y[i], n: n ? n[i] || 0 : 1}}));\r\n        var xyn = xy.map(function(_){return {x:_.x, y: _.y}}).distinct().map(function(_,i){\r\n            _.n = xy.filter(o => (o.x === _.x && o.y === _.y)).map(_ => _.n).sum();\r\n            return _;\r\n        });\r\n        var total = (xyn.map(_ => _.n)).sum();\r\n        var sx = xd.map(function(_){return {x: _ ,t: (xyn.filter(f => f.x === _).map(_ => _.n)).sum()}});\r\n        var sy = yd.map(function(_){return {y: _ ,t: (xyn.filter(f => f.y === _).map(_ => _.n)).sum()}});\r\n        xd = xd.map(function(_,i){return {k: _, t: sx[i].t}});\r\n        yd = yd.map(function(_,i){return {k: _, t: sy[i].t}});\r\n        var _xyn = xyn.map(function(_,i){\r\n            var _n = yd.find(_y => _y.k === _.y).t * xd.find(_x => _x.k === _.x).t / total;\r\n            return {x: _.x, y: _.y, n: _n};\r\n        });\r\n        var __xyn = _xyn.map(function(_){\r\n            return {x: _.x, y: _.y, n: Math.pow(_.n  -xyn.find(o => o.x === _.x && o.y === _.y).n,2)/_.n};\r\n        })\r\n        var G = (__xyn.map(_ => _.n)).sum(); /* G = phi square */\r\n        var df = (xd.length -1)*(yd.length -1); /* degrees of freedom */\r\n        var p = 1 - dist.chisqdist(G,df,true); /* significance value*/ \r\n        var C = Math.sqrt(G/(G+total)); /* C = Pearson's C */\r\n        var V = Math.sqrt(G/(total*2)); /* V = Cramer's V */\r\n        return {\r\n            phi: G,\r\n            p: p,\r\n            df: df,\r\n            C: C,\r\n            V: V,\r\n        }\r\n    }\r\n};\r\n\r\nconst MatrixMethodsModels = [\r\n    {   name: \"correlPearson\",\r\n        fn: matrixMethods.correlPearson,\r\n        filter: filters.matrixNotEmpty,\r\n        example: function(x,y) {\r\n            var a = new NumericVector([3, 7, 5, 10, 9, 8, 4, 1, 6, 2]);\r\n            var b = new NumericVector([4, 9, 2, 10, 8, 7, 6, 3, 5, 1]);\r\n            var correl = new Matrix(a,b).correlPearson(a,b);\r\n            /*\r\n            {\r\n                \"r\": 0.8424242424242424,\r\n                \"n\": 10,\r\n                \"p\": 0.0022200000000001108\r\n            }\r\n            */\r\n        },\r\n        wiki: {\r\n            title: \"pTvR\",\r\n            description: \"wPyG\"\r\n        },\r\n        returns: matrixResultSchemas.correlPearson,\r\n        args: [\r\n            {\r\n                name: \"x\",\r\n                wiki: {title: \"qFEM\"},\r\n                type: [1],\r\n                required: true,\r\n                validator: validators.isNumericVector,\r\n                schema: argumentSchemas.numericVector,\r\n                class: 1\r\n            },        \r\n            {\r\n                name: \"y\",\r\n                wiki: {title: \"tpUu\"},\r\n                type: [1],\r\n                required: true,\r\n                validator: validators.isNumericVector,\r\n                schema: argumentSchemas.numericVector,\r\n                class: 1\r\n            }            \r\n        ]\r\n    },\r\n    {   name: \"correlSpearman\",\r\n        fn: matrixMethods.correlSpearman,\r\n        filter: filters.matrixNotEmpty,\r\n        returns: matrixResultSchemas.correlSpearman,\r\n        example: function() {\r\n            var a = new NumericVector([3, 7, 5, 10, 9, 8, 4, 1, 6, 1]);\r\n            var b = new NumericVector([4, 9, 2, 10, 8, 7, 6, 3, 5, 1]);\r\n            var M = new Matrix(a,b).correlSpearman(a,b);\r\n            /*\r\n            {\r\n                \"r\": 0.8575757575757575,\r\n                \"n\": 10,\r\n                \"p\": 0.0015199999999999658\r\n            }\r\n            */\r\n        },\r\n        wiki: {\r\n            title: \"eJTT\",\r\n            description: \"jAGi\"\r\n        },\r\n        args: [\r\n            {\r\n                name: \"x\",\r\n                wiki: {title: \"qFEM\"},\r\n                type: [1],\r\n                required: true,\r\n                validator: validators.isNumericVector,\r\n                schema: argumentSchemas.numericVector,\r\n                class: 1\r\n            },        \r\n            {\r\n                name: \"y\",\r\n                wiki: {title: \"tpUu\"},\r\n                type: [1],\r\n                required: true,\r\n                validator: validators.isNumericVector,\r\n                schema: argumentSchemas.numericVector,\r\n                class: 1\r\n        }            \r\n    ]\r\n    },\r\n    {   name: \"correlKendall\",\r\n        fn: matrixMethods.correlKendall,\r\n        filter: filters.matrixNotEmpty,\r\n        returns: matrixResultSchemas.correlKendall,\r\n        example: function() {\r\n            var a = new NumericVector([3, 7, 5, 10, 9, 8, 4, 1, 6, 1]);\r\n            var b = new NumericVector([4, 9, 2, 10, 8, 7, 6, 3, 5, 1]);\r\n            var M = new Matrix(a,b).correlKendall(a,b);\r\n            /*\r\n            {\r\n                \"r\": 0.7111111111111111,\r\n                \"n\": 10,\r\n                \"p\": 0.004207551285491773\r\n            }\r\n            */\r\n        },\r\n        wiki: {\r\n            title: \"mgBC\",\r\n            description: \"VOmC\"\r\n        },\r\n        args: [\r\n            {\r\n                name: \"x\",\r\n                wiki: {title: \"qFEM\"},\r\n                type: [1],\r\n                required: true,\r\n                validator: validators.isNumericVector,\r\n                schema: argumentSchemas.numericVector,\r\n                class: 1\r\n            },        \r\n            {\r\n                name: \"y\",\r\n                wiki: {title: \"tpUu\"},\r\n                type: [1],\r\n                required: true,\r\n                validator: validators.isNumericVector,\r\n                schema: argumentSchemas.numericVector,\r\n                class: 1\r\n            }            \r\n        ]\r\n    },\r\n    {   name: \"correlPartial\",\r\n        fn: matrixMethods.correlPartial,\r\n        returns: matrixResultSchemas.correlPartial,\r\n        example: function() {\r\n            var x = new NumericVector(2,3,4,5,6,7,8,9,10,11);\r\n            var y = new NumericVector(3,5,4,6,5,7,8,9,1,11);\r\n            var z = new NumericVector(-5,-4,1,2,3,-2,6,8,10,12);\r\n            var partial = new Matrix(x,y,z).correlPartial(0,1,2);\r\n            /*\r\n            {\r\n                \"r\": 0.3222896122166014,\r\n                \"n\": 10,\r\n                \"p\": 0.39764\r\n            }\r\n            */\r\n        },\r\n        filter: filters.matrixNotEmpty,\r\n        wiki: {\r\n            title: \"xfSf\",\r\n            description: \"UcfZ\"\r\n        },\r\n        args: [ \r\n            {\r\n                name: \"x\",\r\n                wiki: {title: \"qFEM\"},\r\n                type: [1],\r\n                required: true,\r\n                validator: validators.isNumericVector,\r\n                schema: argumentSchemas.numericVector,\r\n                class: 1\r\n            },        \r\n            {\r\n                name: \"y\",\r\n                wiki: {title: \"tpUu\"},\r\n                type: [1],\r\n                required: true,\r\n                validator: validators.isNumericVector,\r\n                schema: argumentSchemas.numericVector,\r\n                class: 1\r\n            },\r\n            {\r\n                name: \"z\",\r\n                wiki: {title: \"gxOb\"},\r\n                type: [1],\r\n                required: true,\r\n                validator: validators.isNumericVector,\r\n                schema: argumentSchemas.numericVector,\r\n                class: 1\r\n            }            \r\n        ]\r\n    },\r\n    {   name: \"correlBiserial\",\r\n        fn: matrixMethods.correlBiserial,\r\n        example: function() {\r\n\r\n        },\r\n        filter: filters.matrixNotEmpty,\r\n        returns: matrixResultSchemas.correlPearson,\r\n        wiki: {\r\n            title: \"AagR\",\r\n            description: \"OMiA\"\r\n        },\r\n        args: [\r\n            {\r\n                name: \"x\",\r\n                wiki: {title: \"qFEM\"},\r\n                type: [3],\r\n                required: true,\r\n                validator: validators.isBooleanVector,\r\n                schema: argumentSchemas.booleanVector,\r\n                class: 1\r\n            },        \r\n            {\r\n                name: \"y\",\r\n                wiki: {title: \"tpUu\"},\r\n                type: [1],\r\n                required: true,\r\n                validator: validators.isNumericVector,\r\n                schema: argumentSchemas.numericVector,\r\n                class: 1\r\n            }\r\n        ]\r\n    },\r\n    {   name: \"correlPhi\",\r\n        fn: matrixMethods.correlPhi,\r\n        example: null,\r\n        filter: filters.matrixNotEmpty,\r\n        wiki: {\r\n            title: \"eJTT\",\r\n            description: \"jAGi\"\r\n        },\r\n        args: [\r\n            {\r\n                name: \"x\",\r\n                wiki: {title: \"qFEM\"},\r\n                type: [3],\r\n                required: true,\r\n                validator: validators.booleanVariable,\r\n                schema: argumentSchemas.booleanVector,\r\n                class: 1\r\n            },        \r\n            {\r\n                name: \"y\",\r\n                wiki: {title: \"tpUu\"},\r\n                type: [3],\r\n                required: true,\r\n                validator: validators.booleanVariable,\r\n                schema: argumentSchemas.booleanVector,\r\n                class: 1\r\n            }            \r\n        ]\r\n    },\r\n    {   name: \"ttestind\",\r\n        fn: matrixMethods.ttest_independent,\r\n        filter: filters.anovaLikeMatrix,\r\n        example: function(){\r\n            var M = new Matrix([],[]).ttestind(0,1);\r\n        },\r\n        wiki: {\r\n            title: \"YqRh\",\r\n            description: \"gILL\"\r\n        },\r\n        returns: matrixResultSchemas.ttestpair,\r\n        args: [{\r\n                name: \"vectors\",\r\n                wiki: {title: \"qFEM\"},\r\n                type: [1],\r\n                min: 1,\r\n                max: 2,\r\n                required: true,\r\n                validator: validators.isNumericMatrix,\r\n                schema: argumentSchemas.numericMatrix,\r\n                class: 2\r\n            },        \r\n            {\r\n                name: \"factor\",\r\n                wiki: {title: \"tpUu\"},\r\n                type: [1,2,3],\r\n                required: false,\r\n                validator: validators.isNumericVector,\r\n                schema: argumentSchemas.numericVector,\r\n                class: 1\r\n        }]\r\n    },\r\n    {   name: \"ttestpair\",\r\n        fn: matrixMethods.ttest_paired,\r\n        filter: filters.matrixNotEmpty,\r\n        example: function(){\r\n            var test = new Matrix([2,3,2,4,5], [9,8,7,9,10]).ttestpair(0,1);\r\n            /*\r\n            {\r\n                \"t\": -13.500000000000025,\r\n                \"p\": 0,\r\n                \"n\": 5,\r\n                \"mx\": 3.2,\r\n                \"my\": 8.6\r\n            } \r\n            */\r\n        },\r\n        wiki: {\r\n            title: \"mmXD\",\r\n            description: \"kPqo\"\r\n        },\r\n        returns: matrixResultSchemas.ttestpair,\r\n        args: [{\r\n                name: \"x\",\r\n                wiki: {title: \"qFEM\"},\r\n                type: [1],\r\n                required: true,\r\n                validator: validators.isNumericVector,\r\n                schema: argumentSchemas.numericVector,\r\n                class: 1\r\n            },        \r\n            {\r\n                name: \"y\",\r\n                wiki: {title: \"tpUu\"},\r\n                type: [1],\r\n                required: true,\r\n                validator: validators.isNumericVector,\r\n                schema: argumentSchemas.numericVector,\r\n                class: 1\r\n        }]\r\n    },\r\n    {   name: \"anovaow\",\r\n        fn: matrixMethods.anova_oneway,\r\n        argsToMatrix: true,\r\n        filter: filters.anovaLikeMatrix,\r\n        returns: matrixResultSchemas.anovaow,\r\n        example: function(){\r\n            var M = new Matrix([2,3,2,4,5], [9,8,7,9,10], [1,7,19,32,90]).anovaow(0,1,2);\r\n            /* OR */\r\n            var M = new Matrix([2,3,2,4,5], [9,8,7,9,10], [1,7,19,32,90]).anovaow();\r\n            /* OR */\r\n            var M = new Matrix([2,3,2,4,5,9,8,7,9,10,1,7,19,32,90],[1,1,1,1,1,2,2,2,2,2,3,3,3,3,3]).pivot(0,1).anovaow();\r\n            /*\r\n            {\r\n                \"F\": 2.3227069789300536,\r\n                \"P2\": 0.2790807107363349,\r\n                \"p\": 0.1403847313472082,\r\n                \"n\": 15,\r\n                \"ANOVA\": {\r\n                    \"totalOfGroups\": 3,\r\n                    \"betweenGroups\": {\r\n                        \"sumOfSquares\": 1976.9333333333336,\r\n                        \"df\": 2\r\n                    },\r\n                    \"withinGroups\": {\r\n                        \"sumOfsquares\": 5106.800000000001,\r\n                        \"df\": 12\r\n                    },\r\n                    \"total\": {\r\n                        \"sumOfSquares\": 7083.7333333333345,\r\n                        \"df\": 14\r\n                    }\r\n                }\r\n            }\r\n            */\r\n\r\n        },\r\n        wiki: {\r\n            title: \"baJo\",\r\n            description: \"qqQo\"\r\n        },\r\n        args: [\r\n                {\r\n                    name: \"vectors\",\r\n                    wiki: {title: \"iJaa\"},\r\n                    min: 1,\r\n                    type: [1],\r\n                    required: true,\r\n                    validator: validators.isNumericMatrix,\r\n                    schema: argumentSchemas.numericMatrix,\r\n                    class: 2\r\n                },{\r\n                    name: \"factor\",\r\n                    wiki: {title: \"iJEe\"},\r\n                    type: [1,2,3],\r\n                    required: false,\r\n                    validator: validators.isVector,\r\n                    schema: argumentSchemas.numericMatrix,\r\n                    class: 1\r\n                }\r\n        ]\r\n    },\r\n    {   name: \"mwu\",\r\n        fn: matrixMethods.mannwhitney,\r\n        example: function(){\r\n            var M = new Matrix([1,2,3,4,5,6,7,8,9,10],[1,3,5,7,9,11,13,15,17,19]).mwu();\r\n        },\r\n        filter: filters.anovaLikeMatrix,\r\n        wiki: {\r\n            title: \"rPQr\",\r\n            description: \"vzHj\"\r\n        },\r\n        url: \"https://en.wikipedia.org/wiki/Mann%E2%80%93Whitney_U_test\",\r\n        args: [{\r\n                name: \"vectors\",\r\n                wiki: {title: \"qFEM\"},\r\n                min: 1,\r\n                type: [1],\r\n                required: true,\r\n                validator: validators.anovaLikeMatrix,\r\n                schema: argumentSchemas.numericMatrix,\r\n                class: 2\r\n            },        \r\n            {\r\n                name: \"factor\",\r\n                wiki: {title: \"tpUu\"},\r\n                type: [1,2,3],\r\n                required: false,\r\n                validator: validators.isVector,\r\n                schema: argumentSchemas.vector\r\n        }]\r\n    },\r\n    {   name: \"genreg\",\r\n        fn: matrixMethods.genreg,\r\n        filter: filters.matrixNotEmpty,\r\n        returns: matrixResultSchemas.genreg,\r\n        example: function(x,y,t) {},\r\n        wiki: {\r\n            title: \"vlCA\",\r\n            description: \"dzFE\"\r\n        },\r\n        args: [\r\n            {\r\n                name: \"independent\",\r\n                wiki: {title: \"jDlm\"},\r\n                type: [1],\r\n                required: true,\r\n                validator: validators.isNumericVector,\r\n                schema: argumentSchemas.numericVector,\r\n                class: 1\r\n            },        \r\n            {\r\n                name: \"dependent\",\r\n                wiki: {title: \"jFVv\"},\r\n                type: [1],\r\n                required: true,\r\n                validator: validators.isNumericVector,\r\n                schema: argumentSchemas.numericVector,\r\n                class: 1\r\n            },\r\n            {\r\n                name: \"model\",\r\n                wiki: {title: \"OBml\"},\r\n                type: \"enum\",\r\n                required: true,\r\n                schema: \"integer\",\r\n                default: 1,\r\n                validator: validators.enumValidator(enumerators.regressionModel),\r\n                enums: enumerators.regressionModel,\r\n                class: 3\r\n            }            \r\n        ]\r\n    },\r\n    {   name: \"linreg\",\r\n        fn: matrixMethods.linreg,\r\n        filter: filters.matrixNotEmpty,\r\n        returns: matrixResultSchemas.linreg,\r\n        example: function(x,y) {\r\n            var M = new Matrix([160,160,162,163,161,170,172,177,179,178,182,184,183],[57,55,59,60,52,67,69,74,75,76,78,80,87]);\r\n            var model = M.linreg(0,1);\r\n            /*\r\n            {\r\n                \"r2\": 0.949355403714833,\r\n                \"r\": 0.974348707452744,\r\n                \"F\": 206.19987534428648,\r\n                \"p\": 1.802343407852902e-8,\r\n                \"beta0\": -126.2043685121107,\r\n                \"beta1\": 1.1338667820069204,\r\n                \"n\": 13,\r\n                \"fn\": function (x) { return beta0 + x * beta1}\r\n            }\r\n            */\r\n           var x190 = model.fn(190); /* 89.23032006920417 */\r\n\r\n        },\r\n        wiki: {\r\n            title: \"KwSQ\",\r\n            description: \"celD\"\r\n        },\r\n        args: [\r\n            {\r\n                name: \"independent\",\r\n                wiki: {title: \"jDlm\"},\r\n                type: [1],\r\n                required: true,\r\n                validator: validators.isNumericVector,\r\n                schema: argumentSchemas.numericVector,\r\n                class: 1\r\n            },        \r\n            {\r\n                name: \"dependent\",\r\n                wiki: {title: \"jFVv\"},\r\n                type: [1],\r\n                required: true,\r\n                validator: validators.isNumericVector,\r\n                schema: argumentSchemas.numericVector,\r\n                class: 1\r\n            }            \r\n        ]\r\n    },\r\n    {   name: \"contingency\",\r\n        fn: matrixMethods.contingency,\r\n        filter: null,\r\n        example: function(x,y,n) {\r\n            var a = new StringVector(\"A\",\"A\",\"A\",\"B\",\"B\",\"B\",\"C\",\"C\",\"C\",\"C\");\r\n            var b = new StringVector(\"X\",\"Y\",\"X\",\"Y\",\"X\",\"Y\",\"X\",\"Y\",\"X\",\"Y\");\r\n            var n = new NumericVector(5,6,4,5,7,3,9,3,4,6);\r\n            var m = new Matrix(a,b,n);\r\n            var c1 = m.contingency(a,b);\r\n            /*\r\n            {\r\n\r\n            }\r\n            */\r\n           var c2 = m.continency(a,b,n);\r\n           /*\r\n            {\r\n\r\n            }\r\n            */\r\n        },\r\n        wiki: {\r\n            title: \"gRix\",\r\n            description: \"fqwd\"\r\n        },\r\n        returns: matrixResultSchemas.contingency,\r\n        args: [\r\n            {\r\n                name: \"x\",\r\n                wiki: {title: \"gLRN\"},\r\n                type: [1,2,3],\r\n                required: true,\r\n                validator: validators.isVector,\r\n                schema: argumentSchemas.vector,\r\n                class: 1\r\n            },        \r\n            {\r\n                name: \"y\",\r\n                wiki: {title: \"bpjC\"},\r\n                type: [1,2,3],\r\n                required: true,\r\n                validator: validators.isVector,\r\n                schema: argumentSchemas.vector,\r\n                class: 1\r\n            },        \r\n            {\r\n                name: \"n\",\r\n                wiki: {title: \"fqUi\"},\r\n                type: [1],\r\n                required: false,\r\n                validator: validators.isNumericVector,\r\n                schema: argumentSchemas.numericVector,\r\n                class: 1\r\n            }               \r\n        ]\r\n    }\r\n];\r\n\r\nMatrixMethodsModels.forEach(function(m) {\r\n    Matrix.prototype[m.name] = function() {\r\n        var M = new MatrixMethod(m, this);\r\n        return M.call(...arguments);\r\n    };\r\n});\r\n\r\nconst Models = {}\r\nfunction mapModels() {\r\n    MatrixMethodsModels.map(function(m){Models[m.name] = new MatrixMethod(m)});\r\n}\r\nmapModels();\r\n\r\n// #endregion\r\n\r\n// #region MISC\r\n\r\nArray.prototype.toNumericMatrix = function() {\r\n    return new NumericMatrix(...this);\r\n}\r\n\r\n// #endregion\r\n\r\n// #region MISC\r\n\r\n\r\n// #endregion\r\n\r\nmodule.exports = {\r\n    Matrix: Matrix,\r\n    NumericMatrix: NumericMatrix,\r\n    MatrixAnalysis: MatrixAnalysis,\r\n    //Models: Models,\r\n    methods: matrixMethods,\r\n    MatrixOverview: function() {\r\n        return MatrixOverview(Models)},\r\n};\n\n//# sourceURL=webpack://retusa/./libs/matrix.js?");

/***/ }),

/***/ "./libs/parsers.js":
/*!*************************!*\
  !*** ./libs/parsers.js ***!
  \*************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var $ = (__webpack_require__(/*! ./locale */ \"./libs/locale.js\").call);\r\n//var {NumericMatrix} = require(\"./matrix\");\r\n//var {NumericVector} = require(\"./vector\");\r\n\r\n// #region FILTERS\r\n\r\nlet f_notnull = function(v) {\r\n    return v !== null;\r\n}\r\nlet f_number = function(v) {\r\n    return v === 0 || v < 0 || v > 0\r\n}\r\nlet f_string = function(v) {\r\n    return v?.length > 0\r\n}\r\nlet f_boolean = function(v) {\r\n    return v === true || v === false\r\n}\r\n\r\nlet f_removeEmpty = function() {\r\n    return true;\r\n}\r\n\r\nlet f_bypassMatrix = function(matrix) {\r\n    return matrix\r\n}\r\n\r\nlet f_removeMatrixEmpty = function(matrix) {\r\n    var fs = new Array(...matrix).map((v,i) => [i, (v) => v !== null]).flat(Infinity);\r\n    return matrix.filter(...fs);\r\n}\r\n\r\nlet f_anovaLikeMatrix = function(matrix, args) {\r\n    if(!args) {\r\n        return new Array(...matrix).map(v => v.removeEmpty());\r\n    }\r\n    else if(args[1]?.isVector) {\r\n        var notEmptyFactorIndexes = new Array(...args[1]).map((v,i) => v !== null ? i : -1).filter(i => i > -1);\r\n        return (!matrix.isMatrix ? matrix.matrify() : matrix).filterByIndex(...notEmptyFactorIndexes);\r\n    } else {        \r\n        var x =  new Array(...matrix).map(v => v.removeEmpty());\r\n        return x;\r\n    }\r\n}\r\n\r\nconst filters = {\r\n    any: {fn: () => true, text: \"FxzE\"},\r\n    notnull: {fn: f_notnull, text: \"ndPx\"},\r\n    number: {fn: f_number, text: \"GDkm\"},\r\n    string: {fn: f_string, text: \"jocS\"},\r\n    boolean: {fn: f_boolean, text: \"uUYu\"},\r\n    bypassMatrix: {fn: f_boolean, text: \"\"},\r\n    matrixNotEmpty: {fn: f_removeMatrixEmpty, text: \"rAyq\"},\r\n    anovaLikeMatrix: {fn: f_anovaLikeMatrix, text: \"CPwN\"}\r\n}\r\n\r\n// #endregion\r\n\r\n// #region VALIDATORS\r\n\r\nlet v_any = function(v) {return v};\r\n\r\nlet v_isObject = function(v) {\r\n    if(typeof v == \"object\") {\r\n        if(!Array.isArray(v)) return v;\r\n        else new TypeError($(\"YpHg\", {value: v}));\r\n    } else if(typeof v == \"string\") {\r\n        try {\r\n            return v_isObject(JSON.parse(v));\r\n        } catch(e) {\r\n            new TypeError($(\"YpHg\", {value: v}));\r\n        }\r\n    }\r\n}\r\n\r\nlet v_isNumber = function(v) {\r\n    if(v === 0 || !isNaN(v)) return Number(v);\r\n    else throw new RangeError($(\"Jphg\", {value: v}));\r\n}\r\nlet v_zeroToOneInc = function(v) {\r\n    if(v_isNumber(v) < 0 || v_isNumber(v) > 1) throw new Error($(\"vKlu\", {value: v}));\r\n    else return v;    \r\n}\r\n\r\nlet v_boolean = function(v) {\r\n    if(v) return true;\r\n    else return false;\r\n}\r\n\r\nlet v_isNotEmpty = function(v) {\r\n    if(!v && v !== 0 && v !== false) throw new Error($(\"HOuY\"));\r\n    else return v;\r\n}\r\n\r\nlet v_isVector = function(v, autoparse){\r\n    v = v_isNotEmpty(v);\r\n    if(v?.isVector) return v;\r\n    else if(Array.isArray(v) && autoparse) {\r\n        return v.vectorify();\r\n    } else throw new Error($(\"RLob\", {value: typeof v}));\r\n}\r\n\r\nlet v_isNumericVector = function(v, autoparse = false){\r\n    if(v_isVector(v, autoparse).type() === 1) return v;\r\n    else throw new Error($(\"Kvpv\"))\r\n}\r\n\r\nlet v_isBooleanVector = function(v, autoparse = false){\r\n    if(v_isVector(v, autoparse).type() === 3) return v;\r\n    else throw new Error($(\"KvHv\"))\r\n}\r\n\r\n/** nezohledňuje požadovanou velikost vzorku */\r\nlet v_generalCorrelVariable = function(v, autoparse = false) {\r\n    return v_isNumericVector(v, autoparse = false);\r\n}\r\n\r\nlet v_positiveInteger = function(v) {\r\n    if(v_isInteger(v) <= 0) throw new Error($(\"HCgv\"));\r\n    else return v;\r\n}\r\n\r\nlet v_isInteger = function(v){\r\n    if(v_isNumber(v) % 1 !== 0) throw new TypeError($(\"tEdu\"));\r\n    else return Number(v);\r\n}\r\n\r\nlet v_positiveDecimal = function(v) {\r\n    if(v_isNumber(v) <= 0) throw new Error($(\"HCgv\"));\r\n    else return v;\r\n}\r\n\r\nlet v_isArray = function(v) {\r\n    if(!Array.isArray(v)) throw new Error($(\"FepU\", {value: v}))\r\n    else return v;\r\n}\r\n\r\nlet v_isNumericMatrix = function(v) {\r\n    v = v_isNotEmpty(v);\r\n    if(v.constructor?.name !== \"NumericMatrix\") {\r\n        if(!Array.isArray(v)) throw new Error($(\"FIQW\", {value: v}))    \r\n        else if(v.find(i => i?.type !== 1)) throw new Error($(\"FIQW\", {value: v}));\r\n        else return v.toNumericMatrix();\r\n    } else return v\r\n}\r\n\r\nconst validators = {\r\n    any: {fn: v_any, text: \"Blaz\"},\r\n    isObject: {fn: v_isObject, text: \"MFvf\"},\r\n    isNumber: {fn: v_isNumber, text: \"NfvF\"},\r\n    isArray: {fn: v_isArray, text: \"\"},\r\n    isNotEmpty: {fn: v_isNotEmpty, text: \"\"},\r\n    zeroToOneInc: {fn: v_zeroToOneInc, text:\"GweD\"},\r\n    boolean: {fn: v_boolean, text:\"GHFj\"},\r\n    isVector: {fn: v_isVector, text: \"GJry\"},\r\n    isNumericVector: {fn: v_isNumericVector, text: \"gGTf\"},\r\n    generalCorrelVector: {fn: v_isNumericVector, text: \"gGTf\"},\r\n    positiveInteger: {fn: v_positiveInteger, text: \"dFiw\"},\r\n    positiveDecimal: {fn: v_positiveDecimal, text: \"bpCq\"},\r\n    isBooleanVector: {fn: v_isBooleanVector, text: \"OCKc\"},\r\n    isNumericMatrix: {fn: v_isNumericMatrix, text: \"OrZc\"},\r\n    enumValidator: function(enumSchema) {\r\n        const es = enumSchema;\r\n        return {\r\n            fn: function(v) {\r\n                if(es.values.find(e => e.key == v)) return v;\r\n                else throw new Error($(\"HhLt\", {name: es.name, value: v, keys: es.values.map(e => e.key).toString()}))\r\n            }\r\n            , text: \"aaVG\"}       \r\n    }\r\n}\r\n\r\nconst enumerators= {\r\n    regressionModel: {\r\n        name: \"model\",\r\n        type: \"enum\",\r\n        title: \"OBml\",\r\n        default: 1,\r\n        values: [\r\n            {\r\n                key: 1, //linear\r\n                title: \"Cpsw\"\r\n            },\r\n            {\r\n                key: 2, // logistic\r\n                title: \"UtZD\"\r\n            },\r\n            {\r\n                key: 3, //hyperbole\r\n                title: \"SCOx\"\r\n            },\r\n            {\r\n                key: 4, //exponential\r\n                title: \"QaJi\"\r\n            },\r\n            {\r\n                key: 5, //quadratic\r\n                title: \"HUMA\"\r\n            }\r\n        ]\r\n    },\r\n    frequencyOrder: {\r\n        name: \"order\",\r\n        type: \"enum\",\r\n        title: \"gZCx\",\r\n        default: 1,\r\n        values: [\r\n            {\r\n                key: 1, \r\n                title: \"AUbD\"\r\n            },\r\n            {\r\n                key: 2, \r\n                title: \"WSJH\"\r\n            },\r\n            {\r\n                key: 3, \r\n                title: \"dkxz\"\r\n            },\r\n            {\r\n                key: 4, \r\n                title: \"vJCU\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n\r\n// #endregion\r\n\r\nmodule.exports = {\r\n    filters: filters,\r\n    validators: validators,\r\n    enumerators: enumerators\r\n}\r\n\n\n//# sourceURL=webpack://retusa/./libs/parsers.js?");

/***/ }),

/***/ "./libs/schemas.js":
/*!*************************!*\
  !*** ./libs/schemas.js ***!
  \*************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var $ = (__webpack_require__(/*! ./locale */ \"./libs/locale.js\").call);\r\n\r\nconst snippets = {\r\n    sig: {\r\n        \"$id\": \"#root/p\", \r\n        \"title\": \"sDgR\", \r\n        \"type\": \"number\",\r\n        \"examples\": [\r\n            0.000001925387777546028\r\n        ],\r\n        \"default\": 0.0\r\n    },\r\n    ttest: {\r\n        \"title\": \"cBNP\", \r\n        \"type\": \"number\",\r\n        \"examples\": [\r\n            8.2\r\n        ],\r\n        \"default\": 0.0\r\n    },\r\n    df: {\r\n        \"$id\": \"#root/df\", \r\n        \"title\": \"OYQu\", \r\n        \"type\": \"integer\",\r\n        \"examples\": [\r\n            6\r\n        ],\r\n        \"default\": 0\r\n    }\r\n}\r\n\r\nclass Schema {\r\n    lsign = \"- \";\r\n    lstart = \"\\n\";\r\n    bold = \"**\";\r\n    typeHighlight = \"`\";\r\n    to = \"\";\r\n    constructor(schema) {\r\n      this.schema = schema;\r\n    }\r\n    markdown() {\r\n        try {\r\n            this.to =\"\";\r\n            this.append(this.schema);\r\n            return this.to;\r\n        } catch(e) {\r\n            console.warn(e);\r\n            return \"\";\r\n        }\r\n      \r\n    }\r\n    append(what, indent = 0) {\r\n      if(what.type == \"object\") {\r\n        this.createPropTitle(what, indent);\r\n        this.loopObjItems(what.properties, indent);\r\n      } else if (what.type == \"array\") {\r\n        this.createPropTitle(what, indent);\r\n        this.loopObjItems(what.items.properties, indent);\r\n      } else {\r\n        this.createPropTitle(what, indent)\r\n      }\r\n    }\r\n    loopObjItems(o, indent) {\r\n      indent++;\r\n      var keys = Object.keys(o);\r\n      for(var k of keys) {\r\n        var e = {...o[k], name: k};\r\n        this.createIndentLi(indent) + this.append(e, indent);\r\n      }\r\n    }\r\n    loopArrItems(o, indent) {\r\n      indent++;\r\n      var keys = Object.keys(o);\r\n      for(var k of keys) {\r\n        var e = {...o[k], name: k};\r\n        this.createIndentLi(indent) + this.append(e, indent);\r\n      }\r\n    }\r\n    createPropTitle(e, indent = 1) {\r\n      //this.to += `${this.createIndentLi(indent)}${$(e.name) ? '<span style=\"color: blue\">**' + $(e.name) + '**</span>: ' : \"\"}*${$(e.title)}* ${this.createMDTypeBadge(e.type)}`;\r\n      this.to += `${this.createIndentLi(indent)}${$(e.name) ? this.bold + $(e.name) + this.bold + ': ' : \"\"}*${$(e.title) !== $(e.type) ? $(e.title) : \"\"}* ${this.createMDTypeBadge(e.type)}`;\r\n    }\r\n    createIndentLi(indent) {\r\n      var str = this.lstart;\r\n      for(var i = 0; i < indent; i++) {\r\n        str += \"  \";\r\n      }\r\n      str += this.lsign;\r\n      return str;\r\n    }\r\n    createMDTypeBadge(type) {\r\n      var types = [\r\n        {t: \"string\", c: \"🟡\", l: \"RFGF\"},\r\n        {t: \"number\", c: \"🔴\", l: \"pelN\"},\r\n        {t: \"integer\", c: \"c\", l: \"llQx\"},\r\n        {t: \"boolean\", c: \"🟣\", l: \"XPGc\"},\r\n        {t: \"object\", c: \"🟦\", l: \"kLhB\"},\r\n        {t: \"array\", c: \"🟩\", l: \"qdkt\"},\r\n        {t: \"any\", c: \"🟤\", l: \"oMas\"},\r\n        {t: \"Matrix\", c: \"🔢\", l: \"DfLu\"},\r\n        {t: \"NumericMatrix\", c: \"🔢\", l: \"gLcr\"},\r\n        {t: \"NumericVector\", c: \"[🔴]\", l: \"yWUM\"},\r\n        {t: \"StringVector\", c: \"[🟡]\", l: \"Hwus\"},\r\n        {t: \"BooleanVector\", c: \"[🟣]\", l: \"boQk\"},\r\n        {t: \"function\", c: \"#️⃣\", l: \"GPHk\"},\r\n      ];\r\n      var s = types.find(i => i.t == type) || {c: \"🟤\", l: \"oMas\"};\r\n      //return `<span style=\"margin-left: 1rem; padding: 2px 4px; border-radius: 5px; background-color: ${s.c}\">${$(s.l)}</span>`\r\n      return `${this.typeHighlight}${s.c} ${$(s.l)}${this.typeHighlight}`\r\n    }\r\n  }\r\n\r\nclass ArgumentSchema extends Schema {\r\nconstructor() {\r\n    super(...arguments);\r\n    this.lsign = \"\";\r\n    this.lstart = \"\";\r\n    this.typeHighlight = \"\";\r\n}\r\ncreatePropTitle(e, indent = 1) {\r\n    this.to +=this.createMDTypeBadge(e.type);\r\n    }\r\n}\r\n\r\nclass OutputSchema {\r\n    constructor(schema) {\r\n        if(!schema) throw new Error(\"Schema argument cannot be empty\")\r\n        this.type = schema.type;\r\n        this.title = $(schema.title);\r\n        /**\r\n        * Returns true if the element is not a kind of object (object, array, function etc.).\r\n        */\r\n        this.isSimple = !(this.type == \"object\" || this.type == \"array\");\r\n        this.isObject = this.type == \"object\";\r\n        this.isArray = this.type == \"array\";\r\n        this.format = schema.format || null;\r\n        if(schema?.properties){\r\n            this.properties = [];\r\n            for(let key of Object.keys(schema.properties))\r\n            {\r\n                var p = new OutputSchema(schema.properties[key]);\r\n                p.id = key;\r\n                this.properties.push(p);\r\n            }\r\n        } \r\n        else if(schema?.items?.properties){\r\n            this.items = [];\r\n            for(let key of Object.keys(schema.items.properties))\r\n            {\r\n                var i = new OutputSchema(schema.items.properties[key]);\r\n                i.id = key;\r\n                this.items.push(i);\r\n            }                \r\n        }\r\n    }\r\n}\r\n\r\nclass FormVectorSchema {\r\n    constructor(args) {\r\n        if(!args) return null;\r\n        var items = [];\r\n        for(let key of Object.keys(args)) {\r\n            var i = args[key];\r\n            var _i = {\r\n                id: key,\r\n                title: i.wiki?.title ? $(i.wiki.title) : null,\r\n                description: i.wiki?.description ? $(i.wiki.description) : null,\r\n                required: i.required,\r\n                default: i.default,\r\n                type: i.type,\r\n                fn: i.validator?.fn ? i.validator.fn : null,\r\n                validatorText: i.validator?.text ? $(i.validator.text) : null,\r\n            };\r\n            if(i.enums) {\r\n                _i.enums = [];\r\n                for(let e of i.enums.values) {\r\n                    _i.enums.push({\r\n                        id: e.key,\r\n                        title: $(e.title)\r\n                    });\r\n                }\r\n            }\r\n            items.push(_i);\r\n        }\r\n        return items;\r\n    }\r\n}\r\n\r\nconst vectorResultSchemas = {\r\n    number: {\r\n        \"definitions\": {},\r\n        \"$schema\": \"http://json-schema.org/draft-07/schema#\", \r\n        \"$id\": \"https://example.com/object1671554312.json\", \r\n        \"title\": \"pelN\", \r\n        \"type\": \"number\",\r\n        \"examples\": [\r\n            1.5\r\n        ],\r\n        \"default\": 0.0,\r\n        \"numeral\": \"0.00\"\r\n    },\r\n    any: {\r\n        \"definitions\": {},\r\n        \"$schema\": \"http://json-schema.org/draft-07/schema#\", \r\n        \"$id\": \"https://example.com/object1671554312.json\", \r\n        \"title\": \"FxzE\", \r\n        \"type\": \"any\",\r\n        \"examples\": [\r\n            1.5\r\n        ],\r\n        \"default\": 0.0\r\n    },\r\n    integer : {\r\n        \"title\": \"DQnl\", \r\n        \"type\": \"integer\",\r\n        \"examples\": [\r\n            1.5\r\n        ],\r\n        \"default\": 0.0\r\n    },\r\n    uint : {\r\n        \"title\": \"IrhN\", \r\n        \"type\": \"integer\",\r\n        \"examples\": [\r\n            1.5\r\n        ],\r\n        \"default\": 0\r\n\r\n    },\r\n    zeroToOneInc : {\r\n        \"title\": \"OQnL\", \r\n        \"type\": \"number\",\r\n        \"examples\": [\r\n            0, 0.12, 1\r\n        ]\r\n    },\r\n    string : {\r\n        \"title\": \"RFGF\", \r\n        \"type\": \"number\",\r\n        \"examples\": [\r\n            1.5\r\n        ],\r\n        \"default\": 0.0\r\n    },\r\n    boolean : { \r\n        \"title\": \"XPGc\", \r\n        \"type\": \"boolean\",\r\n        \"examples\": [\r\n            1.5\r\n        ],\r\n        \"default\": 0.0\r\n    },\r\n    histogram: {\r\n        \"title\": \"PAwR\", \r\n        \"type\": \"array\",\r\n        \"default\": [],\r\n        \"items\":{\r\n            \"$id\": \"#root/items\", \r\n            \"title\": \"Items\", \r\n            \"type\": \"object\",\r\n            \"required\": [\r\n                \"from\",\r\n                \"to\",\r\n                \"n\",\r\n                \"nc\",\r\n                \"p\",\r\n                \"pc\"\r\n            ],\r\n            \"properties\": {\r\n                \"from\": {\r\n                    \"$id\": \"#root/items/from\", \r\n                    \"title\": \"jbqY\", \r\n                    \"type\": \"number\",\r\n                    \"examples\": [\r\n                        1\r\n                    ],\r\n                    \"default\": 0\r\n                },\r\n                \"to\": {\r\n                    \"$id\": \"#root/items/to\", \r\n                    \"title\": \"GlDV\", \r\n                    \"type\": \"number\",\r\n                    \"examples\": [\r\n                        3.025\r\n                    ],\r\n                    \"default\": 0.0\r\n                },\r\n                \"n\": {\r\n                    \"$id\": \"#root/items/n\", \r\n                    \"title\": \"eHkc\", \r\n                    \"type\": \"integer\",\r\n                    \"examples\": [\r\n                        1\r\n                    ],\r\n                    \"default\": 0\r\n                },\r\n                \"nc\": {\r\n                    \"$id\": \"#root/items/nc\", \r\n                    \"title\": \"Dwuz\", \r\n                    \"type\": \"integer\",\r\n                    \"examples\": [\r\n                        1\r\n                    ],\r\n                    \"default\": 0\r\n                },\r\n                \"p\": {\r\n                    \"$id\": \"#root/items/p\", \r\n                    \"title\": \"iDVx\", \r\n                    \"type\": \"percent\",\r\n                    \"examples\": [\r\n                        0.0625\r\n                    ],\r\n                    \"default\": 0.0,\r\n                },\r\n                \"pc\": {\r\n                    \"$id\": \"#root/items/pc\", \r\n                    \"title\": \"oIyG\", \r\n                    \"type\": \"percent\",\r\n                    \"examples\": [\r\n                        0.0625\r\n                    ],\r\n                    \"default\": 0.0,\r\n                }\r\n            }\r\n        }        \r\n    },\r\n    frequency: {\r\n        \"title\": \"dYJK\", \r\n        \"type\": \"array\",\r\n        \"items\":{\r\n            \"$id\": \"#root/items\", \r\n            \"title\": \"Items\", \r\n            \"type\": \"object\",\r\n            \"required\": [\r\n                \"value\",\r\n                \"frequency\"\r\n            ],\r\n            \"properties\": {\r\n                \"value\": {\r\n                    \"$id\": \"#root/items/value\", \r\n                    \"title\": \"ZVbP\", \r\n                    \"type\": \"any\",\r\n                    \"default\": \"\",\r\n                    \"examples\": [\r\n                        \"a\"\r\n                    ],\r\n                    \"pattern\": \"^.*$\"\r\n                },\r\n                \"frequency\": {\r\n                    \"$id\": \"#root/items/frequency\", \r\n                    \"title\": \"mXpR\", \r\n                    \"type\": \"integer\",\r\n                    \"examples\": [\r\n                        2\r\n                    ],\r\n                    \"default\": 0\r\n                }\r\n            }\r\n        }\r\n    \r\n    },\r\n    ttest: {\r\n        \"definitions\": {},\r\n        \"$schema\": \"http://json-schema.org/draft-07/schema#\", \r\n        \"$id\": \"https://example.com/object1671561683.json\", \r\n        \"title\": \"sOyV\", \r\n        \"type\": \"object\",\r\n        \"required\": [\r\n            \"t\",\r\n            \"p\",\r\n            \"n\"\r\n        ],\r\n        \"properties\": {\r\n            \"t\": {\r\n                \"$id\": \"#root/t\", \r\n                \"title\": \"GmAh\", \r\n                \"type\": \"number\",\r\n                \"examples\": [\r\n                    -8.403733075366224\r\n                ],\r\n                \"default\": 0.0\r\n            },\r\n            \"p\": {\r\n                \"$id\": \"#root/p\", \r\n                \"title\": \"MpjZ\", \r\n                \"type\": \"number\",\r\n                \"examples\": [\r\n                    1\r\n                ],\r\n                \"default\": 0\r\n            },\r\n            \"n\": {\r\n                \"$id\": \"#root/n\", \r\n                \"title\": \"bLoI\", \r\n                \"type\": \"integer\",\r\n                \"examples\": [\r\n                    16\r\n                ],\r\n                \"default\": 0\r\n            }\r\n        }\r\n    },\r\n    mci: {\r\n        \"definitions\": {},\r\n        \"$schema\": \"http://json-schema.org/draft-07/schema#\", \r\n        \"$id\": \"https://example.com/object1671725902.json\", \r\n        \"title\": \"yHjW\", \r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n            \"m\": {\r\n                \"$id\": \"#root/m\", \r\n                \"title\": \"eFdj\", \r\n                \"type\": \"number\",\r\n                \"examples\": [\r\n                    6\r\n                ],\r\n                \"default\": 0\r\n            },\r\n            \"sig\": {\r\n                \"$id\": \"#root/sig\", \r\n                \"title\": \"mjPq\", \r\n                \"type\": \"number\",\r\n                \"examples\": [\r\n                    0.050000000000000044\r\n                ],\r\n                \"default\": 0.0\r\n            },\r\n            \"delta\": {\r\n                \"$id\": \"#root/delta\", \r\n                \"title\": \"NzBg\", \r\n                \"type\": \"number\",\r\n                \"examples\": [\r\n                    1.0110352875838695\r\n                ],\r\n                \"default\": 0.0\r\n            },\r\n            \"lb\": {\r\n                \"$id\": \"#root/lb\", \r\n                \"title\": \"GynK\", \r\n                \"type\": \"number\",\r\n                \"examples\": [\r\n                    4.988964712416131\r\n                ],\r\n                \"default\": 0.0\r\n            },\r\n            \"ub\": {\r\n                \"$id\": \"#root/ub\", \r\n                \"title\": \"iIPc\", \r\n                \"type\": \"number\",\r\n                \"examples\": [\r\n                    7.011035287583869\r\n                ],\r\n                \"default\": 0.0\r\n            }\r\n        }\r\n    },\r\n    pci: {\r\n        \"definitions\": {},\r\n        \"$schema\": \"http://json-schema.org/draft-07/schema#\", \r\n        \"$id\": \"https://example.com/object1672151042.json\", \r\n        \"title\": \"ZhjW\", \r\n        \"type\": \"object\",\r\n        \"required\": [\r\n            \"p\",\r\n            \"sig\",\r\n            \"delta\",\r\n            \"lb\",\r\n            \"ub\"\r\n        ],\r\n        \"properties\": {\r\n            \"p\": {\r\n                \"$id\": \"#root/p\", \r\n                \"title\": \"nCHN\", \r\n                \"type\": \"percent\",\r\n                \"examples\": [\r\n                    0.17391304347826086\r\n                ],\r\n                \"default\": 0.0\r\n            },\r\n            \"sig\": {\r\n                \"$id\": \"#root/sig\", \r\n                \"title\": \"mjPq\", \r\n                \"type\": \"number\",\r\n                \"examples\": [\r\n                    0.050000000000000044\r\n                ],\r\n                \"default\": 0.0\r\n            },\r\n            \"delta\": {\r\n                \"$id\": \"#root/delta\", \r\n                \"title\": \"NzBg\", \r\n                \"type\": \"percent\",\r\n                \"examples\": [\r\n                    0.1549041787089759\r\n                ],\r\n                \"default\": 0.0\r\n            },\r\n            \"lb\": {\r\n                \"$id\": \"#root/lb\", \r\n                \"title\": \"GynK\", \r\n                \"type\": \"percent\",\r\n                \"examples\": [\r\n                    0.019008864769284955\r\n                ],\r\n                \"default\": 0.0\r\n            },\r\n            \"ub\": {\r\n                \"$id\": \"#root/ub\", \r\n                \"title\": \"iIPc\", \r\n                \"type\": \"percent\",\r\n                \"examples\": [\r\n                    0.32881722218723675\r\n                ],\r\n                \"default\": 0.0\r\n            }\r\n        }\r\n    },    \r\n    shapirowilk: {\r\n        \"definitions\": {},\r\n        \"$schema\": \"http://json-schema.org/draft-07/schema#\", \r\n        \"$id\": \"https://example.com/object1672094205.json\", \r\n        \"title\": \"byTa\", \r\n        \"type\": \"object\",\r\n        \"required\": [\r\n            \"w\",\r\n            \"df\",\r\n            \"p\"\r\n        ],\r\n        \"properties\": {\r\n            \"W\": {\r\n                \"$id\": \"#root/w\", \r\n                \"title\": \"nZvR\", \r\n                \"type\": \"number\",\r\n                \"examples\": [\r\n                    0.9664039647188553\r\n                ],\r\n                \"default\": 0.0\r\n            },\r\n            \"df\": {\r\n                \"$id\": \"#root/df\", \r\n                \"title\": \"OYQu\", \r\n                \"type\": \"integer\",\r\n                \"examples\": [\r\n                    23\r\n                ],\r\n                \"default\": 0\r\n            },\r\n            \"p\": {\r\n                \"$id\": \"#root/p\", \r\n                \"title\": \"MpjZ\", \r\n                \"type\": \"number\",\r\n                \"examples\": [\r\n                    0.6036566524076283\r\n                ],\r\n                \"default\": 0.0\r\n            }\r\n        }\r\n    },\r\n    kstest: {\r\n        \"definitions\": {},\r\n        \"$schema\": \"http://json-schema.org/draft-07/schema#\", \r\n        \"$id\": \"https://example.com/object1672154013.json\", \r\n        \"title\": \"DLoe\", \r\n        \"type\": \"object\",\r\n        \"required\": [\r\n            \"T\",\r\n            \"df\",\r\n            \"p\"\r\n        ],\r\n        \"properties\": {\r\n            \"T\": {\r\n                \"$id\": \"#root/T\", \r\n                \"title\": \"jBSf\", \r\n                \"type\": \"number\",\r\n                \"examples\": [\r\n                    0.10974921094762696\r\n                ],\r\n                \"default\": 0.0\r\n            },\r\n            \"df\": {\r\n                \"$id\": \"#root/df\", \r\n                \"title\": \"OYQu\", \r\n                \"type\": \"integer\",\r\n                \"examples\": [\r\n                    23\r\n                ],\r\n                \"default\": 0\r\n            },\r\n            \"p\": {\r\n                \"$id\": \"#root/p\", \r\n                \"title\": \"MpjZ\", \r\n                \"type\": \"number\",\r\n                \"examples\": [\r\n                    0.6\r\n                ],\r\n                \"default\": 0.0\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst matrixResultSchemas = {\r\n    anovaow: {\r\n        \"definitions\": {},\r\n        \"$schema\": \"http://json-schema.org/draft-07/schema#\", \r\n        \"$id\": \"https://example.com/object1672343763.json\", \r\n        \"title\": \"baJo\", \r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n            \"F\": {\r\n                \"$id\": \"#root/F\", \r\n                \"title\": \"Jdfb\", \r\n                \"type\": \"number\",\r\n                \"default\": 0.0\r\n            },\r\n            \"P2\": {\r\n                \"$id\": \"#root/P2\", \r\n                \"title\": \"HksP\", \r\n                \"type\": \"number\",\r\n                \"default\": 0.0\r\n            },\r\n            \"p\": {\r\n                \"$id\": \"#root/p\", \r\n                \"title\": \"MpjZ\", \r\n                \"type\": \"number\",\r\n                \"default\": 0.0\r\n            },\r\n            \"n\": {\r\n                \"$id\": \"#root/N\", \r\n                \"title\": \"bLoI\", \r\n                \"type\": \"integer\",\r\n                \"default\": 0\r\n            },\r\n            \"ANOVA\": {\r\n                \"$id\": \"#root/ANOVA\", \r\n                \"title\": \"qCgT\", \r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                    \"totalOfGroups\": {\r\n                        \"$id\": \"#root/ANOVA/totalOfGroups\", \r\n                        \"title\": \"cXCr\", \r\n                        \"type\": \"integer\",\r\n                        \"default\": 0\r\n                    },\r\n                    \"betweenGroups\": {\r\n                        \"$id\": \"#root/ANOVA/betweenGroups\", \r\n                        \"title\": \"thNv\", \r\n                        \"type\": \"object\",\r\n                        \"properties\": {\r\n                            \"sumOfSquares\": {\r\n                                \"$id\": \"#root/ANOVA/betweenGroups/sumOfSquares\", \r\n                                \"title\": \"SqTd\", \r\n                                \"type\": \"number\",\r\n                                \"default\": 0.0\r\n                            },\r\n                            \"df\": {\r\n                                \"$id\": \"#root/ANOVA/betweenGroups/df\", \r\n                                \"title\": \"OYQu\", \r\n                                \"type\": \"integer\",\r\n                                \"default\": 0\r\n                            }\r\n                        }\r\n                    },\r\n                    \"withinGroups\": {\r\n                        \"$id\": \"#root/ANOVA/withinGroups\", \r\n                        \"title\": \"GiRP\", \r\n                        \"type\": \"object\",\r\n                        \"properties\": {\r\n                            \"sumOfsquares\": {\r\n                                \"$id\": \"#root/ANOVA/withinGroups/sumOfsquares\", \r\n                                \"title\": \"SqTd\", \r\n                                \"type\": \"number\",\r\n                                \"default\": 0.0\r\n                            },\r\n                            \"df\": {\r\n                                \"$id\": \"#root/ANOVA/withinGroups/df\", \r\n                                \"title\": \"OYQu\", \r\n                                \"type\": \"integer\",\r\n                                \"default\": 0\r\n                            }\r\n                        }\r\n                    }\r\n    ,\r\n                    \"total\": {\r\n                        \"$id\": \"#root/ANOVA/total\", \r\n                        \"title\": \"Total\", \r\n                        \"type\": \"object\",\r\n                        \"properties\": {\r\n                            \"sumOfSquares\": {\r\n                                \"$id\": \"#root/ANOVA/total/sumOfSquares\", \r\n                                \"title\": \"Sumofsquares\", \r\n                                \"type\": \"number\",\r\n                                \"default\": 0.0\r\n                            },\r\n                            \"df\": {\r\n                                \"$id\": \"#root/ANOVA/total/df\", \r\n                                \"title\": \"Df\", \r\n                                \"type\": \"integer\",\r\n                                \"default\": 0\r\n                            }\r\n                        }\r\n                    }\r\n    \r\n                }\r\n            }\r\n    \r\n        }\r\n    },\r\n    correlPearson: {\r\n        \"definitions\": {},\r\n        \"$schema\": \"http://json-schema.org/draft-07/schema#\", \r\n        \"$id\": \"https://example.com/object1672345987.json\", \r\n        \"title\": \"IIlO\", \r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n            \"r\": {\r\n                \"$id\": \"#root/r\", \r\n                \"title\": \"pTvR\", \r\n                \"type\": \"number\",\r\n                \"default\": 0.0\r\n            },\r\n            \"p\": snippets.sig\r\n        }\r\n    },\r\n    correlSpearman: {\r\n        \"definitions\": {},\r\n        \"$schema\": \"http://json-schema.org/draft-07/schema#\", \r\n        \"$id\": \"https://example.com/object1672345987.json\", \r\n        \"title\": \"IIlO\", \r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n            \"r\": {\r\n                \"$id\": \"#root/r\", \r\n                \"title\": \"eJTT\", \r\n                \"type\": \"number\",\r\n                \"default\": 0.0\r\n            },\r\n            \"df\": snippets.df,\r\n            \"p\": snippets.sig\r\n        }\r\n    },\r\n    correlKendall: {\r\n        \"definitions\": {},\r\n        \"$schema\": \"http://json-schema.org/draft-07/schema#\", \r\n        \"$id\": \"https://example.com/object1672345987.json\", \r\n        \"title\": \"IIlO\", \r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n            \"r\": {\r\n                \"$id\": \"#root/r\", \r\n                \"title\": \"mgBA\", \r\n                \"type\": \"number\",\r\n                \"default\": 0.0\r\n            },\r\n            \"df\": snippets.df,\r\n            \"p\": snippets.sig\r\n        }\r\n    },\r\n    correlPartial: {\r\n        \"definitions\": {},\r\n        \"$schema\": \"http://json-schema.org/draft-07/schema#\", \r\n        \"$id\": \"https://example.com/object1672345987.json\", \r\n        \"title\": \"IIlO\", \r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n            \"r\": {\r\n                \"$id\": \"#root/r\", \r\n                \"title\": \"pTvR\", \r\n                \"type\": \"number\",\r\n                \"default\": 0.0\r\n            },\r\n            \"p\": snippets.sig\r\n        }\r\n    },\r\n    linreg: {\r\n        \"title\": \"KwSQ\", \r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n            \"r2\": {\r\n                \"$id\": \"#root/r2\", \r\n                \"title\": \"klvS\", \r\n                \"type\": \"number\",\r\n                \"default\": 0.0\r\n            },\r\n            \"r\": {\r\n                \"$id\": \"#root/r\", \r\n                \"title\": \"pTvR\", \r\n                \"type\": \"number\",\r\n                \"default\": 0.0\r\n            },\r\n            \"F\": {\r\n                \"$id\": \"#root/F\", \r\n                \"title\": \"Jdfb\", \r\n                \"type\": \"number\",\r\n                \"default\": 0.0\r\n            },\r\n            \"p\": snippets.sig,\r\n            \"beta0\": {\r\n                \"$id\": \"#root/beta0\", \r\n                \"title\": \"slkz\", \r\n                \"type\": \"number\",\r\n                \"default\": 0.0\r\n            },\r\n            \"beta1\": {\r\n                \"$id\": \"#root/beta1\", \r\n                \"title\": \"XfCm\", \r\n                \"type\": \"number\",\r\n                \"default\": 0.0\r\n            },\r\n            \"fn\": {\r\n                \"$id\": \"#root/fn\", \r\n                \"title\": \"FeBv\", \r\n                \"type\": \"function\",\r\n                \"default\": \"🌀\"\r\n            }\r\n        }\r\n    },\r\n    genreg: {\r\n        \"title\": \"Root\", \r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n            \"model\": {\r\n                \"$id\": \"#root/model\", \r\n                \"title\": \"OBml\", \r\n                \"type\": \"string\"              \r\n            },\r\n            \"r2\": {\r\n                \"$id\": \"#root/r2\", \r\n                \"title\": \"VqBH\", \r\n                \"type\": \"number\"\r\n            },\r\n            \"r\": {\r\n                \"$id\": \"#root/r\", \r\n                \"title\": \"pTvR\", \r\n                \"type\": \"number\"\r\n            },\r\n            \"F\": {\r\n                \"$id\": \"#root/F\", \r\n                \"title\": \"Jdfb\", \r\n                \"type\": \"number\"\r\n            },\r\n            \"p\": {\r\n                \"$id\": \"#root/p\", \r\n                \"title\": \"MpjZ\", \r\n                \"type\": \"number\"\r\n            },\r\n            \"beta0\": {\r\n                \"$id\": \"#root/beta0\", \r\n                \"title\": \"TDpu\", \r\n                \"type\": \"number\"\r\n            },\r\n            \"beta1\": {\r\n                \"$id\": \"#root/beta1\", \r\n                \"title\": \"eFcW\", \r\n                \"type\": \"number\"\r\n            }\r\n        }\r\n    },\r\n    contingency: {\r\n        \"title\": \"gRix\", \r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n            \"phi\": {\r\n                \"$id\": \"#root/phi\", \r\n                \"title\": \"GfeP\", \r\n                \"type\": \"number\",\r\n                \"examples\": [\r\n                    36.80097109889032\r\n                ],\r\n                \"default\": 0.0\r\n            },\r\n            \"p\": {\r\n                \"$id\": \"#root/p\", \r\n                \"title\": \"sDgR\", \r\n                \"type\": \"number\",\r\n                \"examples\": [\r\n                    0.000001925387777546028\r\n                ],\r\n                \"default\": 0.0\r\n            },\r\n            \"df\": snippets.df,\r\n            \"C\": {\r\n                \"$id\": \"#root/C\", \r\n                \"title\": \"BUaN\", \r\n                \"type\": \"number\",\r\n                \"examples\": [\r\n                    0.29026043504540816\r\n                ],\r\n                \"default\": 0.0\r\n            },\r\n            \"V\": {\r\n                \"$id\": \"#root/V\", \r\n                \"title\": \"VYQH\", \r\n                \"type\": \"number\",\r\n                \"examples\": [\r\n                    0.21447893573405502\r\n                ],\r\n                \"default\": 0.0\r\n            }\r\n        }\r\n    },\r\n    ttestpair: {\r\n        \"title\": \"Root\", \r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n            \"t\": snippets.ttest,\r\n            \"p\": snippets.sig,\r\n            \"df\": snippets.df\r\n        }\r\n    },\r\n    ttestind: {\r\n        \"title\": \"Root\", \r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n            \"t\": snippets.ttest,\r\n            \"p\": snippets.sig,\r\n            \"df\": snippets.df\r\n        }\r\n    },\r\n    mwu: {\r\n        \"title\": \"Root\", \r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n            \"U\": {\r\n                \"$id\": \"#root/p\", \r\n                \"title\": \"TkNf\", \r\n                \"type\": \"number\",\r\n                \"examples\": [\r\n                    5.4\r\n                ],\r\n                \"default\": 0.0\r\n            },\r\n            \"Z\": {\r\n                \"$id\": \"#root/p\", \r\n                \"title\": \"Shpv\", \r\n                \"type\": \"number\",\r\n                \"examples\": [\r\n                    5.4\r\n                ],\r\n                \"default\": 0.0\r\n            },\r\n            \"p\": snippets.sig,\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nconst argumentSchemas = {\r\n    numericMatrix: {\r\n        \"definitions\": {},\r\n        \"$schema\": \"http://json-schema.org/draft-07/schema#\", \r\n        \"$id\": \"https://example.com/object1672335343.json\", \r\n        \"title\": \"gLcr\", \r\n        \"type\": \"Matrix\",\r\n        \"default\": [],\r\n        \"items\":{\r\n            \"$id\": \"#root/items\", \r\n            \"title\": \"yWUM\", \r\n            \"type\": \"array\",\r\n            \"default\": [],\r\n            \"items\":{\r\n                \"$id\": \"#root/items/items\", \r\n                \"title\": \"pelN\", \r\n                \"type\": \"number\",\r\n                \"default\": 0\r\n            }\r\n        }\r\n    },\r\n    vector: {\r\n        \"definitions\": {},\r\n        \"$schema\": \"http://json-schema.org/draft-07/schema#\", \r\n        \"$id\": \"https://example.com/object1672335343.json\", \r\n        \"title\": \"zRT3\", \r\n        \"type\": \"Vector\",\r\n        \"default\": [],\r\n        \"items\":{\r\n            \"$id\": \"#root/items\", \r\n            \"title\": \"te8N\", \r\n            \"type\": \"any\",\r\n            \"default\": []\r\n        }\r\n    },\r\n    numericVector: {\r\n        \"definitions\": {},\r\n        \"$schema\": \"http://json-schema.org/draft-07/schema#\", \r\n        \"$id\": \"https://example.com/object1672335343.json\", \r\n        \"title\": \"yWUM\", \r\n        \"type\": \"NumericVector\",\r\n        \"default\": [],\r\n        \"items\":{\r\n            \"$id\": \"#root/items\", \r\n            \"title\": \"pelN\", \r\n            \"type\": \"number\",\r\n            \"default\": []\r\n        }\r\n    },\r\n    booleanVector: {\r\n        \"definitions\": {},\r\n        \"$schema\": \"http://json-schema.org/draft-07/schema#\", \r\n        \"$id\": \"https://example.com/object1672335343.json\", \r\n        \"title\": \"WiEE\", \r\n        \"type\": \"BooleanVector\",\r\n        \"default\": [],\r\n        \"items\":{\r\n            \"$id\": \"#root/items\", \r\n            \"title\": \"pelN\", \r\n            \"type\": \"number\",\r\n            \"default\": []\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    Schema: Schema,\r\n    ArgumentSchema: ArgumentSchema,\r\n    OutputSchema: OutputSchema,\r\n    FormVectorSchema: FormVectorSchema,\r\n    FormMatrixSchema: FormVectorSchema,\r\n    vectorResultSchemas: vectorResultSchemas,\r\n    matrixResultSchemas: matrixResultSchemas,\r\n    argumentSchemas: argumentSchemas,\r\n    register: function(name, schema) {\r\n        if(vectorResultSchemas[name]) console.warn(`You are overwriting another schema named (${name}). The original schema will be overwritten, nevertheless, you may consider using another name.`);\r\n        vectorResultSchemas[name] = schema;\r\n        return module.exports;\r\n    }\r\n}\n\n//# sourceURL=webpack://retusa/./libs/schemas.js?");

/***/ }),

/***/ "./libs/vector.js":
/*!************************!*\
  !*** ./libs/vector.js ***!
  \************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\r\nvar $ = (__webpack_require__(/*! ./locale */ \"./libs/locale.js\").call);\r\nvar {filters, validators, enumerators} = __webpack_require__(/*! ./parsers */ \"./libs/parsers.js\");\r\nvar {vectorResultSchemas, OutputSchema, FormVectorSchema} = __webpack_require__(/*! ./schemas */ \"./libs/schemas.js\");\r\nconst {Array, Math, String, Function} = __webpack_require__(/*! ./extensions */ \"./libs/extensions.js\");\r\nconst {VectorMarkdown, VectorOverview} = __webpack_require__(/*! ./markdown */ \"./libs/markdown.js\");\r\nvar {VectorValueError, ArgumentError, Empty} = __webpack_require__(/*! ./errors */ \"./libs/errors.js\");\r\nconst rndWordList= [\"silver\",\"twig\",\"train\",\"reading\",\"clouds\",\"bean\",\"frogs\",\"power\",\"canvas\",\"stop\",\"van\",\"drain\",\"doctor\",\"lamp\",\"mind\",\"existence\",\"seat\",\"sky\",\"cloud\",\"burn\",\"crayon\",\"brush\",\"hat\",\"snails\",\"snail\",\"move\",\"seashore\",\"honey\",\"powder\",\"cork\",\"toothpaste\",\"cub\",\"kitty\",\"skin\",\"self\",\"rice\",\"chin\",\"cushion\",\"death\",\"steel\",\"toes\",\"cabbage\",\"stamp\",\"bone\",\"cemetery\",\"appliance\",\"fairies\",\"unit\",\"committee\",\"fall\",\"debt\",\"cherry\",\"baby\",\"rings\",\"legs\",\"knee\",\"bike\",\"cook\",\"carpenter\",\"expansion\",\"toothbrush\",\"rain\",\"fork\",\"statement\",\"house\",\"things\",\"cars\",\"root\",\"books\",\"marble\",\"swim\",\"babies\",\"jellyfish\",\"question\",\"trains\",\"apparatus\",\"wish\",\"sand\",\"lettuce\",\"sense\",\"balls\",\"baby\",\"ghost\",\"power\",\"sofa\",\"learning\",\"bushes\",\"church\",\"smile\",\"distribution\",\"reason\",\"whip\",\"giants\",\"beginner\",\"crow\",\"invention\",\"letters\",\"horses\",\"game\",\"scissors\",\"bat\",\"cover\",\"journey\",\"whistle\",\"society\",\"competition\",\"flowers\",\"sweater\",\"shoe\",\"punishment\",\"creator\",\"brain\",\"ray\",\"island\",\"mailbox\",\"pump\",\"rub\",\"hands\",\"burn\",\"spoon\",\"beetle\",\"step\",\"plot\",\"activity\",\"airplane\",\"sea\",\"grip\",\"blow\",\"pump\",\"jeans\",\"slave\",\"boys\",\"appliance\",\"ball\",\"trees\",\"cherries\",\"ladybug\",\"appliance\",\"brick\",\"doctor\",\"branch\",\"crib\",\"elbow\",\"root\",\"sheep\",\"toothpaste\",\"behavior\",\"sail\",\"voice\",\"hydrant\",\"sky\",\"hands\",\"veil\",\"crib\",\"tray\",\"wind\",\"beggar\",\"authority\",\"wax\",\"flesh\",\"afterthought\",\"existence\",\"feet\",\"creator\",\"plough\",\"hook\",\"cub\",\"bottle\",\"sidewalk\",\"weather\",\"light\",\"fight\",\"wheel\",\"fog\",\"island\",\"knife\",\"pancake\",\"bikes\",\"farmer\",\"experience\",\"lizards\",\"cracker\",\"scale\",\"rabbits\",\"camera\",\"coach\",\"airplane\",\"wrench\",\"pencil\",\"minute\",\"paper\",\"pancake\",\"push\",\"treatment\",\"shop\",\"lock\",\"string\",\"hand\",\"dinner\",\"goat\",\"wine\",\"expert\",\"creator\",\"woman\",\"trick\",\"pet\",\"news\",\"bells\",\"wire\",\"song\",\"bushes\",\"distribution\",\"tank\",\"pan\",\"feast\",\"quince\",\"nerve\",\"hair\",\"wrench\",\"cats\",\"neck\",\"work\",\"sugar\",\"tramp\",\"ants\",\"house\",\"sidewalk\",\"afterthought\",\"orange\",\"finger\",\"earth\",\"decision\",\"edge\",\"chin\",\"shoe\",\"balloon\",\"desk\",\"chicken\",\"toad\",\"building\",\"yarn\",\"seashore\",\"star\",\"snow\",\"book\",\"song\",\"boys\",\"rainstorm\",\"spring\",\"secretary\",\"cork\",\"coach\",\"range\",\"dinosaurs\",\"produce\",\"bean\",\"downtown\",\"sleet\",\"egg\",\"arm\",\"home\",\"angle\",\"whip\",\"crayon\",\"iron\",\"parcel\",\"river\",\"potato\",\"shop\",\"leaf\",\"territory\",\"ear\",\"behavior\",\"cat\",\"monkey\",\"hair\",\"trains\",\"horses\",\"volcano\",\"waste\",\"dog\",\"juice\",\"peace\",\"end\",\"route\",\"whip\",\"blade\",\"giraffe\",\"grandfather\",\"celery\",\"grandmother\",\"spoon\",\"person\",\"yam\",\"screw\",\"top\",\"watch\",\"steam\",\"impulse\",\"map\",\"history\",\"pot\",\"frog\",\"bells\",\"quilt\",\"argument\",\"apparel\",\"wind\",\"cub\",\"wish\",\"sugar\",\"servant\",\"language\",\"sun\",\"cherries\",\"need\",\"order\",\"flower\",\"seat\",\"wheel\",\"army\",\"screw\",\"icicle\",\"coal\",\"hook\",\"act\",\"action\",\"cause\",\"pet\",\"school\",\"rest\",\"cows\",\"relation\",\"road\",\"talk\",\"burn\",\"brake\",\"crook\",\"sand\",\"journey\",\"crack\",\"spade\",\"song\",\"clouds\",\"quarter\",\"spade\",\"fifth\",\"flower\",\"structure\",\"finger\",\"pain\",\"corn\",\"cakes\",\"jeans\",\"wing\",\"shame\",\"field\",\"comb\",\"pump\",\"box\",\"stone\",\"industry\",\"swim\",\"sticks\",\"whip\",\"burn\",\"stove\",\"trouble\",\"scene\",\"library\",\"crown\",\"fork\",\"birth\",\"cast\",\"amusement\",\"mice\",\"cub\",\"houses\",\"loaf\",\"card\",\"rhythm\",\"downtown\",\"animal\",\"chairs\",\"respect\",\"cactus\",\"opinion\",\"thread\",\"aunt\",\"treatment\",\"shame\",\"tank\",\"spiders\",\"marble\",\"arm\",\"cemetery\",\"locket\",\"fact\",\"division\",\"holiday\",\"current\",\"humor\",\"thunder\",\"crack\",\"receipt\",\"sense\",\"moon\",\"kittens\",\"K\",\"vegetable\",\"smile\",\"cushion\",\"representative\",\"toy\",\"look\",\"crowd\",\"hands\",\"idea\",\"drug\",\"lace\",\"jeans\",\"net\",\"moon\",\"scarecrow\",\"learning\",\"dog\",\"debt\",\"knife\",\"hill\",\"sail\",\"pear\",\"organization\",\"meal\",\"knee\",\"disgust\",\"pet\",\"bag\",\"road\",\"garden\",\"smash\",\"money\",\"wealth\",\"crate\",\"end\",\"insect\",\"muscle\",\"exchange\",\"town\",\"stage\",\"pump\",\"size\",\"cat\",\"tray\",\"fog\",\"wall\",\"stage\",\"beetle\",\"start\",\"self\",\"side\",\"group\",\"porter\",\"theory\",\"bait\",\"afternoon\",\"leg\",\"wing\",\"earth\",\"breakfast\",\"account\",\"snails\",\"back\",\"dime\",\"bee\",\"cast\",\"town\",\"cent\",\"chicken\",\"stem\",\"garden\",\"slave\",\"meeting\",\"umbrella\",\"argument\",\"clouds\",\"partner\",\"ray\",\"stranger\",\"body\",\"trouble\",\"son\",\"produce\",\"scene\",\"mouth\",\"observation\",\"monkey\",\"friction\",\"desk\",\"hose\",\"powder\",\"pull\",\"sisters\",\"cobweb\",\"smell\",\"anger\",\"haircut\",\"wood\",\"lace\",\"garden\",\"slip\",\"liquid\",\"boat\",\"fly\",\"roof\",\"reason\",\"drawer\",\"tank\",\"farmer\",\"sink\",\"loaf\",\"nail\",\"head\",\"payment\",\"friction\",\"cause\",\"point\",\"shock\",\"breakfast\",\"spot\",\"rain\",\"aftermath\",\"discovery\",\"hen\",\"boys\",\"finger\",\"baseball\",\"body\",\"airplane\",\"wax\",\"rain\",\"hand\",\"behavior\",\"cannon\",\"brick\",\"guitar\",\"store\",\"trade\",\"invention\",\"bread\",\"shame\",\"guitar\",\"wood\",\"time\",\"room\",\"base\",\"arithmetic\",\"sand\",\"design\",\"rainstorm\",\"railway\",\"boot\",\"coal\",\"flesh\",\"airport\",\"string\",\"wing\",\"jail\",\"brother\",\"match\",\"quarter\",\"guide\",\"knowledge\",\"lead\",\"love\",\"popcorn\",\"answer\",\"amount\",\"representative\",\"list\",\"smash\",\"sun\",\"weight\",\"disease\",\"gold\",\"flag\",\"porter\",\"reading\",\"way\",\"stretch\",\"lettuce\",\"can\",\"fifth\",\"sweater\",\"chair\",\"face\",\"pain\",\"toothbrush\",\"land\",\"sort\",\"beggar\",\"morning\",\"tramp\",\"steel\",\"sack\",\"boot\",\"wool\",\"meeting\",\"summer\",\"skirt\",\"attraction\",\"chalk\",\"polish\",\"town\",\"meeting\",\"partner\",\"man\",\"cork\",\"lead\",\"girls\",\"request\",\"wind\",\"cracker\",\"poison\",\"north\",\"railway\",\"honey\",\"request\",\"riddle\",\"children\",\"rice\",\"limit\",\"sugar\",\"cover\",\"government\",\"car\",\"cows\",\"beast\",\"ray\",\"thing\",\"note\",\"writer\",\"breakfast\",\"songs\",\"income\",\"crowd\",\"fork\",\"scarf\",\"apples\",\"dinosaurs\",\"wire\",\"string\",\"zinc\",\"water\",\"needle\",\"number\",\"behavior\",\"friend\",\"bear\",\"umbrella\",\"fold\",\"wave\",\"sofa\",\"haircut\",\"tank\",\"window\",\"tongue\",\"apple\",\"muscle\",\"summer\",\"cakes\",\"trail\",\"laugh\",\"meal\",\"fish\",\"map\",\"egg\",\"watch\",\"story\",\"crayon\",\"nest\",\"dogs\",\"spark\",\"dog\",\"team\",\"rose\",\"clam\",\"beetle\",\"skin\",\"flame\",\"design\",\"voyage\",\"oatmeal\",\"lunchroom\",\"school\",\"engine\",\"room\",\"salt\",\"decision\",\"church\",\"snakes\",\"cable\",\"queen\",\"substance\",\"comb\",\"babies\",\"lead\",\"card\",\"pleasure\",\"creator\",\"wrench\",\"vessel\",\"unit\",\"cabbage\",\"afternoon\",\"linen\",\"songs\",\"ground\",\"monkey\",\"self\",\"beef\",\"crime\",\"thumb\",\"wilderness\",\"bread\",\"meeting\",\"lake\",\"faucet\",\"coast\",\"verse\",\"shelf\",\"cart\",\"men\",\"punishment\",\"debt\",\"arch\",\"lead\",\"cats\",\"servant\",\"burn\",\"scarecrow\",\"side\",\"butter\",\"comfort\",\"rate\",\"night\",\"offer\",\"fly\",\"battle\",\"wish\",\"respect\",\"trade\",\"sticks\",\"arithmetic\",\"anger\",\"relation\",\"van\",\"writer\",\"leg\",\"slip\",\"house\",\"appliance\",\"ray\",\"day\",\"lawyer\",\"camp\",\"hat\",\"station\",\"airplane\",\"color\",\"argument\",\"family\",\"thunder\",\"coast\",\"fairies\",\"street\",\"verse\",\"ants\",\"jeans\",\"jar\",\"bead\",\"development\",\"pancake\",\"clock\",\"honey\",\"hammer\",\"snakes\",\"run\",\"title\",\"sweater\",\"snail\",\"hose\",\"throat\",\"cushion\",\"list\",\"act\",\"wine\",\"pencil\",\"size\",\"wine\",\"shoe\",\"writing\",\"trains\",\"boot\",\"reaction\",\"father\",\"time\",\"office\",\"skate\",\"van\",\"maid\",\"bun\",\"queen\",\"distance\",\"fire\",\"pot\",\"smell\",\"interest\",\"summer\",\"morning\",\"kiss\",\"scarf\",\"point\",\"birthday\",\"idea\",\"babies\",\"copy\",\"blow\",\"space\",\"need\",\"produce\",\"pull\",\"bit\",\"control\",\"spy\",\"jewel\",\"statement\",\"horse\",\"change\",\"ice\",\"rail\",\"things\",\"force\",\"zinc\",\"yard\",\"title\",\"cook\",\"apparel\",\"lock\",\"representative\",\"copper\",\"stomach\",\"woman\",\"uncle\",\"test\",\"crowd\",\"opinion\",\"turn\",\"maid\",\"banana\",\"action\",\"beast\",\"mouth\",\"bucket\",\"lizards\",\"circle\",\"ear\",\"arithmetic\",\"frog\",\"foot\",\"growth\",\"legs\",\"belief\",\"mist\",\"pollution\",\"lock\",\"earth\",\"hair\",\"fruit\",\"rock\",\"rule\",\"quartz\",\"country\",\"lawyer\",\"division\",\"believe\",\"queen\",\"protest\",\"smell\",\"memory\",\"girl\",\"belief\",\"finger\",\"stranger\",\"trucks\",\"kick\",\"goat\",\"measure\",\"coach\",\"comb\",\"smell\",\"science\",\"word\",\"icicle\",\"beetle\",\"territory\",\"need\",\"nerve\",\"brain\",\"car\",\"chalk\",\"bike\",\"territory\",\"ink\",\"flavor\",\"sense\",\"adjustment\",\"number\",\"brother\",\"cloud\",\"wave\",\"class\",\"drop\",\"boys\",\"zipper\",\"whistle\",\"sweater\",\"hole\",\"party\",\"vest\",\"parcel\",\"punishment\",\"thought\",\"use\",\"finger\",\"cake\",\"slope\",\"ink\",\"K\",\"school\",\"bears\",\"trail\",\"flower\",\"bait\",\"lead\",\"girls\",\"shake\",\"sneeze\",\"quartz\",\"cream\",\"iron\",\"test\",\"territory\",\"substance\",\"boundary\",\"seashore\",\"jail\",\"run\",\"way\",\"engine\",\"goat\",\"company\",\"wing\",\"toothbrush\",\"whip\",\"cent\",\"rod\",\"lawyer\",\"stomach\",\"expert\",\"waste\",\"smoke\",\"soup\",\"shame\",\"band\",\"mailbox\",\"touch\",\"pollution\",\"twig\",\"blade\",\"brass\",\"governor\",\"uncle\",\"steam\",\"art\",\"sign\",\"door\",\"camp\",\"foot\",\"view\",\"list\",\"pan\",\"territory\",\"morning\",\"love\",\"wax\",\"mother\",\"cat\",\"circle\",\"chin\",\"hour\"];\r\n\r\nconst registry = new WeakMap();\r\nconst enums = {_numeric: 1, _string: 2, _boolean: 3, _multiple: 4, _date: 5}\r\n\r\nfunction setRegistryProperty(parent, key, value) {\r\n    var data = getRegistryProperty(parent);\r\n    data[key] = value;\r\n    registry.set(parent, data);\r\n}\r\n\r\nfunction getRegistryProperty(parent, key = null) {\r\n    return key ? registry.get(parent)[key] : registry.get(parent);\r\n}\r\n\r\nclass Vector extends Array {\r\n    constructor() {\r\n        super();\r\n        if([...arguments].length > 0) this.push(...arguments);\r\n        registry.set(this, {});\r\n    }\r\n    push(){\r\n        for(let i of [...arguments].flat(Infinity - 1)){\r\n            if(this.parse) super.push(this.parse(i));\r\n            else super.push(i);\r\n        }\r\n    }\r\n    /**\r\n     * Gets or sets the name of this vector. If the argument 'value' is empty, it returns the name of this vector (if set before). Otherwise the name of the vector is set and the vector itself is returned.\r\n     * @param {Vector | string} value Optional: name of the vector.\r\n     * @returns Either name or the vector itself.\r\n     */\r\n    name(value){\r\n        if(value) {\r\n            setRegistryProperty(this, \"name\", value);\r\n            return this;\r\n        } else return registry.get(this).name\r\n    }\r\n    /**\r\n     * \r\n     * @returns {this} This vector filtered from the null values.\r\n     */\r\n    removeEmpty() {\r\n        return new this.constructor(...this).name(this.name());\r\n    }\r\n    parent(value){\r\n        if(value) {\r\n            setRegistryProperty(this, \"parent\", value)\r\n            return this;\r\n        } else return registry.get(this).parent\r\n    }\r\n    /* Returns an object with this vector's values and attributes. */\r\n    serialize() {\r\n        var obj = {\r\n            values: this,\r\n            name: this.name(),\r\n            type: this.type()\r\n        };\r\n        return obj;\r\n    }\r\n    clone(flush = false) {\r\n        var _ = (flush ? new this.constructor() : new this.constructor(...this).name(this.name()));\r\n        _.name(this.name());\r\n        return _;\r\n    }\r\n    /**\r\n     * Removes the values from this vector.\r\n     */\r\n    flush() {\r\n        while (this.length > 0) {\r\n            this.pop();\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n    * Instead of values, this method extracts indexes of values matching the filter (see @param) and return an array of indexes. \r\n    * @param {function} filter A function or a strong type filter type (string). Strong type filters: notempty, empty.\r\n    * @return {Array<integer>} Returns an array of indexes of values matching the given filter.\r\n    */\r\n    ifilter(filter = () => true) {\r\n\r\n        return new Array(...this).map(function(v, i){\r\n            if(filter(v)) return i;\r\n            else return -1;\r\n        }).filter(x => x > -1 );\r\n    }\r\n    \r\n    filterByIndex(...indexes) {\r\n        return new this.constructor(...this).filter((e,i) => indexes.indexOf(i) > -1).name(this.name());\r\n    }\r\n    /**\r\n     * Coverts the array into a text where values are delimited by line break. This makes it easy to copy and paste the values to Excel etc.\r\n     * @param {boolean} includeHeader True to have the vector name (or empty) as the first value. Default false.\r\n     */\r\n    toColumn(includeHeader = false) {\r\n        var c = includeHeader ? this.name() || \"<header>\" : \"\";\r\n        this.forEach(v => c += \"\\n\" + v);\r\n        return c;\r\n    }\r\n    /**\r\n     * \r\n     * @param {string} data \r\n     * @returns \r\n     */\r\n    static fromColumn(data, config = {delimiter: \"\\n\"}) {\r\n        var delimiter = new RegExp(`\\\\${config.delimiter || \"\\n\"}`,\"g\") \r\n        var _ = data.split(delimiter);\r\n        if(config.includeHeader) {\r\n            var name = _[0];\r\n            _ = _.slice(1, _.length);\r\n        }\r\n        return name ? new this(_).name(name) : new this(_);\r\n\r\n    }\r\n    static deserialize(data) {\r\n        if(typeof data != \"object\") {\r\n            try {\r\n                data = JSON.parse(data);\r\n            } catch(e) {\r\n                console.error(\"Failed to parse the vector data.\")\r\n                return null;\r\n            }\r\n        }\r\n        if([1,2,3].indexOf(data.type) < 0) throw new Error(\"Unknown vector type: \" + data.type);\r\n        else {\r\n            var vector = (data.type == 1 ? new NumericVector(...data.values) : data.type == 2 ? new StringVector(...data.values) : new BooleanVector(...data.values)).name(data.name);\r\n        }\r\n        return vector;\r\n    }\r\n    sample(size = 0) {\r\n        var clone = this.clone(true);\r\n        if(size <= 0) return clone;\r\n        else if(size < 1) size = this.length * size;\r\n        if(size > this.length) return clone;\r\n        else {\r\n            var indexes = Math.getRandomIndexes(this.length, size);\r\n            clone.push(...this.filter((v,i) => indexes.indexOf(i) > - 1));\r\n            return clone;\r\n        }\r\n    }\r\n    /**\r\n     * Returns a model of the specified method with this vector set as its parent.\r\n     * @param {string} name Name of the vector method.\r\n     * @returns {NumericVector | StringVector | BooleanVector}\r\n     */\r\n    model(name) {\r\n        return new VectorMethod(VectorMethodsModels.find(m => m.name == name), this);\r\n    }\r\n    analyze(name) {\r\n        return new VectorAnalysis(name, this);\r\n    }\r\n}\r\n\r\n/**\r\n* Whenever you need to make sure an instance is a vector or any of its extended children, call this property.\r\n*/\r\nVector.prototype.isVector = true;\r\n\r\nconst vectorParser = {\r\n    numeric: function(value) {\r\n        if(typeof value == \"string\") value = value.replace(/\\,/g, \".\").trim();\r\n        if(value === 0 || value === \"0\" || value === false) return 0;\r\n        else if(!value) return null;\r\n        else if(!isNaN(value)) return Number(value);\r\n        else throw new VectorValueError($(\"UyOj\", {value}), {vector: this, value: value});\r\n    },\r\n    string: function(value) {\r\n        if(value || value === false || value === 0) return String(value);\r\n        else return null;\r\n    },\r\n    boolean: function(value) {\r\n        if(value) return true;\r\n        else if(value === false || value === 0 || value === \"0\" || value === \"false\") return false;\r\n        else return null;\r\n    }\r\n}\r\n\r\n// #region VECTOR EXTENSIONS\r\n\r\nclass NumericVector extends Vector {\r\n    constructor(){\r\n        super(...arguments);\r\n    }\r\n    /**\r\n     * Returns the type of this vector, either as an enumeration (integer) or as a class name.\r\n     * @param {boolean} verbose If the argument is true, it returns the full class name of the vector (eg NominalVector). Otherwise, it returns an enumeration (eg 3).\r\n     * @returns {number | string} Returns the type of this vector.\r\n     */\r\n    type(verbose) {\r\n        if(verbose) return \"NumericVector\";\r\n        else return 1;\r\n    }\r\n    /**\r\n     * Generates a new numeric vector with 'total' randomly generated values ranging between 'min' and 'max' and with a 'nullprob' probability of null value occurrence.\r\n     * @param {object} config Eg. {min: -50, max: 200, total: 1000, nullprob: 0.1}\r\n     * @example var n = NumericVector.generate();\r\n     * @example var n = NumericVector.generate({total: 1000});\r\n     * @example var n = NumericVector.generate({total: 1000, min: 0});\r\n     * @example var n = NumericVector.generate({total: 1000, min: 0, max: 200});\r\n     * @example var n = NumericVector.generate({total: 100, min: 0, nullprob: 0.5});\r\n     * Returns a new instance of the vector with random values.\r\n     */\r\n    static generate(config = {}) {\r\n        config = validators.isObject.fn(config);\r\n        var min = isNaN(config.min) ? - Number.MAX_SAFE_INTEGER : Number(config.min) < - Number.MAX_SAFE_INTEGER ? - Number.MAX_SAFE_INTEGER : Number(config.min);\r\n        var max = isNaN(config.max) ? Number.MAX_SAFE_INTEGER : Number(config.max) > Number.MAX_SAFE_INTEGER ? Number.MAX_SAFE_INTEGER : Number(config.max);\r\n        var nullprob = Number(config.nullprob) > 0 ? Number(config.nullprob) > 1 ? 1 : Number(config.nullprob) : 0;\r\n        if(max < min){\r\n            var _min = config.min;\r\n            var _max = config.max\r\n            min = _max;\r\n            max = _min\r\n        };\r\n        var decimal = Number(config.decimal) > 0 ? Math.floor(config.decimal) : 0;\r\n        var total = Number(config.total) > 0 ? Number(config.total) : 100;\r\n        var _new = new NumericVector();\r\n        for(var i = 0; i < total; i++) {\r\n            if(nullprob > 0) {\r\n                if(Math.random() <= nullprob) {\r\n                    _new.push(null);\r\n                } else _new.push(Math.rndNumber(min,max,decimal));\r\n            } else _new.push(Math.rndNumber(min,max,decimal));\r\n        }\r\n        return _new;\r\n    };\r\n}\r\nNumericVector.prototype.parse = vectorParser.numeric;\r\n\r\nclass StringVector extends Vector {\r\n    constructor(){\r\n        super(...arguments);\r\n    }\r\n    /**\r\n     * Returns the type of this vector, either as an enumeration (integer) or as a class name.\r\n     * @param {boolean} verbose If the argument is true, it returns the full class name of the vector (eg NominalVector). Otherwise, it returns an enumeration (eg 3).\r\n     * @returns {number | string} Returns the type of this vector.\r\n     */\r\n    type(verbose) {\r\n        if(verbose) return \"StringVector\";\r\n        else return 2;\r\n    }\r\n    /**\r\n     * Generates a string vector with 'total' of random text values selected from the 'list' of values. The list argument can be either an array of values or an integer. If the latter is provided, N values are randomly selected from a built-in list of nouns (max 1000 otems).\r\n     * @param {object} config Eg. {total: 500, list: [\"A\",\"B\",\"C\"]} or {total: 500, list: 5}\r\n     * @example var strings = StringVector.generate({list: [\"A\",\"B\", \"C\"], total: 100000, nullprob: 0.5})\r\n     * @example var strings = StringVector.generate({list: 4, total: 100000, nullprob: 0.2})\r\n     * @example var strings = StringVector.generate({list: 5, nullprob: 0.175})\r\n     * @example var strings = StringVector.generate({list: 5})\r\n     * Returns a new instance of the vector with random values.\r\n     */\r\n    static generate(config = {}) {\r\n        let list;\r\n        var total = Number(config.total) > 0 ? Number(config.total) : 100;\r\n        var nullprob = Number(config.nullprob) > 0 ? Number(config.nullprob) > 1 ? 1 : Number(config.nullprob) : 0;\r\n        if(!isNaN(config.list)) {\r\n            list = Math.rndSelect(rndWordList, Number(config.list), false);\r\n        } else list = config.list;\r\n        var _new = new StringVector();\r\n        for(var i = 0; i < total; i++) {\r\n            if(nullprob > 0) {\r\n                if(Math.random() <= nullprob) {\r\n                    _new.push(null);\r\n                } else _new.push(Math.rndSelectOne(list))\r\n            } else _new.push(Math.rndSelectOne(list))\r\n        }\r\n        return _new;\r\n    };\r\n}\r\nStringVector.prototype.parse = vectorParser.string;\r\n\r\nclass BooleanVector extends Vector {\r\n    constructor(){\r\n        super(...arguments);\r\n    }\r\n    /**\r\n     * Returns the type of this vector, either as an enumeration (integer) or as a class name.\r\n     * @param {boolean} verbose If the argument is true, it returns the full class name of the vector (eg NominalVector). Otherwise, it returns an enumeration (eg 3).\r\n     * @returns {number | string} Returns the type of this vector.\r\n     */\r\n    type(verbose) {\r\n        if(verbose) return \"BooleanVector\";\r\n        else return 3;\r\n    }\r\n    /**\r\n     * Generates a boolean vector with 'total' of random boolean (true/false) values.\r\n     * @param {object} config Eg. {total: 500} or {total: 500, nullprob: 0.25}\r\n     * @example var b = BooleanVector.generate({total: 10000, nullprob: 0.5});\r\n     * @example var b = BooleanVector.generate({total: 10000});\r\n     * @example var b = BooleanVector.generate({});\r\n     * @example var b = BooleanVector.generate();\r\n     * Returns a new instance of the vector with random values.\r\n     */\r\n    static generate(config = {}) {\r\n        let list = [true, false];\r\n        var total = Number(config.total) > 0 ? Number(config.total) : 100;\r\n        var nullprob = Number(config.nullprob) > 0 ? Number(config.nullprob) > 1 ? 1 : Number(config.nullprob) : 0;\r\n        var _new = new BooleanVector();\r\n        for(var i = 0; i < total; i++) {\r\n            if(nullprob > 0) {\r\n                if(Math.random() <= nullprob) {\r\n                    _new.push(null);\r\n                } else _new.push(Math.rndSelectOne(list))\r\n            } else _new.push(Math.rndSelectOne(list))\r\n        }\r\n        return _new;\r\n    };\r\n}\r\n\r\nBooleanVector.prototype.parse = vectorParser.boolean;\r\n\r\nArray.prototype.numerify = function(){\r\n    return new NumericVector(...this);\r\n}\r\n\r\nArray.prototype.stringify = function(){\r\n    return new StringVector(...this);\r\n}\r\n\r\nArray.prototype.boolify = function(){\r\n    return new BooleanVector(...this);\r\n}\r\n\r\nArray.prototype.vectorify = function() {\r\n    if(this.find(v => v !== true && v !==false && v !== null))\r\n    {\r\n        try {\r\n            return new NumericVector(...this)\r\n        } catch (e) {\r\n            return new StringVector(...this);\r\n        }\r\n    } else return new BooleanVector(...this);\r\n}\r\n\r\n// #endregion\r\n\r\nlet VectorMethodsModels = [\r\n    {   name: \"sum\",\r\n        fn: Array.prototype.sum,\r\n        filter: filters.number,\r\n        wiki: {\r\n            title: \"gvdg\",\r\n            description: \"iMbD\"\r\n        },\r\n        type: [1],\r\n        returns: \"number\",\r\n        example: function(){\r\n            var cashflow = new NumericVector(200,250,150,320,240,-250,10,-320).sum();  /* = 600 */\r\n        },\r\n        url: \"https://en.wikipedia.org/wiki/Addition\"\r\n    },    \r\n    {   name: \"count\",\r\n        fn: Array.prototype.count,\r\n        wiki: {\r\n            title: \"tdrm\",\r\n            description: \"ULJX\"\r\n        },\r\n        type: [1,2,3],\r\n        returns: \"uint\",\r\n        example: function(){\r\n            var total_numeric = new NumericVector(200,250,null,150,320,240,-250,null,10,-320).count();  /* = 10 */\r\n            var total_string = new StringVector(\"A\",\"B\",\"C\",\"D\").count();  /* = 4 */\r\n            var total_boolean = new BooleanVector(true, true, false, null, false, true).count();  /* = 6 */\r\n        }\r\n    },\r\n    {   name: \"avg\",\r\n        fn: Array.prototype.avg,\r\n        filter: filters.number,\r\n        wiki: {\r\n            title: \"eFdj\",\r\n            description: \"UYJN\"\r\n        },\r\n        type: [1],\r\n        returns: \"number\",\r\n        example: function(){\r\n            var avgCashFlow = new NumericVector(200,250,150,320,240,-250,10,-320).avg();  /* = 75 */\r\n        },\r\n        url: \"https://en.wikipedia.org/wiki/Arithmetic_mean\"\r\n    },\r\n    {   name: \"stdev\",\r\n        fn: Array.prototype.stdev,\r\n        filter: filters.number,\r\n        wiki: {\r\n            title: \"oUcc\",\r\n            description: \"ZgSc\"\r\n        },\r\n        type: [1],\r\n        returns: \"number\",\r\n        example: function(){\r\n            var population = new NumericVector(10,20,15,25,23,19,18,17,24,23).stdev();  /* = 4.41 */\r\n            var sample = new NumericVector(10,20,15,25,23,19,18,17,24,23).stdev(true); /* = 4.65 */ \r\n        },\r\n        args: {\r\n            s: {\r\n                wiki: {\r\n                    title: \"eJTq\",\r\n                    description: \"FfpU\"\r\n                },\r\n                required: false,\r\n                schema: \"boolean\",\r\n                default: false,\r\n                type: \"boolean\",\r\n                validator: validators.boolean\r\n                }\r\n            },\r\n        url: \"https://en.wikipedia.org/wiki/Standard_deviation\"\r\n    },\r\n    {   name: \"variance\",\r\n        fn: Array.prototype.variance,\r\n        filter: filters.number,\r\n        wiki: {\r\n            title: \"TvQv\",\r\n            description: \"sfCh\"\r\n        },\r\n        type: [1],\r\n        returns: \"number\",\r\n        example: function(){\r\n            var population = new NumericVector(10,20,15,25,23,19,18,17,24,23).variance();  /* = 19.44 */\r\n            var sample = new NumericVector(10,20,15,25,23,19,18,17,24,23).variance(true); /* = 21.6 */ \r\n        },\r\n        args: {\r\n            s: {\r\n                wiki: {\r\n                    title: \"eJTq\",\r\n                    description: \"FfpU\"\r\n                },\r\n                required: false,\r\n                default: false,\r\n                schema: \"boolean\",\r\n                type: \"boolean\",\r\n                validator: validators.boolean\r\n            }\r\n        },\r\n        url: \"https://en.wikipedia.org/wiki/Variance\"\r\n    },\r\n    {   name: \"histogram\",\r\n        fn: Array.prototype.histogram,\r\n        filter: filters.number,\r\n        wiki: {\r\n            title: \"PAwR\",\r\n            description: \"AISp\"\r\n        },\r\n        type: [1],\r\n        returns: \"histogram\",\r\n        example: function(){\r\n            var score = new NumericVector(4.5,3.9,5,6,7,5.7,9.1,5.3,7.2,6.9,6,7.5,5.3,7.1,8.2,1);\r\n            var h1 = score.histogram();\r\n            /*\r\n            ┌─────────┬───────────────────┬───────────────────┬─────────────────┬───┬────┬────────┬────────┐\r\n            │ (index) │       from        │        to         │        i        │ n │ nc │   p    │   pc   │\r\n            ├─────────┼───────────────────┼───────────────────┼─────────────────┼───┼────┼────────┼────────┤\r\n            │    0    │         1         │       3.025       │  '1.00 - 3.00'  │ 1 │ 1  │ 0.0625 │ 0.0625 │\r\n            │    1    │       3.025       │       5.05        │  '4.00 - 5.00'  │ 3 │ 4  │ 0.1875 │  0.25  │\r\n            │    2    │       5.05        │ 7.074999999999999 │  '6.00 - 7.00'  │ 7 │ 11 │ 0.4375 │ 0.6875 │\r\n            │    3    │ 7.074999999999999 │        9.1        │  '8.00 - 9.00'  │ 5 │ 16 │ 0.3125 │   1    │\r\n            │    4    │        9.1        │      11.125       │ '10.00 - 11.00' │ 1 │ 17 │ 0.0625 │ 1.0625 │\r\n            └─────────┴───────────────────┴───────────────────┴─────────────────┴───┴────┴────────┴────────┘\r\n            */\r\n            var h2 = score.histogram(4)\r\n            /* \r\n            ┌─────────┬───────────────────┬───────────────────┬─────────────────┬───┬────┬────────┬────────┐\r\n            │ (index) │       from        │        to         │        i        │ n │ nc │   p    │   pc   │\r\n            ├─────────┼───────────────────┼───────────────────┼─────────────────┼───┼────┼────────┼────────┤\r\n            │    0    │         1         │       3.025       │  '1.00 - 3.00'  │ 1 │ 1  │ 0.0625 │ 0.0625 │\r\n            │    1    │       3.025       │       5.05        │  '4.00 - 5.00'  │ 3 │ 4  │ 0.1875 │  0.25  │\r\n            │    2    │       5.05        │ 7.074999999999999 │  '6.00 - 7.00'  │ 7 │ 11 │ 0.4375 │ 0.6875 │\r\n            │    3    │ 7.074999999999999 │        9.1        │  '8.00 - 9.00'  │ 5 │ 16 │ 0.3125 │   1    │\r\n            └─────────┴───────────────────┴───────────────────┴─────────────────┴───┴────┴────────┴────────┘\r\n            */\r\n            var h3 = score.histogram(null, 2)\r\n            /* \r\n            ┌─────────┬──────┬────┬────────────────┬───┬────┬────────┬────────┐\r\n            │ (index) │ from │ to │       i        │ n │ nc │   p    │   pc   │\r\n            ├─────────┼──────┼────┼────────────────┼───┼────┼────────┼────────┤\r\n            │    0    │  1   │ 3  │ '1.00 - 3.00'  │ 1 │ 1  │ 0.0625 │ 0.0625 │\r\n            │    1    │  3   │ 5  │ '3.00 - 5.00'  │ 3 │ 4  │ 0.1875 │  0.25  │\r\n            │    2    │  5   │ 7  │ '5.00 - 7.00'  │ 7 │ 11 │ 0.4375 │ 0.6875 │\r\n            │    3    │  7   │ 9  │ '7.00 - 9.00'  │ 4 │ 15 │  0.25  │ 0.9375 │\r\n            │    4    │  9   │ 11 │ '9.00 - 11.00' │ 1 │ 16 │ 0.0625 │   1    │\r\n            └─────────┴──────┴────┴────────────────┴───┴────┴────────┴────────┘\r\n            */\r\n\r\n        },\r\n        args: {\r\n            maxIntervals: {\r\n                wiki: {\r\n                    title: \"WnZK\",\r\n                    description: \"FfpU\"\r\n                },\r\n                required: false,\r\n                default: null,\r\n                schema: \"number\",\r\n                type: \"number\",\r\n                validator: validators.positiveInteger,\r\n            },\r\n            fixedInterval: {\r\n                wiki: {\r\n                    title: \"Mnfn\",\r\n                    description: \"yOuB\"\r\n                },\r\n                required: false,\r\n                default: null,\r\n                schema: \"number\",\r\n                type: \"number\",\r\n                validator: validators.positiveDecimal,\r\n                }\r\n        },\r\n        url: \"https://en.wikipedia.org/wiki/Histogram\"\r\n    },\r\n    {   name: \"min\",\r\n        fn: Array.prototype.min,\r\n        filter: filters.notnull,\r\n        wiki: {\r\n            title: \"FkaD\",\r\n            description: \"yBlA\"\r\n        },\r\n        type: [1,2,3],\r\n        example: function(){\r\n            var numeric_min = new NumericVector(4.5, 3.9, 5, 6, 7, 5.7, 9.1, 5.3, 7.2, 6.9, 6, 7.5, 5.3, 7.1, 8.2, 1).min(); /* = 1 */;\r\n            var string_min = new StringVector(\"Norwood\", \"Pearson\", \"Fisher\", \"Nightingale\", \"Gauss\", \"Poisson\").min(); /* = Fisher */\r\n        },\r\n        returns: \"any\",\r\n    },\r\n    {   name: \"max\",\r\n        fn: Array.prototype.max,\r\n        filter: filters.notnull,\r\n        wiki: {\r\n            title: \"nKuF\",\r\n            description: \"gkep\"\r\n        },\r\n        type: [1,2,3],\r\n        returns: \"any\",\r\n        example: function(){\r\n            var numeric_max = new NumericVector(4.5, 3.9, 5, 6, 7, 5.7, 9.1, 5.3, 7.2, 6.9, 6, 7.5, 5.3, 7.1, 8.2, 1).max(); /* = 9.1 */;\r\n            var string_max = new StringVector(\"Norwood\", \"Pearson\", \"Fisher\", \"Nightingale\", \"Gauss\", \"Poisson\").max(); /* = Poisson */\r\n        }\r\n    },\r\n    {   name: \"range\",\r\n        fn: Array.prototype.range,\r\n        filter: filters.number,\r\n        wiki: {\r\n            title: \"mXxJ\",\r\n            description: \"dnzB\"\r\n        },\r\n        type: [1],\r\n        returns: \"number\",\r\n        example: function(){\r\n            var range = new NumericVector(5,2,-15,-16.3,12,null, null, 12,13,7).range(); /* = 22 */\r\n        },\r\n        url: \"https://en.wikipedia.org/wiki/Range_(statistics)\"\r\n    },\r\n    /* coefficient of variation */\r\n    {   name: \"varc\",\r\n        fn: Array.prototype.varc,\r\n        filter: filters.number,\r\n        wiki: {\r\n            title: \"uwpU\",\r\n            description: \"fUpj\"\r\n        },\r\n        type: [1],\r\n        returns: \"number\",\r\n        example: function(){\r\n            var population = new NumericVector(10,20,15,25,23,19,18,17,24,23).varc();  /* = 0.227 */\r\n            var sample = new NumericVector(10,20,15,25,23,19,18,17,24,23).varc(true); /* = 0.24 */ \r\n        },\r\n        args: {\r\n            s: {\r\n                wiki: {\r\n                    title: \"eJTq\",\r\n                    description: \"FfpU\"\r\n                },\r\n                required: false,\r\n                default: false,\r\n                schema: \"boolean\",\r\n                type: \"boolean\",\r\n                validator: validators.boolean\r\n            }\r\n        },\r\n        url: \"https://en.wikipedia.org/wiki/Coefficient_of_variation\"\r\n    },\r\n    {   name: \"percentile\",\r\n        fn: Array.prototype.percentile,\r\n        filter: filters.number,\r\n        wiki: {\r\n            title: \"fPra\",\r\n            description: \"yNbM\"\r\n        },\r\n        type: [1],\r\n        returns: \"number\",\r\n        example: function(){\r\n            var score = new NumericVector(10,20,15,25,23,19,18,17,24,23);\r\n            var median = score.percentile(0.5); /* = 19.5 */\r\n            var q25 = score.percentile(0.25); /* = 17.25 */\r\n            var max = score.percentile(1); /* = 25 */\r\n        },\r\n        args: {\r\n            k: {\r\n                wiki: {\r\n                    title: \"dBDt\",\r\n                    description: \"GQpQ\"\r\n                },\r\n                required: true,\r\n                schema: \"number\",\r\n                type: \"decimal\",\r\n                validator: validators.zeroToOneInc\r\n                }\r\n        },\r\n        url: \"https://en.wikipedia.org/wiki/Percentile\"\r\n\r\n    },\r\n    {   name: \"frequency\",\r\n        fn: Array.prototype.frequency,\r\n        filter: null,\r\n        wiki: {\r\n            title: \"dYJK\",\r\n            description: \"Tzyp\"\r\n        },\r\n        type: [1,2,3],\r\n        returns: \"frequency\",\r\n        example: function(){\r\n            var numeric_vector_no_order = new NumericVector(5,2,3,2,3,3,1,6,3).frequency();\r\n            /*\r\n            ┌─────────┬───────┬───────────┐\r\n            │ (index) │ value │ frequency │\r\n            ├─────────┼───────┼───────────┤\r\n            │    0    │   1   │     1     │\r\n            │    1    │   2   │     2     │\r\n            │    2    │   3   │     4     │\r\n            │    3    │   5   │     1     │\r\n            │    4    │   6   │     1     │\r\n            └─────────┴───────┴───────────┘ \r\n            */\r\n            var string_vector_desc_value = new StringVector(\"E\",\"B\",\"C\",\"B\",\"C\",\"C\",\"A\",\"F\",\"C\").frequency(3);\r\n            /* \r\n            ┌─────────┬───────┬───────────┐\r\n            │ (index) │ value │ frequency │\r\n            ├─────────┼───────┼───────────┤\r\n            │    0    │  'F'  │     1     │\r\n            │    1    │  'A'  │     1     │\r\n            │    2    │  'C'  │     4     │\r\n            │    3    │  'B'  │     2     │\r\n            │    4    │  'E'  │     1     │\r\n            └─────────┴───────┴───────────┘\r\n            */\r\n            var boolean_vector_desc_frequency = new BooleanVector(true, false, null, true, null, null).frequency(4);\r\n            /* \r\n            ┌─────────┬─────────┬───────────┐\r\n            │ (index) │  value  │ frequency │\r\n            ├─────────┼─────────┼───────────┤\r\n            │    0    │  null   │     3     │\r\n            │    1    │ 'true'  │     2     │\r\n            │    2    │ 'false' │     1     │\r\n            └─────────┴─────────┴───────────┘\r\n            */\r\n        },\r\n        args: {\r\n            order: {\r\n                wiki: {\r\n                    title: \"gZCx\"\r\n                },\r\n                required: false,\r\n                schema: \"integer\",\r\n                default: 1,\r\n                type: \"enum\",\r\n                validator: validators.enumValidator(enumerators.frequencyOrder),\r\n                enums: enumerators.frequencyOrder\r\n            }\r\n        },\r\n        url: \"https://en.wikipedia.org/wiki/Frequency_(statistics)\"\r\n    },\r\n    {   name: \"geomean\",\r\n        fn: Array.prototype.geomean,\r\n        filter: filters.number,\r\n        wiki: {\r\n            title: \"louK\",\r\n            description: \"PDzr\"\r\n        },\r\n        type: [1],\r\n        returns: \"number\",\r\n        example: function(){\r\n            var x = new framework.NumericVector(20,19,21,22,21,18,23,22,27,16,17,19,19,21,29,24,23,25,24,21,22,19).geomean(); /* = 21.24*/\r\n        },\r\n        url: \"https://en.wikipedia.org/wiki/Geometric_mean\"\r\n    },\r\n    {   name: \"harmean\",\r\n        fn: Array.prototype.harmean,\r\n        filter: filters.number,\r\n        wiki: {\r\n            title: \"vpdN\",\r\n            description: \"nhJv\"\r\n        },\r\n        type: [1],\r\n        returns: \"number\",\r\n        example: function(){\r\n            var x = new NumericVector(20,19,21,22,21,18,23,22,27,16,17,19,19,21,29,24,23,25,24,21,22,19).harmean(); /* = 21.03*/\r\n        },\r\n        url: \"https://en.wikipedia.org/wiki/Harmonic_mean\"\r\n    },\r\n    {   name: \"median\",\r\n        fn: Array.prototype.median,\r\n        filter: filters.number,\r\n        wiki: {\r\n            title: \"TzfX\",\r\n            description: \"YIir\"\r\n        },\r\n        type: [1],\r\n        returns: \"number\",\r\n        example: function(){\r\n            var median = new NumericVector(20,19,21,22,21,18,23,22,27,16,17,19,19,21,29,24,23,25,24,21,22,19).median(); /* = 21*/\r\n        },\r\n        url: \"https://en.wikipedia.org/wiki/Median\"\r\n    },\r\n    {   name: \"mode\",\r\n        fn: Array.prototype.mode,\r\n        wiki: {\r\n            title: \"StQx\",\r\n            description: \"IBfx\"\r\n        },\r\n        type: [1,2,3],\r\n        returns: \"any\",\r\n        example: function(){\r\n            var x = new NumericVector(1,2,3,4,3,4,5,3).mode(); /* = 3 */\r\n            var y = new StringVector(\"a\",null,null,\"b\",\"c\",\"d\",null,\"b\").mode(); /* = null */\r\n            var z = new BooleanVector(true, false, true).mode(); /* = true */\r\n        },\r\n        url: \"https://en.wikipedia.org/wiki/Mode_(statistics)\"\r\n\r\n    },\r\n    {   name: \"sem\",\r\n        fn: Array.prototype.SEM,\r\n        filter: filters.number,\r\n        wiki: {\r\n            title: \"dLmV\",\r\n            description: \"ZBnI\"\r\n        },\r\n        type: [1],\r\n        returns: \"number\",\r\n        example: function(){\r\n            var sem = new NumericVector(20,19,21,22,21,18,23,22,27,16,17,19,19,21,29,24,23,25,24,21,22,19).SEM(); /* = 0.67*/\r\n        },\r\n        url: \"https://en.wikipedia.org/wiki/Standard_error#Standard_error_of_the_sample_mean\"\r\n    },\r\n    {   name: \"skewness\",\r\n        fn: Array.prototype.skewness,\r\n        filter: filters.number,\r\n        wiki: {\r\n            title: \"KZgI\",\r\n            description: \"nJbe\",\r\n        },\r\n        type: [1],\r\n        returns: \"number\",\r\n        example: function(){\r\n            var skewness_population = new NumericVector(20,19,21,22,21,18,23,22,27,16,17,19,19,21,29,24,23,25,24,21,22,19).skewness(false); /* = 0.52*/\r\n            var skewness_sample = new NumericVector(20,19,21,22,21,18,23,22,27,16,17,19,19,21,29,24,23,25,24,21,22,19).skewness(true); /* = 0.027*/\r\n        },\r\n        args: {\r\n            s: {\r\n                wiki: {\r\n                    title: \"eJTq\",\r\n                    description: \"FfpU\"\r\n                },\r\n                schema: \"boolean\",\r\n                required: false,\r\n                default: false,\r\n                type: \"boolean\",\r\n                validator: validators.boolean\r\n                }\r\n            },\r\n            url: \"https://en.wikipedia.org/wiki/Skewness\"\r\n    },\r\n    {   name: \"kurtosis\",\r\n        fn: Array.prototype.kurtosis,\r\n        filter: filters.number,\r\n        wiki: {\r\n            title: \"oPPx\",\r\n            description: \"UOBG\"\r\n        },\r\n        type: [1],\r\n        returns: \"number\",\r\n        example: function(){\r\n            var kurtosis = new NumericVector(20,19,21,22,21,18,23,22,27,16,17,19,19,21,29,24,23,25,24,21,22,19).kurtosis(); /* = 0.425*/\r\n        },\r\n        url: \"https://en.wikipedia.org/wiki/Kurtosis\"\r\n    },\r\n    {   name: \"ttest\",\r\n        fn: Array.prototype.ttest,\r\n        filter: filters.number,\r\n        wiki: {\r\n            title: \"VEAt\",\r\n            description: \"rbjM\"\r\n        },\r\n        type: [1],\r\n        returns: \"ttest\",\r\n        example: function(){\r\n            var T = new NumericVector(4.5,3.9,5,6,7,5.7,9.1,5.3,7.2,6.9,6,7.5,5.3,7.1,8.2,1).ttest(10);\r\n            /*\r\n            {\r\n                \"t\": 2.0519223838763545,\r\n                \"p\": 0.05806,\r\n                \"n\": 16\r\n            }\r\n            */\r\n        },\r\n        args: {\r\n            populationMean: {\r\n                wiki: {\r\n                    title: \"GRoZ\",\r\n                    description: \"xtfz\"\r\n                },\r\n                schema: \"number\",\r\n                required: true,\r\n                type: \"number\",\r\n                validator: validators.isNumber\r\n                }\r\n            }\r\n    },\r\n    {   name: \"mci\",\r\n        fn: Array.prototype.mci,\r\n        filter: filters.number,\r\n        wiki: {\r\n            title: \"yHjW\",\r\n            description: \"DDpa\"\r\n        },\r\n        type: [1],\r\n        returns: \"mci\",\r\n        example: function(){\r\n            var v = new NumericVector([2,2,3,3,4,4,5,5,6,7,8,9,10,11,10,9,8,7,7,6,6,5,5]).mci(0.95);\r\n            /*\r\n            {\r\n                \"m\": 6.173913043478261,\r\n                \"sig\": 0.050000000000000044,\r\n                \"delta\": 1.1189603407528825,\r\n                \"lb\": 5.054952702725378,\r\n                \"ub\": 7.292873384231143\r\n            }\r\n            */\r\n        },\r\n        args: {\r\n            confidenceLevel: {\r\n                wiki: {\r\n                    title: \"lFlm\",\r\n                    description: \"SMbe\"\r\n                },\r\n                schema: \"number\",\r\n                required: false,\r\n                default: 0.95,\r\n                type: \"number\",\r\n                validator: validators.zeroToOneInc\r\n            }\r\n        },\r\n        url: \"https://en.wikipedia.org/wiki/Confidence_interval\"\r\n    },\r\n    {   name: \"pci\",\r\n        fn: Array.prototype.pci,\r\n        filter: filters.any,\r\n        wiki: {\r\n            title: \"ZhjW\",\r\n            description: \"KLpa\"\r\n        },\r\n        type: [1,2,3],\r\n        returns: \"pci\",\r\n        example: function(){\r\n            var v = new NumericVector([2,2,3,3,4,4,5,5,6,7,8,9,10,11,10,9,8,7,7,6,6,5,5]).pci(5, 0.95);\r\n            /*\r\n            {\r\n                \"p\": 0.17391304347826086,\r\n                \"sig\": 0.050000000000000044,\r\n                \"delta\": 0.1549041787089759,\r\n                \"lb\": 0.019008864769284955,\r\n                \"ub\": 0.32881722218723675\r\n            }\r\n            */\r\n        },\r\n        args: {\r\n            value: {\r\n                wiki: {\r\n                    title: \"obxp\",\r\n                    description: \"QOvf\"\r\n                },\r\n                schema: \"any\",\r\n                required: true,\r\n                default: null,\r\n                type: \"any\",\r\n                validator: validators.any\r\n            },\r\n            confidenceLevel: {\r\n                wiki: {\r\n                    title: \"lFlm\",\r\n                    description: \"SMbe\"\r\n                },\r\n                schema: \"number\",\r\n                required: false,\r\n                default: 0.95,\r\n                type: \"number\",\r\n                validator: validators.zeroToOneInc\r\n            }\r\n        },\r\n        url: \"https://en.wikipedia.org/wiki/Confidence_interval\"\r\n    },    \r\n    {   name: \"swtest\",\r\n        fn: Array.prototype.shapirowilk,\r\n        filter: filters.number,\r\n        wiki: {\r\n            title: \"byTa\",\r\n            description: \"LHkd\"\r\n        },\r\n        type: [1],\r\n        returns: \"shapirowilk\",\r\n        example: function(){\r\n            var sw = new NumericVector(2,2,3,3,4,4,5,5,6,7,8,9,10,11,10,9,8,7,7,6,6,5,5).swtest(); \r\n            /* \r\n            {\r\n                \"W\": 0.9664039647188553,\r\n                \"df\": 23,\r\n                \"p\": 0.6036566524076283\r\n            }\r\n            */\r\n        },\r\n        url: \"https://en.wikipedia.org/wiki/Shapiro%E2%80%93Wilk_test\"\r\n    },\r\n    {   name: \"kstest\",\r\n        fn: Array.prototype.kolmogorovSmirnovTest,\r\n        filter: filters.number,\r\n        wiki: {\r\n            title: \"DLoe\",\r\n            description: \"yQZd\"\r\n        },\r\n        type: [1],\r\n        returns: \"kstest\",\r\n        example: function(){\r\n            var sw = new NumericVector(2,2,3,3,4,4,5,5,6,7,8,9,10,11,10,9,8,7,7,6,6,5,5).kstest(); \r\n            /* \r\n            {\r\n                \"W\": 0.9664039647188553,\r\n                \"df\": 23,\r\n                \"p\": 0.6036566524076283\r\n            }\r\n            */\r\n        },\r\n        url: \"https://en.wikipedia.org/wiki/Kolmogorov%E2%80%93Smirnov_test#One-sample_Kolmogorov%E2%80%93Smirnov_statistic\"\r\n    },  \r\n].sort((a,b) => a.wiki?.title > b.wiki?.title ? 1 : -1)\r\n\r\nclass VectorAnalysis {\r\n    constructor(model, parent) {\r\n        if(parent) this.parent = parent?.isVector ? parent : null;\r\n        if(typeof model == \"string\") {            \r\n            if(!VectorMethodsModels.find(m => m.name == model)) throw new Error(\"Model not found: \" + model);\r\n            else this.model = VectorMethodsModels.find(m => m.name == model);\r\n        } else if(typeof model == \"object\") this.model = model;\r\n        else throw new Error(\"Unknown VectorMethod constructor parameter type.\");\r\n    }\r\n    /**\r\n     * Returns the name of the method.\r\n     */\r\n    get name() {return this.model.name};\r\n    /**\r\n     * Returns the calculation method.\r\n     */\r\n    get fn() {return this.model.fn};\r\n    /**\r\n     * Returns default filter function applied before the method is calculated.\r\n     */\r\n    get filter() {return this.model.filter ? this.model.filter.fn : () => true}\r\n    /**\r\n     * Applies the model filter to the parent and stores the sample data into the \"filterLog\" property object.\r\n     * @param {object} config Not imployed yet.\r\n     * @return {self}\r\n     */\r\n    get wiki() {\r\n        if(this.model.wiki) {\r\n            return {\r\n                title: $(this.model.wiki.title),\r\n                description: $(this.model.wiki.description),\r\n                filter: this.model.filter ? $(this.model.filter.text) : null,\r\n                url: this.model.url || null,\r\n                applies: [\r\n                    {type: 1, title: $(\"LOYN\"), apply: this.model.type.indexOf(1) > -1},\r\n                    {type: 2, title: $(\"zoiB\"), apply: this.model.type.indexOf(2) > -1},\r\n                    {type: 3, title: $(\"OkoC\"), apply: this.model.type.indexOf(3) > -1}\r\n                ],\r\n                returns: vectorResultSchemas[this.model.returns],\r\n                arguments: (function(args){\r\n                    var _ = [];\r\n                    if(!args) return [];\r\n                    else {\r\n                        for(let k of Object.keys(args)) {\r\n                            _.push({\r\n                                name: k,\r\n                                title: args[k].wiki?.title ? $(args[k].wiki.title) : null,\r\n                                validator: args[k].validator?.text ? $(args[k].validator?.text) : null,\r\n                                description: args[k]?.wiki?.description ? $(args[k].wiki.description) : null,\r\n                                schema: vectorResultSchemas[args[k].schema],\r\n                                required: !!args[k]?.required,\r\n                                default: args[k].default || null,\r\n                            })\r\n                        }\r\n                    }\r\n                    return _;\r\n                })(this.model.args)\r\n            }\r\n        } else return {};\r\n    }\r\n    /**\r\n     * Returns an inteface for input and output schemas.\r\n     */\r\n    get schema() {\r\n        return {\r\n            output: new OutputSchema(vectorResultSchemas[this.model.returns]),\r\n            form: new FormVectorSchema(this.model.args)\r\n        }\r\n    }\r\n    /**\r\n     * Applies the model filter to the parent, stores the result into the \"vector\" property and returns self. The Vector is the method ultimate input.\r\n     * @param {*} config No imployed yet.\r\n     * @returns {self}\r\n     */\r\n    prepare(config){\r\n        if(!this.parent) throw new Error(\"The method cannot be called without a parent specified\")\r\n        this.vector = this.filter ? this.parent.filter(this.filter) : this.parent;\r\n        return this;\r\n    }\r\n    /**\r\n     * Validates method arguments and returns self.\r\n     * @param {any} * The method arguments.\r\n     * @returns {self}\r\n     */\r\n    validate() {\r\n        if(!this.parent) return new Empty($(\"hKRq\"));\r\n        var i = 0;\r\n        var args = Array.prototype.slice.call(arguments);\r\n        var rebuilt = [];\r\n        if((this.model.args || []).length === 0) return args;\r\n        for(let k of Object.keys(this.model.args)) {\r\n            var _validator = this.model.args[k]?.validator?.fn || function(v){return v};\r\n            if((!args[i] && args[i] !== 0 && args[i] !== false))\r\n            {\r\n                if(this.model.args[k]?.required) throw new ArgumentError($(\"dSWt\", {name: k, title: $(this.model.args[k].wiki?.title), method: $(this.model.wiki?.title)}), this);\r\n                else rebuilt.push(this.model.args[k].default);\r\n            }\r\n            else {\r\n                try {\r\n                    rebuilt.push(_validator(args[i]));\r\n                } catch(e) {\r\n                    throw new ArgumentError(e, this)\r\n                }\r\n            }\r\n            i++;\r\n        }\r\n        this.args = rebuilt;\r\n        return this;\r\n    }\r\n    /**\r\n     * Call the calculation function and returns either the VectorAnalysis instance with the result property storing the result or the result itself (see params). If either input preparation or validation has not been called before, it is automatically called.\r\n     * @param {boolean} returnSelf If true, the VectorAnalysis is returned, with the result property storing the calculation result. Otherwise the result is returned. Default true.\r\n     * @returns {self | any}\r\n     */\r\n    run() {\r\n        if(!this.parent) return new Empty($(\"hKRq\"));\r\n        else if(this.model.type.indexOf(this.parent?.type()) === -1) return new Empty($(\"ibNu\", {method: $(this.model.wiki.title), type: $(getVectorTypeLabelCode(this.parent))}));\r\n        this.runStart = new Date();\r\n        if(!this.input) this.prepare({});\r\n        if([...arguments].length > 0) this.validate(...arguments);\r\n        this.result = this.fn.call(this.vector, ...(this.args || []));\r\n        this.runEnd = new Date();\r\n        return this;\r\n    }\r\n    /**\r\n     * \r\n     * @param {Vector} parent Specifies the vector on which the method should be applied.\r\n     * @returns {VectorMethod} Returns the original VectorMethod instance.\r\n     */\r\n    with(parent) {\r\n        this.parent = parent;\r\n        return this;\r\n    }\r\n    /**\r\n    * Returns duration of the \"run\" method (whatever it includes inside) in milliseconds.\r\n     */\r\n    duration() {\r\n        if(this.runStart && this.runEnd) return this.runEnd.getTime() - this.runStart.getTime();\r\n        else return null;\r\n    }\r\n}\r\n\r\nclass VectorMethod {\r\n    constructor(model, parent) {\r\n        if(parent) this.parent = parent;\r\n        if(typeof model == \"string\") {            \r\n            if(!VectorMethodsModels[model]) throw new Error(\"Model not found: \" + model);\r\n            else this.model = VectorMethodsModels[model];\r\n        } else if(typeof model == \"object\") this.model = model;\r\n        else throw new Error(\"Unknown VectorMethod constructor parameter type.\");\r\n    }\r\n    /**\r\n     * Returns the name of the method.\r\n     */\r\n    get name() {return this.model.name};\r\n    /**\r\n     * Returns the calculation method.\r\n     */\r\n    get fn() {return this.model.fn};\r\n    /**\r\n     * Returns default filter function applied before the method is calculated.\r\n     */\r\n    get filter() {return this.model.filter ? this.model.filter.fn : () => true}\r\n    /**\r\n     * Returns an object with method documentation.\r\n     */\r\n    get wiki() {\r\n        if(this.model.wiki) {\r\n            return {\r\n                name: this.model.name,\r\n                title: $(this.model.wiki.title),\r\n                description: $(this.model.wiki.description),\r\n                filter: this.model.filter ? $(this.model.filter.text) : null,\r\n                url: this.model.url || null,\r\n                applies: [\r\n                    {type: 1, title: $(\"LOYN\"), apply: this.model.type.indexOf(1) > -1},\r\n                    {type: 2, title: $(\"zoiB\"), apply: this.model.type.indexOf(2) > -1},\r\n                    {type: 3, title: $(\"OkoC\"), apply: this.model.type.indexOf(3) > -1}\r\n                ],\r\n                returns: vectorResultSchemas[this.model.returns],\r\n                example: this.model.example ? this.model.example.stringify() : null,\r\n                arguments: (function(args){\r\n                    var _ = [];\r\n                    if(!args) return [];\r\n                    else {\r\n                        for(let k of Object.keys(args)) {\r\n                            _.push({\r\n                                name: k,\r\n                                title: args[k].wiki?.title ? $(args[k].wiki.title) : null,\r\n                                validator: args[k].validator?.text ? $(args[k].validator?.text) : null,\r\n                                description: args[k]?.wiki?.description ? $(args[k].wiki.description) : null,\r\n                                schema: vectorResultSchemas[args[k].schema],\r\n                                required: !!args[k]?.required,\r\n                                default: args[k].default || null,\r\n                                \r\n                            })\r\n                        }\r\n                    }\r\n                    return _;\r\n                })(this.model.args)\r\n            }\r\n        } else return {};\r\n    }\r\n    /**\r\n     * Returns a router for input and output schema.\r\n     */\r\n    get schema() {\r\n        return {\r\n            input: null,\r\n            output: new OutputSchema(vectorResultSchemas[this.model.returns]),\r\n            form: new FormVectorSchema(this.model.args)\r\n        }\r\n    }\r\n    /* Generates a markdown documentation for the vector method */\r\n    markdown(level = 1) {\r\n        return VectorMarkdown(this.wiki, level);\r\n    }    \r\n    /**\r\n     * \r\n     * @returns {any} Returns the result of the main function.\r\n     */\r\n    call() {\r\n        if(!this.parent) return new Empty($(\"hKRq\"));\r\n        else if(this.model.type.indexOf(this.parent?.type()) === -1) return new Empty($(\"ibNu\", {method: $(this.model.wiki.title), type: $(getVectorTypeLabelCode(this.parent))}))\r\n        var args = this.validate(...arguments);\r\n        var vector = this.filter ? this.parent.filter(this.filter) : this.parent;\r\n        return this.fn.call(vector, ...args);\r\n    }\r\n    /**\r\n     * \r\n     * @param {Vector} parent Specifies the vector on which the method should be applied.\r\n     * @returns {VectorMethod} Returns the original VectorMethod instance.\r\n     */\r\n    with(parent) {\r\n        this.parent = parent;\r\n        return this;\r\n    }\r\n    /**\r\n     * Validates the method arguments.\r\n     * @returns {Array} Returns an array of validated arguments (or nothing if a validation error is thrown before).\r\n     */\r\n    validate() {\r\n        if(!this.parent) return new Empty($(\"hKRq\"));\r\n        var i = 0;\r\n        var args = Array.prototype.slice.call(arguments);\r\n        var rebuilt = [];\r\n        if((this.model.args || []).length === 0) return args;\r\n        for(let k of Object.keys(this.model.args)) {\r\n            var _validator = this.model.args[k]?.validator?.fn || function(v){return v};\r\n            if((!args[i] && args[i] !== 0 && args[i] !== false))\r\n            {\r\n                if(this.model.args[k]?.required) throw new ArgumentError($(\"dSWt\", {name: k, title: $(this.model.args[k].wiki?.title), method: $(this.model.wiki?.title)}), this);\r\n                else rebuilt.push(this.model.args[k].default);\r\n            }\r\n            else {\r\n                try {\r\n                    rebuilt.push(_validator(args[i]));\r\n                } catch(e) {\r\n                    throw new ArgumentError(e, this)\r\n                }\r\n            }\r\n            i++;\r\n        }\r\n        return rebuilt;\r\n    }\r\n}\r\n\r\nVectorMethodsModels.forEach(function(m) {\r\n    Vector.prototype[m.name] = function() {\r\n        var M = new VectorMethod(m, this);\r\n        return M.call(...arguments);\r\n    };\r\n});\r\n\r\nfunction getVectorTypeLabelCode(vector) {\r\n    switch (vector.type()) {\r\n        case 1:\r\n            return \"kPSW\";\r\n            break;\r\n        case 2:\r\n            return \"UQoV\";\r\n            break;\r\n        case 3:\r\n            return \"WiEE\";\r\n            break;\r\n        case 4:\r\n            return \"LiPr\";\r\n            break;\r\n        case 5:\r\n            return \"sbFB\";\r\n            break;\r\n        default:\r\n            return null;\r\n    }\r\n}\r\n\r\nconst Models = {}\r\nfunction mapModels() {\r\n    VectorMethodsModels.map(function(m){Models[m.name] = new VectorMethod(m)});\r\n}\r\nmapModels();\r\n\r\n\r\nfunction register(model) {\r\n    VectorMethodsModels.push(model);\r\n    Vector.prototype[model.name] = function() {\r\n        var M = new VectorMethod(model, this);\r\n        return M.call(...arguments);\r\n    };\r\n    mapModels();\r\n}\r\n\r\nmodule.exports = {\r\n    $: $,\r\n    Vector: Vector,\r\n    NumericVector: NumericVector,\r\n    StringVector: StringVector,\r\n    BooleanVector: BooleanVector,\r\n    VectorMethod: VectorMethod,\r\n    VectorAnalysis: VectorAnalysis,\r\n    Models: Models,\r\n    VectorOverview: function() {\r\n        return VectorOverview(Models)},\r\n    register: register\r\n}\n\n//# sourceURL=webpack://retusa/./libs/vector.js?");

/***/ }),

/***/ "./locales/cs.js":
/*!***********************!*\
  !*** ./locales/cs.js ***!
  \***********************/
/***/ ((module) => {

eval("module.exports = {\r\n\t/* empty locale text (with no code) */\r\n\t\"0000\": \"prázdný text\",\r\n\t/* empty locale text (with no code) */\r\n\t\"0001\": \"neznámá hodnota lokálního kódu: ${value}\",\r\n\t/* vector sum fce (title) */\r\n\t\"gvdg\": \"součet\",\r\n\t/* vector sum fce (desc) */\r\n\t\"iMbD\": \"Vrátí součet všech neprázdných číselných hodnot vektoru.\",\r\n\t/* vector count fce (title) */\r\n\t\"tdrm\": \"počet\",\r\n\t/* vector mean/average fce (title) */\r\n\t\"eFdj\": \"aritmetický průměr\",\r\n\t/* vector geometric mean fce (title) */\r\n\t\"iuTi\": \"geometrický průměr\",\r\n\t/* vector harmonic mean fce (title) */\r\n\t\"XKty\": \"harmonický průměr\",\r\n\t/* vector skewness fce (title) */\r\n\t\"KZgI\": \"šikmost\",\r\n\t/* vector kurtosis fce (title) */\r\n\t\"oPPx\": \"špičatost\",\r\n\t/* vector percentile fce (title) */\r\n\t\"fPra\": \"percentil\",\r\n\t/* vector percentile fce (dscription) */\r\n\t\"yNbM\": \"Vrátí hodnotu, která odpovídá k-tému percentilu v oblasti hodnot vektoru.\",\r\n\t/* vector percentile K argument (title) */\r\n\t\"dBDt\": \"hodnota percentilu\",\r\n\t/* vector percentile K argument (description) */\r\n\t\"GQpQ\": \"Hodnota percentilu z uzavřeného intervalu mezi 0 a 1 včerně. Př. 0 = minimální hodnota, 0.25 = první kvartil, 0.5 = medián, 1 = maximum apod.\",\r\n\t/* vector median fce (title) */\r\n\t\"Qyba\": \"medián\",\r\n\t/* vector mode fce (title) */\r\n\t\"JVZp\": \"modus\",\r\n\t/* error: not a numeric value */\r\n\t\"Jphg\": \"Nejedná se o numerickou hodnotu: ${value}.\",\r\n\t/* error: value not between 0 and 1 */\r\n\t\"vKlu\": \"Hodnota musí být mezi 0 a 1 včetně; zadaná hodnota ${value}.\",\r\n\t/* any integer */\r\n\t\"llQx\": \"celé číslo\",\r\n\t/* any single value */\r\n\t\"te8N\": \"jakákoliv hodnota\",\r\n\t/* any number */\r\n\t\"pelN\": \"číslo\",\r\n\t/* vector percentile (example note) */\r\n\t\"vOnn\": \"výpočet 1. kvartilu (25% percentilu)\",\r\n\t/* vector result note */\r\n\t\"UUNG\": \"výsledek\",\r\n\t/* numeric vector type name */\r\n\t\"LOYN\": \"numerický\",\r\n\t/* string vector type name */\r\n\t\"zoiB\": \"nominální\",\r\n\t/* boolean vector type name */\r\n\t\"OkoC\": \"binární\",\r\n\t/* vector count fce (description) */\r\n\t\"ULJX\": \"Vrátí počet všech polí ve vektoru (včetně prázdných).\",\r\n\t/* vector mean/average fce (title) */\r\n\t\"UYJN\": \"Vrátí arytmetický průměr z neprázdných hodnot.\",\r\n\t/* standard deviation vector fce (title) */\r\n\t\"oUcc\": \"směrodatná odchylka\",\r\n\t/* standard deviation vector fce (description) */\r\n\t\"ZgSc\": \"Vrátí směrodatnou odchylku neprázdných hodnot. Směrodatná odchylka je statistický ukazatel, který udává, jak moc se hodnoty v daném souboru dat od sebe liší. Směrodatná odchylka je vyjádřena jako číslo, které udává, o kolik se průměrná hodnota odchýlí od skutečné hodnoty v daném souboru dat. Směrodatná odchylka je užitečná při porovnávání velikosti rozptýlení dat v různých souborech nebo v různých skupinách v rámci jednoho souboru dat. Čím je směrodatná odchylka větší, tím více se hodnoty v daném souboru dat od sebe liší.\",\r\n\t/* standard deviation vector fce sample param (title) */\r\n\t\"eJTq\": \"výběrový soubor\",\r\n\t/* standard deviation vector fce sample param (description) */\r\n\t\"FfpU\": \"Určuje, zdali se jedná o výběrový soubor. Nabývá hodnot pravda (jedná se o výběrový sobour) nebo nepravda (jedná se o základní soubor)\",\r\n\t/* vector max fce (title) */\r\n\t\"nKuF\": \"maximální hodnota\",\r\n\t/* vector max fce (description) */\r\n\t\"gkep\": \"Vrátí největší hodnotu z neprázdných hodnot. V případě textu vrátí poslední hodnotu z abecedního řazení.\",\r\n\t/* vector min fce (title) */\r\n\t\"FkaD\": \"minimální hodnota\",\r\n\t/* vector min fce (description) */\r\n\t\"yBlA\": \"Vrátí nejmenší hodnotu z neprázdných hodnot. V případě textu vrátí první hodnotu z abecedního řazení.\",\r\n\t/* standard deviation example - population (example) */\r\n\t\"hXyf\": \"pro základní soubor\",\r\n\t/* standard deviation example - sample (example) */\r\n\t\"zDNK\": \"pro výběrový souboru\",\r\n\t/* vector range fce (title) */\r\n\t\"mXxJ\": \"variační rozpětí\",\r\n\t/* vector range fce (description) */\r\n\t\"dnzB\": \"Vrátí rozdíl největší a nejmenší neprázdné hodnoty.\",\r\n\t/* vector variation coefficient fce (title) */\r\n\t\"uwpU\": \"variační koeficient\",\r\n\t/* vector variation coefficient fce (description) */\r\n\t\"fUpj\": \"Vrátí hodnotu variačního koeficientu neprázdných hodnot.\",\r\n\t/* vector geomean fce (title) */\r\n\t\"louK\": \"geometrický průměr\",\r\n\t/* vector geomean fce (description) */\r\n\t\"PDzr\": \"Vrátí geometrický průměr z neprázdných hodnot. Je vždy menší nebo rovný než průměr arytmetický.\",\r\n\t/* vector harmean fce (title) */\r\n\t\"vpdN\": \"harmonický průměr\",\r\n\t/* vector harmean fce (description) */\r\n\t\"nhJv\": \"Vrátí harmonický průměr z neprázdných hodnot. Harmonický průměr je vždy menší než průměr geometrický, tedy i než průměr arytmetický. Používá se např. při výpočtu průměrné rychlosti.\",\r\n\t/* vector median fce (title) */\r\n\t\"TzfX\": \"medián\",\r\n\t/* vector median fce (description) */\r\n\t\"YIir\": \"Vrátí střední hodnotu z neprázdných hodnot.\",\r\n\t/* vector mode fce (title) */\r\n\t\"StQx\": \"modus\",\r\n\t/* vector mode fce (description) */\r\n\t\"IBfx\": \"Vrátí nejčastější hodnotu (pokud je nejčastější prázdná hodnota, vrátí prázdnou hodnotu).\",\r\n\t/* filter notnull text */\r\n\t\"UCdL\": \"Všechny hodnoty kromě prázdných (null).\",\r\n\t/* filter number text */\r\n\t\"GDkm\": \"Pouze číselné hodnoty (včetně nul).\",\r\n\t/* filter string text */\r\n\t\"jocS\": \"Pouze textové hodnoty. Ignoruje čísla, pokud nejsou 'stringována' (tedy v závorkách).\",\r\n\t/* filter boolean text */\r\n\t\"uUYu\": \"Pouze hodnoty pravda a nepravda (true/false).\",\r\n\t/* vector SEM fce (title) */\r\n\t\"dLmV\": \"střední chyba průměru\",\r\n\t/* vector SEM fce (description) */\r\n\t\"ZBnI\": \"Vrátí hodnotu směrodatné chyby odhadu průměru.\",\r\n\t/* vector kurtosis fce (description) */\r\n\t\"UOBG\": `Vrátí hodnotu excesu množiny dat. Ve statistice špičatost (kurtosis) označuje míru, jak moc se hodnoty v sbírce dat liší od průměrné hodnoty. Špičatost se obvykle počítá pro křivku rozdělení dat, která je grafickým zobrazením rozložení hodnot v dané sbírce dat.\\nExistují dva základní typy špičatosti: platykurtóza a leptokurtóza. Platykurtóza se vyskytuje, když hodnoty v sbírce dat jsou rozloženy víceméně rovnoměrně kolem průměrné hodnoty. Toto rozložení se projevuje jako křivka rozdělení tvaru \"písmene U\", která má plochý vrchol. Naopak leptokurtóza se vyskytuje, když hodnoty v sbírce dat jsou rozloženy s výraznou odchylkou od průměrné hodnoty. Toto rozložení se projevuje jako křivka rozdělení tvaru \"písmene špičatého kopce\" nebo \"písmene špičatého údolí\".\\nŠpičatost se používá k určení, zda je rozložení hodnot v sbírce dat víceméně rovnoměrné, nebo zda existují nějaké výrazné odchylky od průměrné hodnoty. Špičatost se často používá spolu s dalšími metrikami, jako je medián, šikmost a kvantily, které vám pomohou lépe porozumět rozložení dat a určit, zda existují nějaké výrazné odchylky od průměrné hodnoty.`,\r\n\t/* table Pearson correlation fce (title) */\r\n\t\"pTvR\": \"Pearsonův korelační koeficient\",\r\n\t/* table Pearson correlation fce (description) */\r\n\t\"wPyG\": \"Vrátí statistický protokol Pearsonova korelačního koeficientu.\\nPearsonova korelace je statistická metoda, která se používá k měření vztahu mezi dvěma veličinami. Jejím cílem je zjistit, zda existuje lineární vztah mezi těmito veličinami a jaký je jeho intenzita.\\nPearsonova korelace se vypočítá pomocí vzorce, který se nazývá Pearsonův koeficient korelace. Tento koeficient se pohybuje v rozmezí od -1 do 1 a udává, jak silně je mezi veličinami vztah. Pokud je koeficient blízký -1, znamená to, že mezi veličinami je silný negativní vztah, což znamená, že když se hodnota jedné veličiny zvyšuje, hodnota druhé veličiny klesá. Naopak pokud je koeficient blízký 1, znamená to, že mezi veličinami je silný pozitivní vztah, což znamená, že když se hodnota jedné veličiny zvyšuje, hodnota druhé veličiny také roste. Pokud je koeficient blízký 0, znamená to, že mezi veličinami není žádný vztah nebo je vztah velmi slabý.\\nPearsonova korelace se používá především k porovnávání dvou kvantitativních veličin, tj. veličin, které jsou měřitelné na škále s přesnými hodnotami (například věk, výška nebo hmotnost). Může se použít k určení, zda existuje vztah mezi těmito veličinami a jaký je jeho charakter. Například může být Pearsonova korelace použita k porovnání věku a hmotnosti a zjistit, zda existuje vztah mezi těmito veličinami a jaký je jeho charakter. Může se také použít k porovnání výsledků dvou různých testů a zjistit, zda existuje vztah mezi výsledky těchto testů. Zdroj: https://chat.openai.com/chat\",\r\n\t/* table correlation 1st argument (title) */\r\n\t\"qFEM\": \"první proměnná\",\r\n\t/* table correlation 2nd argument (title) */\r\n\t\"tpUu\": \"druhá proměnná\",\r\n\t/* table correlation 2nd argument (title) */\r\n\t\"tpUR\": \"třetí proměnná\",\r\n\t/* schema type integer */\r\n\t\"DQnl\": \"celé číslo\",\r\n\t/* schema type integer */\r\n\t\"OQnL\": \"desetinné číslo mezi 1 a 0 (včetně)\",\r\n\t/* schema type number */\r\n\t\"WdQY\": \"desetinné číslo\",\r\n\t/* schema type string */\r\n\t\"RFGF\": \"text\",\r\n\t/* schema type boolean */\r\n\t\"XPGc\": \"binární\",\r\n\t/* schema type object */\r\n\t\"UxIa\": \"\",\r\n\t/* schema type array */\r\n\t\"zDFp\": \"\",\r\n\t/* schema type frequency table children - value */\r\n\t\"ZVbP\": \"hodnota\",\r\n\t/* schema type frequency table children - frequency */\r\n\t\"mXpR\": \"četnost\",\r\n\t/* Validator error - not a Variable type */\r\n\t\"RLob\": \"Argument musí být typu vektor, místo toho přijata hodnotaf ${value}\",\r\n\t/* Validator error - not a Numeric variable type */\r\n\t\"Kvpv\": \"Argument musí být numerický vektor.\",\r\n\t/* Validator error - not a boolean variable type */\r\n\t\"KvHv\": \"Argument musí být binární vektor.\",\r\n\t/* validator text - isNumber */\r\n\t\"NfvF\": \"Ověří, zdali je hodnota číslo. V opačném případě vyvolá chybu.\",\r\n\t/* validator text - zeroToOneInc */\r\n\t\"GweD\": \"Ověří, zdali je hodnota číslo mezi 0 a 1 (včetně hraničních hodnot). V opačném případě vyvolá chybu.\",\r\n\t/* validator text - boolean */\r\n\t\"GHFj\": \"Ověří, zdali je hodnota binární povahy. V opačném případě hodnotu automaticky převede na typ boolean a nevrací tudíž nikdy chybu.\",\r\n\t/* validator text - isVariable */\r\n\t\"GJry\": \"Ověří, zdali je hodnota instancí třídy Variable. V opačném případě se někdy pokusí hodnotu převést na danou instanci, záleží na volající metodě.\",\r\n\t/* validator text - isNumericVariable */\r\n\t\"gGTf\": \"Ověří, zdali je hodnota instancí třídy Variable číselného typu (typ 1, hodnota typu NumericArray). V opačném případě se někdy pokusí hodnotu převést na danou instanci, záleží na volající metodě.\",\r\n\t/* filter text - any */\r\n\t\"FxzE\": \"jakákoliv hodnota\",\r\n\t/* filter text - notnull */\r\n\t\"ndPx\": \"jakákoliv neprázdná hodnota (u číselných řad akceptuje nuly, u binárních proměnných argumenty false).\",\r\n\t/* Validator error - value is empty */\r\n\t\"HOuY\": \"Hodnota nemůže být prázdná.\",\r\n\t/* validator text - isNotNull */\r\n\t\"pxGY\": \"Ověří, zdali není hodnota prázdná (vyjma 0 a false). V opačném případě vrátí chybu\",\r\n\t/* table Spearman correlation fce (title) */\r\n\t\"eJTT\": \"Spearmanův korelační koeficient\",\r\n\t/* table Spearman correlation fce (description) */\r\n\t\"jAGi\": \"Vrátí statistický protokol Spearmanova koeficientu pořadové korelace.\",\"JoAY\": \"\",\r\n\t/* vector histogram fce (title) */\r\n\t\"PAwR\": \"histogram\",\r\n\t/* vector histogram fce (description) */\r\n\t\"AISp\": \"Vrátí matici histogramu daného vektoru. Metodu lze volit s upřesněním parametrů nebo i bez nich. Pokud není upřesněn parametr 'maximální počet intervalů' (maxIntervals), je jeho hodnota automaticky vypočítána jako variační rozpětí/odmocnina z počtu prvků. Pokud je uveden parametr 'pevná velikost intervalu' (fixedInterval), je brána tato hodnota jako rozhodující pro počet intervalu. Obě dvě hodnoty nejsou slučitelné (ačkoliv nebrací chybu), při zadání obou dvou je jako prioritní brán paramtr maxIntervals (nebo možná fixedIntervals?).\",\r\n\t/* validator error - its decimal, not integer */\r\n\t\"tEdu\": \"Je potřeba zadat celé, ne desetinné číslo.\",\r\n\t/* validator error - its not positive integer */\r\n\t\"HCgv\": \"Hodnota musí být větší než nula.\",\r\n\t/* validator text - positive integer */\r\n\t\"dFiw\": \"Ověří, zdali se jedná o celé kladné číslo. V opačném případě vyvolá chybu.\",\r\n\t/* vector histogram fce param maxIntervals (title) */\r\n\t\"WnZK\": \"Maximální počet intervalů\",\r\n\t/* vector histogram fce param fixedInterval (title)*/\r\n\t\"Mnfn\": \"Pevná velikost intervalu\",\r\n\t/* vector histogram fce param maxIntervals (description) */\r\n\t\"mcOp\": \"Hodnoty budou rozděleny na daný počet stejně velkých intervalů.\",\r\n\t/* vector histogram fce param fixedInterval (description) */\r\n\t\"yOuB\": \"Hodnoty budou rozděleny na N skupin dle zadaného intervalu.\",\r\n\t/* validators text - positiveDecimal */\r\n\t\"bpCq\": \"Ověří, zdali se jedná o číselnou hodnotu větší než nula. V opačném případě vyvolá chybu.\",\r\n\t/* model validator error - parameter is mandatory */\r\n\t\"dSWt\": \"Parametr ${name} (${title}) pro metodu ${method} je povinný.\",\r\n\t/* vector general validator error - wrong parameter in model */\r\n\t\"ZUMk\": \"Chybný parametr ${name} (${title}) v metodě ${method}\",\r\n\t/* table partial correlation fce (title) */\r\n\t\"sjoW\": \"parciální korelace\",\r\n\t/* table partial correlation fce (description) */\r\n\t\"hHaW\": \"Vrátí statistický protokol parciálního korelačního koeficientu.\",\r\n\t/* validators text - booleanVariable */\r\n\t\"OCKc\": \"Ověří, zdali je hodnota typu binární proměnné. V opačném případě vyvolá chybu.\",\r\n\t/* vector frequency fce (title) */\r\n\t\"dYJK\": \"frekvenční tabulka\",\r\n\t/* vector frequency fce (description) */\r\n\t\"Tzyp\": \"Vrátí object frekvenční tabulky s rozpadem prvků a jejich četností.\",\r\n\t/* vector frequency fce order enum - 1 (by frequency desc) */\r\n\t\"AUbD\": \"dle četnosti sestupně\",\r\n\t/* vector frequency fce order enum - 2 (by frequency asc) */\r\n\t\"WSJH\": \"dle četnost vzestupně\",\r\n\t/* vector frequency fce order enum - 3 (by value desc) */\r\n\t\"dkxz\": \"dle hodnoty vzestupně\",\r\n\t/* vector frequency fce order enum - 3 (by value asc) */\r\n\t\"vJCU\": \"dle hodnoty sestupně\",\r\n\t/* schema type uint */\r\n\t\"IrhN\": \"celé číslo větší nebo rovné nule\",\r\n\t/* vector frequency fce order (title) */\r\n\t\"gZCx\": \"způsob řazení dat tabulky\",\r\n\t/* validators text - enumValidator */\r\n\t\"aaVG\": \"Ověří, zdali je hodnota platným členem enumerace. V opačném případě vyvolá chybu.\",\r\n\t/* validators enumValidator error */\r\n\t\"HhLt\": \"Neznámá hodnota enumerátoru ${name}: ${value}; možné hodnoty jsou ${keys}\",\r\n\t/* numeric vector value parse error */\r\n\t\"UyOj\": \"Tento typ vektoru akceptuje pouze numerické a prázdné hodnoty. Vrácená chybná hodnota: ${value}\",\r\n\t/* NotApplicable class vector message */\r\n\t\"ibNu\": \"Metoda '${method}' není určena pro ${type} vektor.\",\r\n\t/* vektor type enum (title) - numeric */\r\n\t\"kPSW\": \"číselný\",\r\n\t/* vektor type enum (title) - string */\r\n\t\"UQoV\": \"textový\",\r\n\t/* vektor type enum (title) - boolean */\r\n\t\"WiEE\": \"binární\",\r\n\t/* vektor type enum (title) - multiple */\r\n\t\"LiPr\": \"vícenásobný\",\r\n\t/* vektor type enum (title) - date */\r\n\t\"sbFB\": \"časový\",\r\n\t/* vector variance fce (title) */ \r\n\t\"TvQv\": \"rozptyl\",\r\n\t/* vector variance fce (description) */ \r\n\t\"sfCh\": \"Vrátí hodnotu rozptylu tohoto vektoru.\",\r\n\t/* histogram schema - from */\r\n\t\"jbqY\": \"spodní mez intervalu\",\r\n\t/* histogram schema - from */\r\n\t\"GlDV\": \"horní mez intervalu\",\r\n\t/* histogram schema - interval */\r\n\t\"VyzG\": \"interval (slovní vyjádření)\",\r\n\t/* histogram schema - frequency abs. */\r\n\t\"eHkc\": \"četnost (abs.)\",\r\n\t/* histogram schema - frequency rel. */\r\n\t\"iDVx\": \"četnost (%)\",\r\n\t/* histogram schema - cumulative frequency abs. */\r\n\t\"Dwuz\": \"kumulativní četnost (abs.)\",\r\n\t/* histogram schema - cumulative frequency rel. */\r\n\t\"oIyG\": \"kumulativní četnost (%)\",\r\n\t/* Empty instance - calling VectorMethod without the parent specified */\r\n\t\"hKRq\": \"Pokud není určena konkrétní instance vektoru coby vlastnosti instance třídy VectorMethod, je při volání výpočetní nebo validační metody vrácen prázdný výsledek.\",\r\n\t/* MD vector filter level (title) */\r\n\t\"VVSN\": \"Automatický filtr hodnot\",\r\n\t/* MD vector arguments (title) */\r\n\t\"FRpk\": \"Argumenty\",\r\n\t/* MD vector argument table header - id */\r\n\t\"QUJS\": \"argument\",\r\n\t/* MD vector argument table header - title */\r\n\t\"jBGO\": \"popis\",\r\n\t/* MD vector argument table header - validator */\r\n\t\"tGqA\": \"validátor\",\r\n\t/* MD vector argument table header - required */\r\n\t\"VPYX\": \"povinný\",\r\n\t/* MD vector argument table header - default */\r\n\t\"pDgb\": \"defaultní hodnota\",\r\n\t/* MD vector argument table header - multiple */\r\n\t\"Olab\": \"vícenásobný\",\r\n\t/* YES */\r\n\t\"OpXv\": \"ano\",\r\n\t/* NO */ \r\n\t\"SnpN\": \"ne\",\r\n\t/* MD vector applies (title) */\r\n\t\"NizL\": \"Integrace dle třídy\",\r\n\t/* MD vector applies - type (header) */\r\n\t\"AfXp\": \"typ vektoru\",\r\n\t/* MD vector applies - applies (header) */\r\n\t\"picU\": \"integrace\",\r\n\t/* MD vector overview header */\r\n\t\"DJUc\": \"Přehled statistických metod\",\r\n\t/* MD vector overview table header - function */\r\n\t\"wRbe\": \"funkce\",\r\n\t/* MD vector overview table header - method */\r\n\t\"rlTY\": \"metoda\",\r\n\t/* MD vector overview table header - description */\r\n\t\"zPyP\": \"popis\",\r\n\t/* MD vector example header */\r\n\t\"nzmJ\": \"Příklad\",\r\n\t/* Schema type - correlation coefficient R (title) */\r\n\t\"GBcE\": \"hodnota korelačního koeficientu\",\r\n\t/* Schema type - correlation coefGqQZficient R (description) */\r\n\t\"IPcj\": \"Hodnota korelačního koeficientu nabírá hodnotu mezi -1 až 1 včetně, přičemž -1 značí maximálně nepřímo uměrný vztah, hodnota 1 znamená maximální přímo úměrný vztah a číslo nula znamená žádný vztah mězi proměnnými.\",\r\n\t/* vector fce ttest one sample (title) */\r\n\t\"VEAt\": \"jednovýběrový t-test\",\r\n\t/* vector fce ttest one sample (description) */\r\n\t\"rbjM\": \"Vrátí statistický protokol pro jednovýběrový t-test při zadání populačního průměru.\",\r\n\t/* vector fce ttest one sample - populationMean argument (title;) */\r\n\t\"GRoZ\": \"populační průměr\",\r\n\t/* vector fce ttest one sample - populationMean argument (description) */\r\n\t\"xtfz\": \"hodnota populačního (srovnávacího) průměru, vůči kterému je testovaní prováděno\",\r\n\t/* MD schema value example text */\r\n\t\"WoVe\": \"např.\",\r\n\t/* MD schema type: object */\r\n\t\"qumN\": \"objekt\",\r\n\t/* Matrix fce t-test independent plain (title) */\r\n\t\"YqRh\": \"T-test (nezávislý)\",\r\n\t/* Matrix fce t-test independent plain (description) */\r\n\t\"gILL\": \"Vrátí statistický protokol Studentova t-testu pro dva nezávislé výběry, které jsou definovány vlastní proměnnou (tedy dvěma numerickými vektory). Argumenty tvoří buď dva numerické vektory, nebo jeden numerický a jen faktorový vektor (obvykle text, ale může být i numerický či binární). Pokud je použit jako faktor vektor, který má více než dvě unikátní hodnoty, jsou pro test uvažovány pouze první dvě unikátní nalezené hodnoty (ostatní se ignorují) - v takovém případě je informace o velikosti čistého vzorku nepodstatná, nicméně hladina významnosti, do které velikost vzorku vstupuje, je již založena na čistých případech.\",\r\n\t/* Vector fce t-test one sample (title) */\r\n\t\"sOyV\": \"T-test s jedním výběrem\",\r\n\t/* Vector fce t-test one sample (title) */\r\n\t\"qwEY\": \"Vrátí statistický protokol Studentova t-testu pro jeden výběrem při zadání populačního (testovacího) průměru.\",\r\n\t/* validators isArray error */\r\n\t\"FepU\": \"Očekávala se hodnota typu Array, místo toho byla zjištěna hodnota ${value}\",\r\n\t/* Matrix fce t-test independent grouped - arg test variable */\r\n\t\"wHHo\": \"testová proměnná\",\r\n\t/* Matrix fce t-test independent grouped - arg factor variable */\r\n\t\"Ltgx\": \"shlukující proměnná\",\r\n\t/* Matrix fce t-test independent grouped - arg groups array */\r\n\t\"rQBm\": \"výběr shlukujících hodnot\",\r\n\t/* Empty instance - calling MatrixMethod without the parent specified */\r\n\t\"jrQP\": \"Pokud není určena konkrétní instance matice coby vlastnosti instance třídy MatrixMethod (vlastnost 'parent'), je při volání výpočetní nebo validační metody vrácen prázdný výsledek.\",\r\n\t/* Matrix fce t-test paired (title) */\r\n\t\"mmXD\": \"T-test (párový)\",\r\n\t/* Matrix fce t-test paired (description) */\r\n\t\"kPqo\": \"Vrátí statistický protokol párového t-testu pro dva závislé výběry. Prázdné hodnoty jsou vyřezeny v průřezu řádků, tzn. že pokud v jednom řádku chybí alespoň jedna hodnota, je z analýzy vyřezen celý řádek.\",\r\n\t/* Matrix fce One-way ANOVA (title) */\r\n\t\"baJo\": \"ANOVA (jednofaktorová)\",\r\n\t/* Matrix fce One-way ANOVA (description) */\r\n\t\"qqQo\": \"Vrátí statistický protokol analýzy rozptylu jednoduchého třídění (One-way ANOVA). Metoda má dva argumenty. První tvoří řada numerických vektorů, kde minimálně jeden vektor je povinný. Druhý argument je nepovinný a představuje shlukovací faktor, tedy textovou proměnnou, která v řádcích určuje příslučnost numerického faktoru ke skupině. Pokud je zadán druhý parametr, z první skupiny vektorů je zohledňován pouze první.\",\r\n\t/* validators text - isNumericMatrix */\r\n\t\"OrZc\": \"Ověří, zdali je hodnota typu numerické matice (tedy matice obsahující pouze numerické vektory). V opačném případě vyvolá chybu.\",\r\n\t/* validators isNumericMatrix error */\r\n\t\"FIQW\": \"Očekávala se hodnota typu NumericMatrix, místo toho byla zjištěna hodnota ${value}\",\r\n\t/* Matrix fce Mann-Whitney U (title) */\r\n\t\"rPQr\": \"Mann-Whitneyho test\",\r\n\t/* Matrix fce Mann-Whitney U (description) */\r\n\t\"vzHj\": \"Vrátí statistický protokol Mann-Whitneyho U testu. Ve statistice je tento tent (také nazývaný Mann–Whitney–Wilcoxon (MWW/MWU), Wilcoxonův rank-sum test nebo Wilcoxon–Mann–Whitney test) neparametrický test nulové hypotézy, která náhodně vybrané hodnoty X a Y ze dvou populací, přičemž pravděpodobnost, že X bude větší než Y, se rovná pravděpodobnosti, že Y bude větší než X.\",\r\n\t/* schema type object */\r\n\t\"kLhB\": \"objekt\",\r\n\t/* schema type array */\r\n\t\"qdkt\": \"řada\",\r\n\t/* schema type any */\r\n\t\"oMas\": \"cokoliv\",\r\n\t/* MD docs header - result schema */\r\n\t\"KxQM\": \"Struktura vrácené hodnoty\",\r\n\t/* schema t-test - T value */\r\n\t\"GmAh\": \"testovací hodnota\",\r\n\t/* schema p (significance) */\r\n\t\"MpjZ\": \"hladina významnosti\",\r\n\t/* schema total of cases */\r\n\t\"bLoI\": \"počet případů\",\r\n\t/* argument schema (title) */\r\n\t\"dmmV\": \"typ hodnoty\",\r\n\t/* Vektor fce skewness (description)*/\r\n\t\"nJbe\": \"Vrátí zešikmení rozdělní: charakteristika a asymetrie rozdělení kolem střední hodnoty vektoru. \",\r\n\t/* MD url \"read more\" */\r\n\t\"WLsu\": \"Zjistit více.\",\r\n\t/* vector fce Confidence intervals for the mean (title) */\r\n\t\"yHjW\": \"interval spolehlivosti průměru\",\r\n\t/* vector fce Confidence intervals for the mean (description) */\r\n\t\"DDpa\": \"Vrátí statistický protokol odhadu intervalu spolehlivosti průměru výběrového souboru při určité hladině významnosti. Pokud je počet případů menší než 30, je použito Studentovo T-rozdělení, jinak je použito standardizované normální rozdělení.\",\r\n\t/* vector fce Confidence intervals for the mean (confidenceLevel argument - title) */\r\n\t\"lFlm\": \"hladina významnosti\",\r\n\t/* vector fce Confidence intervals for the mean (confidenceLevel argument - Description) */\r\n\t\"SMbe\": \"Hodnota hladiny významnosti, na které se interval testuje. Pokud je počet případů menší než 30, je použito Studentovo T-rozdělení, jinak je použito standardizované normální rozdělení.\",\r\n\t/* schema MCI - delta */\r\n\t\"NzBg\": \"interval spolehlivosti (+-)\",\r\n\t/* schema MCI - lower bound */\r\n\t\"GynK\": \"spodní hranice intervalu\",\r\n\t/* schema MCI - upper bound */\r\n\t\"iIPc\": \"horní hranice intervalu\",\r\n\t/* error: not an object value */\r\n\t\"YpHg\": \"Nejedná se o hodnotu typu object: ${value}.\",\r\n\t/* validator text - isObject */\r\n\t\"MFvf\": \"Ověří, zdali je hodnota typu object. Pokud je hodnota typu string, pokusí se hodnotu parsovat na object. Pokud se nejedná ani o object, ani se nepodaří hodnotu parsovat, vyvolá chybu. Hodntoa typu Array zde není považována za object.\",\r\n\t/* fce vector Shapiro-Wilk - empty result (not enough cases) */\r\n\t\"AgIP\": \"Pro výpočet hodnoty W Shapiro-Wilkova testu je potřeba více příkladů (minimálně 3).\",\r\n\t/* fce vector Shapiro-Wilk - empty result (range too small) */\r\n\t\"zxmM\": \"Rozpětí hodnot je příliš malá: ${range}\",\r\n\t/* fce vector Shapiro-Wilk - empty result (range too big) */\r\n\t\"TSCM\": \"Rozpětí hodnot je příliš velké: ${range}\",\r\n\t/* fce vector Shapiro-Wilk - empty result (range many cases) */\r\n\t\"yhzq\": \"Příliš mnoho hodnot ve vektoru (přes 5000).\",\r\n\t/* fce vector Shapiro-Wilk (title) */\r\n\t\"byTa\": \"Shapirův-Wilkův W test\",\r\n\t/* fce vector Shapiro-Wilk (description) */\r\n\t\"LHkd\": \"Vrátí statistický protokol Shapiro-Wilkova W testu normality rozdělení hodnot vektoru. Shapiro-Wilk test je statistický test, který se používá k testování hypotézy, že data pocházejí z normálního rozdělení. Tento test je často používán k ověření normality dat v rámci statistické analýzy. Test Shapiro-Wilk se zakládá na porovnání hodnoty kvartilů dat s hodnotami kvartilů normálního rozdělení. Když jsou hodnoty kvartilů dat podobné hodnotám kvartilů normálního rozdělení, je pravděpodobné, že data pocházejí z normálního rozdělení. V opačném případě je pravděpodobné, že data nejsou normální. Při použití testu Shapiro-Wilk je třeba si uvědomit, že tento test má nízkou citlivost pro velké vzorky, tj. pro velké vzorky může být test méně spolehlivý při detekci ne-normality. Proto se pro velké vzorky často používají jiné testy normality, jako například test Anderson-Darling nebo test Kolmogorov-Smirnov.\",\r\n\t/* shema - DF (degrees of freedom) */\r\n\t\"OYQu\": \"počet stupňů volnosti\",\r\n\t/* shema - Shapiro-Wilk W (degrees of freedom) */\r\n\t\"nZvR\": \"hodnota Shapiro-Wilkova W testu\",\r\n\t/* vector fce Confidence intervals for the proportion (title) */\r\n\t\"ZhjW\": \"interval spolehlivosti podílu\",\r\n\t/* vector fce Confidence intervals for the proportion (description) */\r\n\t\"KLpa\": \"Vrátí statistický protokol odhadu intervalu spolehlivosti podílu výběrového souboru při určité hladině významnosti.\",\r\n\t/* vector fce Confidence intervals for the proportion - value argument (title) */\r\n\t\"obxp\": \"hledaná hodnota\",\r\n\t/* vector fce Confidence intervals for the proportion - value argument (description) */\r\n\t\"QOvf\": \"Hodnota, jejíž podíl v rámci vektoru má být vypočten. Může se jednat o libovolnou hodnotu, měla by ovšem splňovat kritéria faktoru (např. u nominálního vektoru text apod.).\",\r\n\t/* schema vector pci - p */\r\n\t\"nCHN\": \"podíl hledané hodnoty na celku\",\r\n\t/* schema vector mci/pci - sig */\r\n\t\"mjPq\": \"hladina významnosti intervalu\",\r\n\t/* validator v_any title */\r\n\t\"Blaz\": \"Vstupem může být libovolná hodnota, validátor nevrací chybu.\",\r\n\t/* fce vector - kolmogorov-smirnov test (title) */\r\n\t\"DLoe\": \"Kolmogorov-Smirnovův test\",\r\n\t/* fce vector - kolmogorov-smirnov test (description) */\r\n\t\"yQZd\": \"Vrátí statistický protokol Komogorov-Smirnovova testu normality rozdělení hodnot vektoru. Aktuálně nepočítá hladinu významnosti testu. Kolmogorov-Smirnov test (často také zkracovaný jako K-S test) je statistický test, který se používá k testování hypotézy, že data pocházejí z určitého rozdělení. Tento test porovnává rozdělení dat s teoretickým rozdělením, které se předpokládá, že data vycházejí, a vyhodnocuje, zda jsou datové hodnoty s teoretickým rozdělením dostatečně blízko, aby se mohla hypotéza o tom, že data pocházejí z daného rozdělení, považovat za pravdivou.Test Kolmogorov-Smirnov se často používá k ověření normality dat, ale může být také použit k ověření, zda data pocházejí z jiného teoretického rozdělení, jako je například exponenciální nebo binomické rozdělení. Test Kolmogorov-Smirnov je obecně považován za jeden z nejpřesnějších testů normality, ale má omezenou citlivost pro malé vzorky, tj. pro malé vzorky může být méně spolehlivý při detekci ne-normality. Pro malé vzorky se proto často používají jiné testy normality, jako například test Shapiro-Wilk nebo test Anderson-Darling.\",\r\n\t/* schema kstest - T (test value) */\r\n\t\"jBSf\": \"hodnota Kolmogorov-Smirnovova testu\",\r\n\t/* markdown - method calling template title */\r\n\t\"oPEt\": \"Způsob volání metody\",\r\n\t/* matrix fce linreg (title) */\r\n\t\"KwSQ\": \"lineární regrese\",\r\n\t/* matrix fce linreg (description) */\r\n\t\"celD\": \"Vrátí statistický protokol lineární regrese. Součástí vráceného objektu je i funkce (fn), pomocí které lze modelovat situace závislé proměnné při zadání hodnoty závislé proměnné.\",\r\n\t/* matrix fce linreg (arg x) */\r\n\t\"jDlm\": \"nezávislá proměnná x\",\r\n\t/* matrix fce linreg (arg y) */\r\n\t\"jFVv\": \"závislá proměnná y\",\r\n\t/* filter metrix bypassMatrix text */\r\n\t\"rAyq\": \"Vybere všechna data z půdodní matice (tj. žádná filtrace).\",\r\n\t/* filter metrix RemoveEmpty text */\r\n\t\"SExL\": \"Vybere napříč relevantních vektorů matice pouze ty řádky, které v rámci své řady neobsahují ani jednu prázdnou hodnotu.\",\r\n\t/* schema - numeric matrix (title) */\r\n\t\"gLcr\":\"matice numerických vektorů\",\r\n\t/* schema - any vector */\r\n\t\"zRT3\":\"numerický vektor\",\r\n\t/* schema - numeric vector */\r\n\t\"yWUM\":\"numerický vektor\",\r\n\t/* schema - matrix (type) */\r\n\t\"DfLu\":\"matice\",\r\n\t/* schema - boolean vector */\r\n\t\"boQk\":\"binární vektor\",\r\n\t/* schema - string vector */\r\n\t\"Hwus\": \"textový vektor\",\r\n\t/* fce matrix - anovaow - argument vectors */\r\n\t\"iJaa\":\"vektor/y\",\r\n\t/* schema ANOVA one-way - F */\r\n\t\"iJEe\":\"skupinový faktor\",\r\n\t/* schema ANOVA one-way - F */\r\n\t\"Jdfb\":\"F test\",\r\n\t/* schema ANOVA one-way - P2 */\r\n\t\"HksP\":\"koeficient závislosti\",\r\n\t/* schema ANOVA one-way - ANOVA obj. */\r\n\t\"qCgT\":\"statistiky ANOVA\",\r\n\t/* schema ANOVA one-way - Totalofgroups */\r\n\t\"cXCr\":\"celkem skupin\",\r\n\t/* schema ANOVA one-way - betweenGroups */\r\n\t\"thNv\":\"meziskuponové efekty\",\r\n\t/* schema ANOVA one-way - sumOfSquares */\r\n\t\"SqTd\":\"suma čtverců\",\r\n\t/* schema ANOVA one-way - withinGroups */\r\n\t\"GiRP\":\"vnitroskupinové efekty\",\r\n\t/* schema general output protocol label */\r\n\t\"IIlO\":\"protokol výstupu metody\",\r\n\t/* fce matrix - Kendall correlation coefficient (title) */\r\n\t\"mgBC\":\"Kendallův korelační koeficient\",\r\n\t/* fce matrix - Kendall correlation coefficient (description) */\r\n\t\"VOmC\":\"Vrátí statistický protokol Kendallova korelačního koeficientu Tau-B. Podobně jako v SPSS je coby korelační koeficient (r) vrácena hodota statistiky Tau-B, nikoliv Tau-b, jak je metoda obvykle nazývána.\",\r\n\t/* schema - Kendall correl - r */\r\n\t\"mgBA\":\"Kendallův korelační koeficient Tau-a\",\r\n\t/* schema - linear regression - r2 */\r\n\t\"klvS\": \"koeficient determinace\",\r\n\t/* schema - linear regression - beta0 */\r\n\t\"slkz\": \"konstanta beta0 (nezávislá na x)\",\r\n\t/* schema - linear regression - beta1 */\r\n\t\"XfCm\": \"konstanta beta1 (závislá na x)\",\r\n\t/* schema - linear regression - function */\r\n\t\"FeBv\": \"funkční model\",\r\n\t/* schema - function type */\r\n\t\"GPHk\": \"funkce\",\r\n\t/* fce matrix partial correlation (title) */\r\n\t\"xfSf\":\"koeficient parciální korelace\",\r\n\t/* fce matrix partial correlation (description) */\r\n\t\"UcfZ\":\"Parciální korelace je statistická metoda, která vám umožňuje zjistit, jaký je vztah mezi dvěma proměnnými, přičemž se zohlední vliv třetí proměnné. To je užitečné, pokud chcete zjistit, zda existuje přímý vztah mezi dvěma proměnnými, aniž byste byli ovlivněni vlivem jiných proměnných. Například, pokud chcete zjistit, zda existuje vztah mezi úrovní školení a úspěšností v práci, může být užitečné zohlednit také vliv věku nebo pohlaví. V takovém případě byste mohli použít parciální korelaci k zjištění vztahu mezi úrovní školení a úspěšností v práci při zohlednění vlivu věku a pohlaví. Parciální korelace se počítá pomocí vzorce, který se odvíjí od korelačního koeficientu Pearsona. Je důležité si uvědomit, že parciální korelace neznamená causaci, tj. že jedna proměnná nezpůsobuje druhou, ale pouze ukazuje, že existuje mezi nimi určitá souvislost. Zdroj: https://chat.openai.com/chat.\",\r\n\t/* fce matrix partial correlation (3rd argument - z) */\r\n\t\"gxOb\":\"kontrolní proměnná\",\r\n\t/* fce matrix binary correlation (title) */\r\n\t\"AagR\":\"biseriální korelace\",\r\n\t/* fce matrix binary correlation (description) */\r\n\t\"OMiA\":\"Biseriální korelace je statistická metoda, která se používá k vyhodnocení vztahu mezi dvěma binárními proměnnými (tj. proměnnými, které mohou mít pouze dvě možné hodnoty, například 'ano' nebo 'ne'). Binární proměnné se často používají v sociálních vědách, například při zkoumání vztahu mezi vzděláním a zaměstnáním nebo mezi kouřením a zdravím. Biseriální korelace se počítá pomocí vzorce, který se odvíjí od korelačního koeficientu Pearsona. Je důležité si uvědomit, že biseriální korelace neznamená causaci, tj. že jedna proměnná nezpůsobuje druhou, ale pouze ukazuje, že existuje mezi nimi určitá souvislost.\",\r\n\t/* vector validator error - not acccepted type of vector */\r\n\t\"pwfO\": \"Pro argument ${name} (${title}) nelze použít vektor typu ${type}.\",\r\n\t/* matrix method - contingency (title) */\r\n\t\"gRix\": \"kontingence\",\r\n\t/* matrix method - contingency (description) */\r\n\t\"fqwd\":\"Vrátí statistický protokol kontingence. Parametry metody jsou a) řádková proměnná, b) sloupcová proměnná a volitelně c) četnost skupiny a/b (pokud je prázdná, bere se, že četnost průniku je 1). Výstupem metody jsou jak statistiky kontingence (chí^2), Cramérovo V, Pearsonovo C, ad)..\",\r\n\t/* matrix method - contingency - x parameter */\r\n\t\"gLRN\":\"řádková proměnná\",\r\n\t/* matrix method - contingency - y parameter */\r\n\t\"bpjC\":\"sloupcová proměnná\",\r\n\t/* matrix method - contingency - frequency */\r\n\t\"fqUi\":\"proměnná četnosti\",\r\n\t/* matrix method - contingecy - output schema - phi^2 */\r\n\t\"GfeP\":\"chí^2\",\r\n\t/* matrix method - contingecy - output schema - p */\r\n\t\"sDgR\":\"hladina významnosti (dvoustranná)\",\r\n\t/* matrix method - contingecy - output schema - V */\r\n\t\"VYQH\":\"Cramérovo V\",\r\n\t/* matrix method - contingecy - output schema - C */\r\n\t\"BUaN\":\"Pearsonovo C\",\r\n\t/* matrix method - general regression - title */\r\n\t\"vlCA\":\"regrese\",\r\n\t/* matrix method - general regression - description */\r\n\t\"dzFE\":\"Nějaké povídání o regresi. Parametry (x,y,typ).\",\r\n\t/* matrix method - general regression - param type - linear */\r\n\t\"Cpsw\":\"lineární\",\r\n\t/* matrix method - general regression - param type - log */\r\n\t\"UtZD\":\"logaritmovaný\",\r\n\t/* matrix method - general regression - param type - hyperbole */\r\n\t\"SCOx\":\"hyperbolický\",\r\n\t/* matrix method - general regression - param type - exponential */\r\n\t\"QaJi\":\"exponenciální\",\r\n\t/* matrix method - general regression - param type - quadratic */\r\n\t\"HUMA\":\"kvadratický\",\r\n\t/* matrix method - general regression - param type - title */\r\n\t\"OBml\":\"regresní model\",\r\n\t/* matrix method - general regression - output schema - r2 */\r\n\t\"VqBH\":\"R2 (koeficient determinace)\",\r\n\t/* matrix method - general regression - output schema - beta0 */\r\n\t\"TDpu\":\"konstanta (beta0)\",\r\n\t/* matrix method - general regression - output schema - beta1 */\r\n\t\"eFcW\":\"koeficient (beta1)\",\r\n\t/* matrix analysis validator error- class 2 - vector not matching allowed types */\r\n\t\"nQvK\":\"Vektor typu ${type} nelze v dané sadě vektorů použít.\",\r\n\t/* matrix method - t-test - T output schema */\r\n\t\"cBNP\":\"T hodnota testu\",\r\n\t/* argument error - only matrix or array of vectors is accepted as an argument */\r\n\t\"eJTP\":\"Hodnotou parametru ${title} (${name}) může být pouze sada vektorů nebo jejich identifikátorů (i v případě, že by se mělo pouze o jediný prvek v sadě).\",\r\n\t/* argument error - minimum vectors in array - not enough */\r\n\t\"kdjd\":\"Minimální počet vektorů v sadě pro parametr '${title}' (${name}) je ${value}, zadáno ${param}.\",\r\n\t/* argument error - minimum vectors in array - too many */\r\n\t\"qkPg\":\"Maximální počet vektorů v sadě pro parametr '${title}' (${name}) je ${value}, zadáno ${param}.\",\r\n\t/* filter - vectorNotEmptyIndependent */\r\n\t\"CPwN\":\"Odstraní z vektorů prázdné hodnoty, aniž by odstranění řádku v jednom vektoru ovlivnilo jiný vektor.\",\r\n\t/* Matrix fce Mann-Whitney - output - U (title) */\r\n\t\"TkNf\":\"U (hodnota testu)\",\r\n\t/* Matrix fce Mann-Whitney - output - Z (title) */\r\n\t\"Shpv\":\"Z (hodnota testu)\",\r\n\t\"DFpw\":\"\",\r\n\t\"WssH\":\"\",\r\n\t\"BCgp\":\"\",\r\n\t\"NKYD\":\"\",\r\n\t\"FULb\":\"\",\r\n\t\"gDGz\":\"\",\r\n\t\"EbTp\":\"\",\r\n\t\"GMrh\":\"\",\r\n\t\"exRc\":\"\",\r\n\t\"sTNG\":\"\",\r\n\t\"hMVQ\":\"\",\r\n\t\"MQfp\":\"\",\r\n\t\"hLlf\":\"\",\r\n\t\"YKHY\":\"\",\r\n\t\"XeVc\":\"\",\r\n\t\"cPIB\":\"\",\r\n\t\"VAiC\":\"\",\r\n\t\"txdf\":\"\",\r\n\t\"sPsU\":\"\",\r\n\t\"agJN\":\"\",\r\n\t\"QpiM\":\"\",\r\n\t\"VVtv\":\"\",\r\n\t\"cgcJ\":\"\",\r\n\t\"PeOb\":\"\",\r\n\t\"QmKW\":\"\",\r\n\t\"xXRl\":\"\",\r\n\t\"uIrV\":\"\",\r\n\t\"xLdd\":\"\",\r\n\t\"jYBe\":\"\",\r\n\t\"eakC\":\"\",\r\n\t\"ifCs\":\"\",\r\n\t\"NKzb\":\"\",\r\n\t\"dCGa\":\"\",\r\n\t\"ZRhA\":\"\",\r\n\t\"GOke\":\"\",\r\n\t\"wBOT\":\"\",\r\n\t\"MsxT\":\"\",\r\n\t\"tyog\":\"\",\r\n\t\"rUTj\":\"\",\r\n\t\"UuRW\":\"\",\r\n\t\"nRgd\":\"\",\r\n\t\"cAzr\":\"\",\r\n\t\"yVdh\":\"\",\r\n\t\"Wcwa\":\"\",\r\n\t\"ohhe\":\"\",\r\n\t\"syGg\":\"\",\r\n\t\"WbBF\":\"\",\r\n\t\"BKtX\":\"\",\r\n\t\"WqLm\":\"\",\r\n\t\"tcnM\":\"\",\r\n\t\"xRAw\":\"\",\r\n\t\"YyON\":\"\",\r\n\t\"Brko\":\"\",\r\n\t\"GnaG\":\"\",\r\n\t\"QcJF\":\"\",\r\n\t\"bSaM\":\"\",\r\n\t\"LyRF\":\"\",\r\n\t\"mwNO\":\"\",\r\n\t\"MiLb\":\"\",\r\n\t\"RvHo\":\"\",\r\n\t\"Zgsn\":\"\",\r\n\t\"xYUA\":\"\",\r\n\t\"MpHi\":\"\",\r\n\t\"qzDa\":\"\",\r\n\t\"Neku\":\"\",\r\n\t\"XrAO\":\"\",\r\n\t\"znlT\":\"\",\r\n\t\"Fdtw\":\"\",\r\n\t\"ckrC\":\"\",\r\n\t\"SaNj\":\"\",\r\n\t\"igbK\":\"\",\r\n\t\"objF\":\"\",\r\n\t\"nllu\":\"\",\r\n\t\"JdeF\":\"\",\r\n\t\"RrBA\":\"\",\r\n\t\"wkJe\":\"\",\r\n\t\"JNLI\":\"\",\r\n\t\"jSCh\":\"\",\r\n\t\"sYdC\":\"\",\r\n\t\"iWDX\":\"\",\r\n\t\"kqOl\":\"\",\r\n\t\"wdOw\":\"\",\r\n\t\"LQEC\":\"\",\r\n\t\"FaMT\":\"\",\r\n\t\"XILJ\":\"\",\r\n\t\"oDZk\":\"\",\r\n\t\"EFBG\":\"\",\r\n\t\"zvqJ\":\"\",\r\n\t\"UVSp\":\"\",\r\n\t\"kdLZ\":\"\",\r\n\t\"PxoH\":\"\",\r\n\t\"EkAb\":\"\",\r\n\t\"mcyF\":\"\",\r\n\t\"ZMaL\":\"\",\r\n\t\"uQYR\":\"\",\r\n\t\"iYhs\":\"\",\r\n\t\"FPQV\":\"\",\r\n\t\"gYOG\":\"\",\r\n\t\"qenf\":\"\",\r\n\t\"jiml\":\"\",\r\n\t\"Lltl\":\"\",\r\n\t\"vcQf\":\"\",\r\n\t\"hjpG\":\"\",\r\n\t\"lGLC\":\"\",\r\n\t\"Tsrx\":\"\",\r\n\t\"tpmF\":\"\",\r\n\t\"fvkl\":\"\",\r\n\t\"qMlW\":\"\",\r\n\t\"oApX\":\"\",\r\n\t\"IpQV\":\"\",\r\n\t\"RTTR\":\"\",\r\n\t\"APXa\":\"\",\r\n\t\"Yafr\":\"\",\r\n\t\"duNO\":\"\",\r\n\t\"Odkw\":\"\",\r\n\t\"igJr\":\"\",\r\n\t\"rjTE\":\"\",\r\n\t\"xoFk\":\"\",\r\n\t\"bbcy\":\"\",\r\n\t\"vHJz\":\"\",\r\n\t\"KJyZ\":\"\",\r\n\t\"vNao\":\"\",\r\n\t\"RFDc\":\"\",\r\n\t\"IMKy\":\"\",\r\n\t\"Lqfv\":\"\",\r\n\t\"yseT\":\"\",\r\n\t\"zqpv\":\"\",\r\n\t\"zldU\":\"\",\r\n\t\"UQhS\":\"\",\r\n\t\"FZGq\":\"\",\r\n\t\"KyCE\":\"\",\r\n\t\"PVGu\":\"\",\r\n\t\"dxxA\":\"\",\r\n\t\"goxv\":\"\",\r\n\t\"vxNy\":\"\",\r\n\t\"AGuD\":\"\",\r\n\t\"vEJL\":\"\",\r\n\t\"uRoO\":\"\",\r\n\t\"UajD\":\"\",\r\n\t\"Mpby\":\"\",\r\n\t\"XyPL\":\"\",\r\n\t\"toLR\":\"\",\r\n\t\"osiH\":\"\",\r\n\t\"Aade\":\"\",\r\n\t\"CQsD\":\"\",\r\n\t\"ePCE\":\"\",\r\n\t\"OsXm\":\"\",\r\n\t\"aDoq\":\"\",\r\n\t\"cNml\":\"\",\r\n\t\"NiHL\":\"\",\r\n\t\"XWeh\":\"\",\r\n\t\"pxmx\":\"\",\r\n\t\"pjVt\":\"\",\r\n\t\"UwSY\":\"\",\r\n\t\"gckA\":\"\",\r\n\t\"EgJH\":\"\",\r\n\t\"VRmE\":\"\",\r\n\t\"kMHu\":\"\",\r\n\t\"eiKB\":\"\",\r\n\t\"qsEo\":\"\",\r\n\t\"aJdU\":\"\",\r\n\t\"DmfV\":\"\",\r\n\t\"tawy\":\"\",\r\n\t\"PwiB\":\"\",\r\n\t\"ZFXj\":\"\",\r\n\t\"zGbV\":\"\",\r\n\t\"hJKl\":\"\",\r\n\t\"hjMf\":\"\",\r\n\t\"RXeL\":\"\",\r\n\t\"siSg\":\"\",\r\n\t\"Dcpk\":\"\",\r\n\t\"mRkH\":\"\",\r\n\t\"awIw\":\"\",\r\n\t\"gboy\":\"\",\r\n\t\"NzFl\":\"\",\r\n\t\"XfmV\":\"\",\r\n\t\"jasY\":\"\",\r\n\t\"yxIz\":\"\",\r\n\t\"sGCL\":\"\",\r\n\t\"IDAe\":\"\",\r\n\t\"jFto\":\"\",\r\n\t\"kQaN\":\"\",\r\n\t\"ixUI\":\"\",\r\n\t\"svjk\":\"\",\r\n\t\"Geai\":\"\",\r\n\t\"JIGY\":\"\",\r\n\t\"mMpc\":\"\",\r\n\t\"RgAJ\":\"\",\r\n\t\"KkvR\":\"\",\r\n\t\"XEIl\":\"\",\r\n\t\"Pmso\":\"\",\r\n\t\"MJny\":\"\",\r\n\t\"dvdg\":\"\",\r\n\t\"covo\":\"\",\r\n\t\"HKxl\":\"\",\r\n\t\"bApu\":\"\",\r\n\t\"OjSY\":\"\",\r\n\t\"aqUx\":\"\",\r\n\t\"vaZr\":\"\",\r\n\t\"EcyL\":\"\",\r\n\t\"GfVT\":\"\",\r\n\t\"iXzL\":\"\",\r\n\t\"PgdG\":\"\",\r\n\t\"BbZT\":\"\",\r\n\t\"eEuz\":\"\",\r\n\t\"GLlt\":\"\",\r\n\t\"BbyQ\":\"\",\r\n\t\"dikA\":\"\",\r\n\t\"InsY\":\"\",\r\n\t\"cnjO\":\"\",\r\n\t\"BXSA\":\"\",\r\n\t\"jHKY\":\"\",\r\n\t\"ejHu\":\"\",\r\n\t\"GihW\":\"\",\r\n\t\"dlbb\":\"\",\r\n\t\"YBNh\":\"\",\r\n\t\"OKhg\":\"\",\r\n\t\"lHSg\":\"\",\r\n\t\"wHoC\":\"\",\r\n\t\"rZKB\":\"\",\r\n\t\"YSWk\":\"\",\r\n\t\"HUiZ\":\"\",\r\n\t\"DjZq\":\"\",\r\n\t\"Nauk\":\"\",\r\n\t\"PUur\":\"\",\r\n\t\"rndi\":\"\",\r\n\t\"utiy\":\"\",\r\n\t\"qDOT\":\"\",\r\n\t\"pFvB\":\"\",\r\n\t\"VzBd\":\"\",\r\n\t\"sMdN\":\"\",\r\n\t\"siXZ\":\"\",\r\n\t\"NENC\":\"\",\r\n\t\"DWaL\":\"\",\r\n\t\"wlfJ\":\"\",\r\n\t\"JBuT\":\"\",\r\n\t\"qMOD\":\"\",\r\n\t\"VOGY\":\"\",\r\n\t\"RSIz\":\"\",\r\n\t\"UlEe\":\"\",\r\n\t\"Zhan\":\"\",\r\n\t\"KCji\":\"\",\r\n\t\"cFAS\":\"\",\r\n\t\"lNrM\":\"\",\r\n\t\"bwXe\":\"\",\r\n\t\"tClf\":\"\",\r\n\t\"GDtI\":\"\",\r\n\t\"KBPF\":\"\",\r\n\t\"UVvc\":\"\",\r\n\t\"xuUH\":\"\",\r\n\t\"NRzz\":\"\",\r\n\t\"aSOQ\":\"\",\r\n\t\"RIhu\":\"\",\r\n\t\"FFHC\":\"\",\r\n\t\"iaDt\":\"\",\r\n\t\"brml\":\"\",\r\n\t\"vmqT\":\"\",\r\n\t\"VpHV\":\"\",\r\n\t\"ggyr\":\"\",\r\n\t\"tbWs\":\"\",\r\n\t\"UaRl\":\"\",\r\n\t\"gpyD\":\"\",\r\n\t\"jVDz\":\"\",\r\n\t\"dPxL\":\"\",\r\n\t\"WrgY\":\"\",\r\n\t\"LfQY\":\"\",\r\n\t\"qkPl\":\"\",\r\n\t\"nJjE\":\"\",\r\n\t\"sFSn\":\"\",\r\n\t\"VokI\":\"\",\r\n\t\"EgEb\":\"\",\r\n\t\"pnNE\":\"\",\r\n\t\"sZPy\":\"\",\r\n\t\"vpml\":\"\",\r\n\t\"qRIn\":\"\",\r\n\t\"geKf\":\"\",\r\n\t\"bqUW\":\"\",\r\n\t\"EFxn\":\"\",\r\n\t\"XEge\":\"\",\r\n\t\"JPac\":\"\",\r\n\t\"NbCu\":\"\",\r\n\t\"nExV\":\"\",\r\n\t\"edad\":\"\",\r\n\t\"IctM\":\"\",\r\n\t\"PMba\":\"\",\r\n\t\"SNmU\":\"\",\r\n\t\"jEsW\":\"\",\r\n\t\"lZbf\":\"\",\r\n\t\"uIhX\":\"\",\r\n\t\"Plmo\":\"\",\r\n\t\"mnIQ\":\"\",\r\n\t\"yUpW\":\"\",\r\n\t\"fYCX\":\"\",\r\n\t\"nLqR\":\"\",\r\n\t\"iFee\":\"\",\r\n\t\"NteU\":\"\",\r\n\t\"mIGh\":\"\",\r\n\t\"AItJ\":\"\",\r\n\t\"AsXg\":\"\",\r\n\t\"PqwU\":\"\",\r\n\t\"YzUE\":\"\",\r\n\t\"XBIf\":\"\",\r\n\t\"wESH\":\"\",\r\n\t\"RxSx\":\"\",\r\n\t\"fxgP\":\"\",\r\n\t\"aMvS\":\"\",\r\n\t\"MgtJ\":\"\",\r\n\t\"fleC\":\"\",\r\n\t\"NvIT\":\"\",\r\n\t\"atRr\":\"\",\r\n\t\"IsFg\":\"\",\r\n\t\"LxQJ\":\"\",\r\n\t\"FJQS\":\"\",\r\n\t\"IhjG\":\"\",\r\n\t\"MgDa\":\"\",\r\n\t\"xeEP\":\"\",\r\n\t\"dVJO\":\"\",\r\n\t\"MFWa\":\"\",\r\n\t\"gTqh\":\"\",\r\n\t\"NXcC\":\"\",\r\n\t\"TFnm\":\"\",\r\n\t\"edFF\":\"\",\r\n\t\"oLVx\":\"\",\r\n\t\"qXkz\":\"\",\r\n\t\"Uuae\":\"\",\r\n\t\"LGUC\":\"\",\r\n\t\"DoCn\":\"\",\r\n\t\"nBUm\":\"\",\r\n\t\"yDkF\":\"\",\r\n\t\"AASK\":\"\",\r\n\t\"KDZt\":\"\",\r\n\t\"sKgP\":\"\",\r\n\t\"mXWx\":\"\",\r\n\t\"oYvN\":\"\",\r\n\t\"xNvX\":\"\",\r\n\t\"lbnZ\":\"\",\r\n\t\"lZMP\":\"\",\r\n\t\"wWtU\":\"\",\r\n\t\"KSit\":\"\",\r\n\t\"LDhf\":\"\",\r\n\t\"Liod\":\"\",\r\n\t\"cbre\":\"\",\r\n\t\"VrpM\":\"\",\r\n\t\"BliO\":\"\",\r\n\t\"RPvv\":\"\",\r\n\t\"tsEx\":\"\",\r\n\t\"nYwU\":\"\",\r\n\t\"sPRd\":\"\",\r\n\t\"TAUq\":\"\",\r\n\t\"qMWC\":\"\",\r\n\t\"uvkt\":\"\",\r\n\t\"dVSa\":\"\",\r\n\t\"fSEV\":\"\",\r\n\t\"uIRg\":\"\",\r\n\t\"vJgA\":\"\",\r\n\t\"FAxO\":\"\",\r\n\t\"qhla\":\"\",\r\n\t\"fpHj\":\"\",\r\n\t\"GTun\":\"\",\r\n\t\"umbv\":\"\",\r\n\t\"mspT\":\"\",\r\n\t\"bIOY\":\"\",\r\n\t\"AGte\":\"\",\r\n\t\"kzRf\":\"\",\r\n\t\"tXDq\":\"\",\r\n\t\"vbia\":\"\",\r\n\t\"chKt\":\"\",\r\n\t\"JUMz\":\"\",\r\n\t\"cpJN\":\"\",\r\n\t\"bZbi\":\"\",\r\n\t\"LLfb\":\"\",\r\n\t\"VXTQ\":\"\",\r\n\t\"FNuW\":\"\",\r\n\t\"WDBw\":\"\",\r\n\t\"rPMC\":\"\",\r\n\t\"yRWz\":\"\",\r\n\t\"APAN\":\"\",\r\n\t\"Zmfl\":\"\",\r\n\t\"VVRk\":\"\",\r\n\t\"qlRy\":\"\",\r\n\t\"VohG\":\"\",\r\n\t\"lbFr\":\"\",\r\n\t\"GPSz\":\"\",\r\n\t\"HBny\":\"\",\r\n\t\"ZopD\":\"\",\r\n\t\"vRpT\":\"\",\r\n\t\"jnak\":\"\",\r\n\t\"JMjU\":\"\",\r\n\t\"juQM\":\"\",\r\n\t\"cZnA\":\"\",\r\n\t\"JJzc\":\"\",\r\n\t\"xfbl\":\"\",\r\n\t\"YQrr\":\"\",\r\n\t\"EhbN\":\"\",\r\n\t\"DFWm\":\"\",\r\n\t\"iAJc\":\"\",\r\n\t\"AXYf\":\"\",\r\n\t\"DjGW\":\"\",\r\n\t\"fCnU\":\"\",\r\n\t\"sudM\":\"\",\r\n\t\"OoFq\":\"\",\r\n\t\"goTo\":\"\",\r\n\t\"wZQm\":\"\",\r\n\t\"rzkA\":\"\",\r\n\t\"oSXy\":\"\",\r\n\t\"ZUzW\":\"\",\r\n\t\"rgXJ\":\"\",\r\n\t\"ujLC\":\"\",\r\n\t\"XbCR\":\"\",\r\n\t\"JUiD\":\"\",\r\n\t\"HvDm\":\"\",\r\n\t\"IeUk\":\"\",\r\n\t\"VtTc\":\"\",\r\n\t\"OXqs\":\"\",\r\n\t\"XafN\":\"\",\r\n\t\"Cegv\":\"\",\r\n\t\"PgXW\":\"\",\r\n\t\"Puec\":\"\",\r\n\t\"qcwa\":\"\",\r\n\t\"eFda\":\"\",\r\n\t\"LMLg\":\"\",\r\n\t\"nLDH\":\"\",\r\n\t\"Jvyg\":\"\",\r\n\t\"LlTN\":\"\",\r\n\t\"TGcq\":\"\",\r\n\t\"RFNc\":\"\",\r\n\t\"WxlW\":\"\",\r\n\t\"ywMg\":\"\",\r\n\t\"jnLS\":\"\",\r\n\t\"gTEo\":\"\",\r\n\t\"pfwC\":\"\",\r\n\t\"QRlp\":\"\",\r\n\t\"txbq\":\"\",\r\n\t\"vgLr\":\"\",\r\n\t\"lXRZ\":\"\",\r\n\t\"NWqw\":\"\",\r\n\t\"Cpkz\":\"\",\r\n\t\"LtjM\":\"\",\r\n\t\"YPYb\":\"\",\r\n\t\"NXMy\":\"\",\r\n\t\"Kous\":\"\",\r\n\t\"MgID\":\"\"\r\n}\n\n//# sourceURL=webpack://retusa/./locales/cs.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./index.js");
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});